<?xml version="1.0"?>
<tests:TestSuite xmlns:tests="http://lang.whole.org/Tests">
    <tests:PackageName value="org.whole.lang.grammars.util.tests"/>
    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
    <tests:Name value="GrammarsTestSuite"/>
    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
    <tests:FilterFamilies initialCapacity="0"/>
    <tests:TestCases initialCapacity="5">
        <tests:TestCase>
            <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
            <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
            <tests:Name value="GrammarsNormalizerVisitorTest"/>
            <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
            <tests:Aspects initialCapacity="0"/>
            <tests:Tests initialCapacity="12">
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testNormalizationRules"/>
                    <tests:TestStatements initialCapacity="3">
                        <tests:AssertThat>
                            <workflows:InvokeOperation xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="normalize grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="LanguageNameGrammar"/>
                                        <grammars:URI value="http://lang.whole.org/LanguageName"/>
                                        <grammars:NonTerminal value="NT_DATA1"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="0"/>
                                        <grammars:Productions initialCapacity="7">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA1"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA2"/>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA3"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA4"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="pattern"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="literal"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:Empty>
                                        <grammars:Literal value=""/>
                                        </grammars:Empty>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA4_AS"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="pattern"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="literal"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:Empty>
                                        <grammars:Literal value=""/>
                                        </grammars:Empty>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA4_PROD1"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="pattern"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="literal"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA4Prod1"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Empty>
                                        <grammars:Literal value=""/>
                                        </grammars:Empty>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA4_PROD2"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="pattern"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="literal"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA4Prod2"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:Empty>
                                        <grammars:Literal value=""/>
                                        </grammars:Empty>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/LanguageNameGrammar"/>
                                        <grammars:Namespace value="org.whole.lang.languagename"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                                <workflows:Operation value="NORMALIZER"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:InvokeOperation>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="LanguageNameGrammar"/>
                                        <grammars:URI value="http://lang.whole.org/LanguageName"/>
                                        <grammars:NonTerminal value="NT_DATA1"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="2">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="pattern"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="literal"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:Empty>
                                        <grammars:Literal value=""/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="10">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA1"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA2"/>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA3"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA4"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA4_AS"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA4_PROD1"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="DATA4Prod1"/>
                                        <grammars:Name value="data4Prod1"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA4_PROD2"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="DATA4Prod2"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA4Prod1"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA4Prod2"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/LanguageNameGrammar"/>
                                        <grammars:Namespace value="org.whole.lang.languagename"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                        <tests:AssertThat>
                            <workflows:InvokeOperation xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="normalize grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="LanguageNameGrammar"/>
                                        <grammars:URI value="http://lang.whole.org/LanguageName"/>
                                        <grammars:NonTerminal value="NT_DATA5"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="0"/>
                                        <grammars:Productions initialCapacity="7">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA5"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA5_AS"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:As>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:Name value="namex"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA5_PROD1"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA5Prod1"/>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA5_PROD2"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:As>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA5Prod2"/>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA6"/>
                                        <grammars:Split>
                                        <grammars:BySize value="12"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="pattern"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="literal"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA6_PROD1"/>
                                        <grammars:Split>
                                        <grammars:BySize value="12"/>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA6Prod1"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="pattern"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="literal"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Split>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA7"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="pattern"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="literal"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Split>
                                        <grammars:BySize value="12"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="pattern"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="literal"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/LanguageNameGrammar"/>
                                        <grammars:Namespace value="org.whole.lang.languagename"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                                <workflows:Operation value="NORMALIZER"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:InvokeOperation>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="LanguageNameGrammar"/>
                                        <grammars:URI value="http://lang.whole.org/LanguageName"/>
                                        <grammars:NonTerminal value="NT_DATA5"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="1">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="pattern"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="literal"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="11">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA5"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA5_AS"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Namex"/>
                                        <grammars:Name value="namex"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA5_PROD1"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:As>
                                        <grammars:NonTerminal value="DATA5Prod1"/>
                                        <grammars:Name value="data5Prod1"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA5_PROD2"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:As>
                                        <grammars:NonTerminal value="DATA5Prod2"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA6"/>
                                        <grammars:Split>
                                        <grammars:BySize value="12"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA6_PROD1"/>
                                        <grammars:Split>
                                        <grammars:BySize value="12"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="DATA6Prod1"/>
                                        <grammars:Name value="data6Prod1"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA7"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:Split>
                                        <grammars:BySize value="12"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Namex"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA5Prod1"/>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA5Prod2"/>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA6Prod1"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/LanguageNameGrammar"/>
                                        <grammars:Namespace value="org.whole.lang.languagename"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                        <tests:AssertThat>
                            <workflows:InvokeOperation xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="normalize grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="LanguageNameGrammar"/>
                                        <grammars:URI value="http://lang.whole.org/LanguageName"/>
                                        <grammars:NonTerminal value="A"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="0"/>
                                        <grammars:Productions initialCapacity="9">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="A"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="a"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="B"/>
                                        </grammars:Repeat>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="b"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="b"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="B"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="c"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="c"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="A"/>
                                        <grammars:NonTerminal value="C"/>
                                        </grammars:Choose>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="d"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="d"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="C"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="e"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="e"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="f"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="f"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="D"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="a"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="B"/>
                                        </grammars:Repeat>
                                        </grammars:Split>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="b"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="b"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DD"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="a"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="a"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="B"/>
                                        </grammars:Repeat>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="b"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="b"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="b"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="b"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="E"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="c"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="c"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Optional>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="A"/>
                                        <grammars:NonTerminal value="C"/>
                                        </grammars:Choose>
                                        </grammars:Optional>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="d"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="d"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="EE"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="c"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="c"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Optional>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="c"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="c"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="A"/>
                                        <grammars:NonTerminal value="C"/>
                                        </grammars:Choose>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="d"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="d"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        </grammars:Optional>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="d"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="d"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="F"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="e"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="e"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:When>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="a"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:When>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="f"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="f"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="G"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="e"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="e"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="g"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="g"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="h"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="h"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="f"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="f"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/LanguageNameGrammar"/>
                                        <grammars:Namespace value="org.whole.lang.languagename"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                                <workflows:Operation value="NORMALIZER"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:InvokeOperation>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="LanguageNameGrammar"/>
                                        <grammars:URI value="http://lang.whole.org/LanguageName"/>
                                        <grammars:NonTerminal value="A"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="8">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="a"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="b"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="b"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="c"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="c"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="d"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="d"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="e"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="e"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="f"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="f"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="g"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="g"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="h"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="h"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="12">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="A"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="B"/>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="B"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="A"/>
                                        <grammars:NonTerminal value="C"/>
                                        </grammars:Choose>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="C"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="D"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="B"/>
                                        </grammars:Repeat>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DD"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="B"/>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="E"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="E1"/>
                                        <grammars:Name value="e1"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="EE"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="EE1"/>
                                        <grammars:Name value="ee1"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="F"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:When>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:When>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="G"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="E1"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="A"/>
                                        <grammars:NonTerminal value="C"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="EE1"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="A"/>
                                        <grammars:NonTerminal value="C"/>
                                        </grammars:Choose>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/LanguageNameGrammar"/>
                                        <grammars:Namespace value="org.whole.lang.languagename"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testNormalizeTestGrammar1"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeOperation xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="normalize grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="TestGrammar1"/>
                                        <grammars:URI value="http://lang.whole.org/Test1"/>
                                        <grammars:NonTerminal value="CSVSimple"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="0"/>
                                        <grammars:Productions initialCapacity="20">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SingleLiteral"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="a literal terminal"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a literal terminal"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SinglePatternLiteral"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[0-9a-zA-Z]{6}[a-zA-Z]{2}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="abcedfgh"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="LiteralSequence"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="BEGIN"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="BEGIN"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[AB]"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="A"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[0-9]{2,5}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="666"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="(,[0-9]{2})*"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=",12,23,34"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="END"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="END"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SingleData"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DataSequence"/>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q(\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="("/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[AB]"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:Name value="f1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:Name value="f2"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=","/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=","/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:Name value="f3"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q)\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=")"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DataSequenceWithDataTypes"/>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q(\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="("/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="EF1"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[AB]"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="CHAR"/>
                                        </grammars:Production>
                                        <grammars:Name value="f1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="EF2"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Name value="f2"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=","/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=","/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="EF2"/>
                                        <grammars:Name value="f3"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q)\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=")"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="OptionalLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="a"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Optional>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="n optional"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="n optional"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Optional>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=" literal terminal"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" literal terminal"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="OptionalConcatenate"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="a"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Optional>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="n"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="n"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\s+"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="optional"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="optional"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        </grammars:Optional>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=" concatenate"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RepeatedLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="Message: "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="Message: "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Repeat>
                                        <grammars:Size value="1"/>
                                        <grammars:Size value="3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=" "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="bla"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="bla"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        </grammars:Repeat>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q.\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="."/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RepeatedOptionalLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="Message: "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="Message: "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Size value="3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=" "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="bla"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="bla"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Repeat>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q.\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="."/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RepeatedUnboundedLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="Message: "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="Message: "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=" "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="bla"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="bla"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Repeat>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q.\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="."/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChooseLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="My "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="My "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="dog"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="dog"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="cat"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="cat"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Choose>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q is sleeping.\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" is sleeping."/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChoosePolymorphic"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="My "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="My "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChooseType1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="dog"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="dog"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChooseType2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="cat"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="cat"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Choose>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q is sleeping.\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" is sleeping."/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChooseEnum"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="dog"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="dog"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Name value="DOG"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="cat"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="cat"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Name value="CAT"/>
                                        </grammars:As>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CSVSimple"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=".*\n"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a string, an int, a char, a double\\n"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\n"/>
                                        <commons:Resolver/>
                                        <grammars:Literal value="\n"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:As>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:Name value="AString"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=","/>
                                        <commons:Resolver/>
                                        <grammars:Literal value=", "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="INT"/>
                                        <grammars:Name value="AnInt"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=","/>
                                        <commons:Resolver/>
                                        <grammars:Literal value=", "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="CHAR"/>
                                        <grammars:Name value="AChar"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=","/>
                                        <commons:Resolver/>
                                        <grammars:Literal value=", "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="DOUBLE"/>
                                        <grammars:Name value="ADouble"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Repeat>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(?:&quot;)(.*)(?:&quot;)|[^&quot;,]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CHAR"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(?s)."/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="CHAR"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="INT"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([-+]?([0-9]++))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="FLOAT"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([-+]?([0-9]++(\.[0-9]*+)?)|(\.[0-9]++))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="FLOAT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DOUBLE"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([-+]?([0-9]++(\.[0-9]*+)?)|(\.[0-9]++))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="DOUBLE"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/TestGrammar1"/>
                                        <grammars:Namespace value="org.whole.lang.test1"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                                <workflows:Operation value="NORMALIZER"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:InvokeOperation>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="TestGrammar1"/>
                                        <grammars:URI value="http://lang.whole.org/Test1"/>
                                        <grammars:NonTerminal value="CSVSimple"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="27">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="a literal terminal"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a literal terminal"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[0-9a-zA-Z]{6}[a-zA-Z]{2}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="abcedfgh"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="BEGIN"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="BEGIN"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[AB]"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="A"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[0-9]{2,5}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="666"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="(,[0-9]{2})*"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=",12,23,34"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="END"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="END"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q(\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="("/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=","/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=","/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN9"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q)\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=")"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="a"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN11"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="n optional"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="n optional"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN12"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=" literal terminal"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" literal terminal"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN13"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="n"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN14"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\s+"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN15"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="optional"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="optional"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN16"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="Message: "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="Message: "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN17"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=" "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN18"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="bla"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="bla"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN19"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q.\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="."/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN20"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="My "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="My "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN21"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="dog"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="dog"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN22"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="cat"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="cat"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN23"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q is sleeping.\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" is sleeping."/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN24"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=".*\n"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a string, an int, a char, a double\\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN25"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\n"/>
                                        <commons:Resolver/>
                                        <grammars:Literal value="\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN26"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=","/>
                                        <commons:Resolver/>
                                        <grammars:Literal value=", "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="28">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SingleLiteral"/>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SinglePatternLiteral"/>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="LiteralSequence"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SingleData"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DataSequence"/>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="F1"/>
                                        <grammars:Name value="f1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="F2"/>
                                        <grammars:Name value="f2"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="F3"/>
                                        <grammars:Name value="f3"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN9"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DataSequenceWithDataTypes"/>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="EF1"/>
                                        <grammars:Name value="f1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="EF2"/>
                                        <grammars:Name value="f2"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="EF2"/>
                                        <grammars:Name value="f3"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN9"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="OptionalLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN11"/>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN12"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="OptionalConcatenate"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:Optional>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN13"/>
                                        <grammars:NonTerminal value="TOKEN14"/>
                                        <grammars:NonTerminal value="TOKEN15"/>
                                        </grammars:Concatenate>
                                        </grammars:Optional>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=" concatenate"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RepeatedLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN16"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="1"/>
                                        <grammars:Size value="3"/>
                                        <grammars:NonTerminal value="TOKEN17"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:NonTerminal value="TOKEN18"/>
                                        </grammars:Concatenate>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN19"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RepeatedOptionalLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN16"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Size value="3"/>
                                        <grammars:NonTerminal value="TOKEN17"/>
                                        <grammars:NonTerminal value="TOKEN18"/>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN19"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RepeatedUnboundedLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN16"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="TOKEN17"/>
                                        <grammars:NonTerminal value="TOKEN18"/>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN19"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChooseLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN20"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="TOKEN21"/>
                                        <grammars:NonTerminal value="TOKEN22"/>
                                        </grammars:Choose>
                                        <grammars:NonTerminal value="TOKEN23"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChoosePolymorphic"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN20"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="ChooseType1"/>
                                        <grammars:NonTerminal value="ChooseType2"/>
                                        </grammars:Choose>
                                        <grammars:NonTerminal value="TOKEN23"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChooseEnum"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:As>
                                        <grammars:NonTerminal value="TOKEN21"/>
                                        <grammars:Name value="DOG"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="TOKEN22"/>
                                        <grammars:Name value="CAT"/>
                                        </grammars:As>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CSVSimple"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:NonTerminal value="TOKEN24"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="TOKEN25"/>
                                        <grammars:NonTerminal value="CSVSimple1"/>
                                        </grammars:Repeat>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(?:&quot;)(.*)(?:&quot;)|[^&quot;,]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CHAR"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(?s)."/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="CHAR"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="INT"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([-+]?([0-9]++))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="FLOAT"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([-+]?([0-9]++(\.[0-9]*+)?)|(\.[0-9]++))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="FLOAT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DOUBLE"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([-+]?([0-9]++(\.[0-9]*+)?)|(\.[0-9]++))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="DOUBLE"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="F1"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[AB]"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="F2"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="F3"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="EF1"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[AB]"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="CHAR"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="EF2"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChooseType1"/>
                                        <grammars:NonTerminal value="TOKEN21"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChooseType2"/>
                                        <grammars:NonTerminal value="TOKEN22"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CSVSimple1"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:As>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:Name value="AString"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN26"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="INT"/>
                                        <grammars:Name value="AnInt"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN26"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="CHAR"/>
                                        <grammars:Name value="AChar"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN26"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="DOUBLE"/>
                                        <grammars:Name value="ADouble"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/TestGrammar1"/>
                                        <grammars:Namespace value="org.whole.lang.test1"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testNormalizeDataTypesGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeOperation xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="normalize grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="DataTypesGrammar"/>
                                        <grammars:URI value="http://tests.lang.whole.org/DataTypes"/>
                                        <grammars:NonTerminal value="DataTypes"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\p{javaWhitespace}*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="9">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="BOOLEAN"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[tT]rue|[fF]alse"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%b"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="INT"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([+-]?([0-9]+))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DECIMAL"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([+-]?([0-9]++[\.,][0-9]*+)|([\.,][0-9]++))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%f"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ISO_DATETIME"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{4}-[01][0-9]-[0-3][0-9]T[0-5][0-9]:[0-2][0-9]:[0-5][0-9]\.[0-9]{3}Z"/>
                                        <grammars:Category value="LITERAL"/>
                                        <commons:SameStageFragment>
                                        <workflows:InvokeJavaClassMethod>
                                        <workflows:Text value="to extended iso date time"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <workflows:StringLiteral value="org.whole.lang.util.StringUtils"/>
                                        <workflows:StringLiteral value="toExtendedISO8601DateTime(java.util.Date)"/>
                                        <workflows:Expressions initialCapacity="1">
                                        <workflows:Variable value="self"/>
                                        </workflows:Expressions>
                                        </workflows:InvokeJavaClassMethod>
                                        </commons:SameStageFragment>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATE"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-3][0-9]/[01][0-9]/[0-9]{4}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%1$td/%1$tm/%1$tY"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[^&quot;]*+"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="εINDENT"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\t"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="εSP"/>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="εNL"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="1">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DataTypes"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="εNL"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=";"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=";\n"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="εINDENT"/>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DataType"/>
                                        <grammars:Choose initialCapacity="7">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="EnumType"/>
                                        <grammars:Choose initialCapacity="3">
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="x"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="x"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="εSP"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="one"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="one"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <grammars:Name value="ONE"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="two"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="two"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Name value="TWO"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="three"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="three"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Name value="THREE"/>
                                        </grammars:As>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="BooleanLiteral"/>
                                        <grammars:NonTerminal value="BOOLEAN"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DecimalLiteral"/>
                                        <grammars:NonTerminal value="DECIMAL"/>
                                        <grammars:CustomDataType value="java.math.BigDecimal"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DateTimeLiteral"/>
                                        <grammars:NonTerminal value="ISO_DATETIME"/>
                                        <grammars:DataType value="DATE"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DateLiteral"/>
                                        <grammars:NonTerminal value="DATE"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IntLiteral"/>
                                        <grammars:NonTerminal value="INT"/>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&quot;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\&quot;"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="StringLiteral"/>
                                        <grammars:NonTerminal value="STRING"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&quot;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\&quot;"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Empty>
                                        <commons:SameStageFragment>
                                        <queries:Choose xmlns:queries="http://lang.whole.org/Queries" initialCapacity="2">
                                        <queries:If>
                                        <queries:TypeTest value="BooleanLiteral"/>
                                        <queries:StringLiteral value="&#10;&#10;&#10;"/>
                                        </queries:If>
                                        <queries:StringLiteral value=""/>
                                        </queries:Choose>
                                        </commons:SameStageFragment>
                                        </grammars:Empty>
                                        </grammars:Concatenate>
                                        </grammars:Repeat>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\n}"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://tests.whole.org/DataTypesGrammar"/>
                                        <grammars:Namespace value="org.whole.tests.datatypesgrammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                                <workflows:Operation value="NORMALIZER"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:InvokeOperation>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="DataTypesGrammar"/>
                                        <grammars:URI value="http://tests.lang.whole.org/DataTypes"/>
                                        <grammars:NonTerminal value="DataTypes"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\p{javaWhitespace}*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="18">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="BOOLEAN"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[tT]rue|[fF]alse"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%b"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="INT"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([+-]?([0-9]+))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DECIMAL"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([+-]?([0-9]++[\.,][0-9]*+)|([\.,][0-9]++))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%f"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ISO_DATETIME"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{4}-[01][0-9]-[0-3][0-9]T[0-5][0-9]:[0-2][0-9]:[0-5][0-9]\.[0-9]{3}Z"/>
                                        <grammars:Category value="LITERAL"/>
                                        <commons:SameStageFragment>
                                        <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                        <workflows:Text value="to extended iso date time"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <workflows:StringLiteral value="org.whole.lang.util.StringUtils"/>
                                        <workflows:StringLiteral value="toExtendedISO8601DateTime(java.util.Date)"/>
                                        <workflows:Expressions initialCapacity="1">
                                        <workflows:Variable value="self"/>
                                        </workflows:Expressions>
                                        </workflows:InvokeJavaClassMethod>
                                        </commons:SameStageFragment>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATE"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-3][0-9]/[01][0-9]/[0-9]{4}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%1$td/%1$tm/%1$tY"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[^&quot;]*+"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="εINDENT"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\t"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="εSP"/>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="εNL"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=";"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=";\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="x"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="x"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="one"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="one"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="two"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="two"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="three"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="three"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&quot;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\&quot;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:Empty>
                                        <commons:SameStageFragment>
                                        <queries:Choose xmlns:queries="http://lang.whole.org/Queries" initialCapacity="2">
                                        <queries:If>
                                        <queries:TypeTest value="BooleanLiteral"/>
                                        <queries:StringLiteral value="&#10;&#10;&#10;"/>
                                        </queries:If>
                                        <queries:StringLiteral value=""/>
                                        </queries:Choose>
                                        </commons:SameStageFragment>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\n}"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="9">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DataTypes"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:NonTerminal value="εNL"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="εINDENT"/>
                                        <grammars:NonTerminal value="DataType"/>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        </grammars:Concatenate>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="EnumType"/>
                                        <grammars:Choose initialCapacity="3">
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:NonTerminal value="εSP"/>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        </grammars:Concatenate>
                                        <grammars:Name value="ONE"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:Name value="TWO"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:Name value="THREE"/>
                                        </grammars:As>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="BooleanLiteral"/>
                                        <grammars:NonTerminal value="BOOLEAN"/>
                                        <grammars:DataType value="BOOLEAN"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DecimalLiteral"/>
                                        <grammars:NonTerminal value="DECIMAL"/>
                                        <grammars:CustomDataType value="java.math.BigDecimal"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DateTimeLiteral"/>
                                        <grammars:NonTerminal value="ISO_DATETIME"/>
                                        <grammars:DataType value="DATE"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DateLiteral"/>
                                        <grammars:NonTerminal value="DATE"/>
                                        <grammars:DataType value="DATE"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IntLiteral"/>
                                        <grammars:NonTerminal value="INT"/>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="StringLiteral"/>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DataType"/>
                                        <grammars:Choose initialCapacity="7">
                                        <grammars:NonTerminal value="EnumType"/>
                                        <grammars:NonTerminal value="BooleanLiteral"/>
                                        <grammars:NonTerminal value="DecimalLiteral"/>
                                        <grammars:NonTerminal value="DateTimeLiteral"/>
                                        <grammars:NonTerminal value="DateLiteral"/>
                                        <grammars:NonTerminal value="IntLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:NonTerminal value="StringLiteral"/>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        </grammars:Concatenate>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://tests.whole.org/DataTypesGrammar"/>
                                        <grammars:Namespace value="org.whole.tests.datatypesgrammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testNormalizeMessagesGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeOperation xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="normalize grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="MessagesGrammar"/>
                                        <grammars:URI value="http://test.lang.whole.org/Messages"/>
                                        <grammars:NonTerminal value="Messages"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\p{javaWhitespace}+"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="0"/>
                                        <grammars:Productions initialCapacity="6">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Messages"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="1"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Message"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Message"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:When>
                                        <grammars:Or>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="hd:"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="hd:"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Not>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="b"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="b"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Not>
                                        </grammars:Or>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="hd:"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="hd:"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:Name value="header"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:When>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\|\|"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="||"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="Body"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="!!"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="!!\n"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Body"/>
                                        <grammars:Choose initialCapacity="3">
                                        <grammars:When>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\d.*"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="num"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NumericBody"/>
                                        </grammars:When>
                                        <grammars:When>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\D.*"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="non_num"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NonNumericBody"/>
                                        </grammars:When>
                                        <grammars:NonTerminal value="OtherBody"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NumericBody"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="\d+"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NonNumericBody"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="OtherBody"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://tests.whole.org/MessagesGrammar"/>
                                        <grammars:Namespace value="org.whole.tests.messagesgrammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                                <workflows:Operation value="NORMALIZER"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:InvokeOperation>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="MessagesGrammar"/>
                                        <grammars:URI value="http://test.lang.whole.org/Messages"/>
                                        <grammars:NonTerminal value="Messages"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\p{javaWhitespace}+"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="6">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="hd:"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="hd:"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="b"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="b"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\|\|"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="||"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="!!"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="!!\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\d.*"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="num"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\D.*"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="non_num"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="7">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Messages"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="1"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Message"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Message"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:When>
                                        <grammars:Or>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:Not>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Not>
                                        </grammars:Or>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Header"/>
                                        <grammars:Name value="header"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:When>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Body"/>
                                        <grammars:Name value="body"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Body"/>
                                        <grammars:Choose initialCapacity="3">
                                        <grammars:When>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:NonTerminal value="NumericBody"/>
                                        </grammars:When>
                                        <grammars:When>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:NonTerminal value="NonNumericBody"/>
                                        </grammars:When>
                                        <grammars:NonTerminal value="OtherBody"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NumericBody"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="\d+"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NonNumericBody"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="OtherBody"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Header"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://tests.whole.org/MessagesGrammar"/>
                                        <grammars:Namespace value="org.whole.tests.messagesgrammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testNormalizeStateMachineGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeOperation xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="normalize grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="StateMachineGrammar"/>
                                        <grammars:URI value="http://tests.lang.whole.org/StateMachine"/>
                                        <grammars:NonTerminal value="StateMachine"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[ \n\r\t]*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="3">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\t"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="4">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="StateMachine"/>
                                        <grammars:Concatenate initialCapacity="10">
                                        <grammars:Split>
                                        <grammars:ByDelimiter>
                                        <grammars:RegExp value="end"/>
                                        </grammars:ByDelimiter>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="events"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="events"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Event"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="code"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Repeat>
                                        <grammars:Name value="events"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="end"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="end"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Split>
                                        <grammars:ByDelimiter>
                                        <grammars:RegExp value="end"/>
                                        </grammars:ByDelimiter>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="resetEvents"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="resetEvents"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        </grammars:Repeat>
                                        <grammars:Name value="resetEvents"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="end"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="end"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Split>
                                        <grammars:ByDelimiter>
                                        <grammars:RegExp value="end"/>
                                        </grammars:ByDelimiter>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="commands"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="commands"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Command"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="code"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Repeat>
                                        <grammars:Name value="commands"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="end"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="end"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="State"/>
                                        </grammars:Repeat>
                                        <grammars:Name value="states"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="State"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:Split>
                                        <grammars:ByDelimiter>
                                        <grammars:RegExp value="end"/>
                                        </grammars:ByDelimiter>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="state"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="state"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="actions"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="actions"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:NonTerminal value="ID"/>
                                        </grammars:Repeat>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <grammars:Name value="actions"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:As>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Transition"/>
                                        </grammars:Repeat>
                                        <grammars:Name value="transitions"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="end"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="end"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Transition"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="event"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="=&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="=&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="state"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z][a-zA-Z0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://tests.lang.whole.org/StateMachineGrammar"/>
                                        <grammars:Namespace value="org.whole.tests.statemachinegrammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                                <workflows:Operation value="NORMALIZER"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:InvokeOperation>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="StateMachineGrammar"/>
                                        <grammars:URI value="http://tests.lang.whole.org/StateMachine"/>
                                        <grammars:NonTerminal value="StateMachine"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[ \n\r\t]*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="12">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\t"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="events"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="events"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="end"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="end"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="resetEvents"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="resetEvents"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="commands"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="commands"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="state"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="state"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="actions"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="actions"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="=&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="=&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="12">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="StateMachine"/>
                                        <grammars:Concatenate initialCapacity="10">
                                        <grammars:Split>
                                        <grammars:ByDelimiter>
                                        <grammars:RegExp value="end"/>
                                        </grammars:ByDelimiter>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Events"/>
                                        <grammars:Name value="events"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Split>
                                        <grammars:ByDelimiter>
                                        <grammars:RegExp value="end"/>
                                        </grammars:ByDelimiter>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ResetEvents"/>
                                        <grammars:Name value="resetEvents"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Split>
                                        <grammars:ByDelimiter>
                                        <grammars:RegExp value="end"/>
                                        </grammars:ByDelimiter>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Commands"/>
                                        <grammars:Name value="commands"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="States"/>
                                        <grammars:Name value="states"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="State"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:Split>
                                        <grammars:ByDelimiter>
                                        <grammars:RegExp value="end"/>
                                        </grammars:ByDelimiter>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Actions"/>
                                        <grammars:Name value="actions"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Transitions"/>
                                        <grammars:Name value="transitions"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Transition"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="event"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="state"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z][a-zA-Z0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Event"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="code"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Events"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Event"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ResetEvents"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Command"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="code"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Commands"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Command"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="States"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="State"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Actions"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:NonTerminal value="ID"/>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Transitions"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Transition"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://tests.lang.whole.org/StateMachineGrammar"/>
                                        <grammars:Namespace value="org.whole.tests.statemachinegrammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testNormalizeStateMachine2Grammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeOperation xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="normalize grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="StateMachineGrammar"/>
                                        <grammars:URI value="http://tests.lang.whole.org/StateMachine2"/>
                                        <grammars:NonTerminal value="StateMachine"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[ \n\r\t]*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="3">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\t"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="4">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="StateMachine"/>
                                        <grammars:Concatenate initialCapacity="16">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="events"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="events"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Event"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="code"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Repeat>
                                        <grammars:Name value="events"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="end"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="end"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="resetEvents"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="resetEvents"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        </grammars:Repeat>
                                        <grammars:Name value="resetEvents"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="end"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="end"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="commands"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="commands"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Command"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="code"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Repeat>
                                        <grammars:Name value="commands"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="end"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="end"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="State"/>
                                        </grammars:Repeat>
                                        <grammars:Name value="states"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="State"/>
                                        <grammars:Concatenate initialCapacity="8">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="state"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="state"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="actions"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="actions"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:NonTerminal value="ID"/>
                                        </grammars:Repeat>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <grammars:Name value="actions"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:As>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Transition"/>
                                        </grammars:Repeat>
                                        <grammars:Name value="transitions"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="end"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="end"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Transition"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="event"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="=&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="=&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="state"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:When>
                                        <grammars:Not>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="end"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="end"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Not>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z][a-zA-Z0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:When>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://tests.lang.whole.org/StateMachine2Grammar"/>
                                        <grammars:Namespace value="org.whole.tests.statemachine2grammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                                <workflows:Operation value="NORMALIZER"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:InvokeOperation>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="StateMachineGrammar"/>
                                        <grammars:URI value="http://tests.lang.whole.org/StateMachine2"/>
                                        <grammars:NonTerminal value="StateMachine"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[ \n\r\t]*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="12">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\t"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="events"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="events"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="end"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="end"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="resetEvents"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="resetEvents"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="commands"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="commands"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="state"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="state"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="actions"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="actions"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="=&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="=&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="12">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="StateMachine"/>
                                        <grammars:Concatenate initialCapacity="16">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Events"/>
                                        <grammars:Name value="events"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ResetEvents"/>
                                        <grammars:Name value="resetEvents"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Commands"/>
                                        <grammars:Name value="commands"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="States"/>
                                        <grammars:Name value="states"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="State"/>
                                        <grammars:Concatenate initialCapacity="8">
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Actions"/>
                                        <grammars:Name value="actions"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Transitions"/>
                                        <grammars:Name value="transitions"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Transition"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="event"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="state"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:When>
                                        <grammars:Not>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Not>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z][a-zA-Z0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:When>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Event"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="code"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Events"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Event"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ResetEvents"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Command"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="code"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Commands"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Command"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="States"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="State"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Actions"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:NonTerminal value="ID"/>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Transitions"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Transition"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://tests.lang.whole.org/StateMachine2Grammar"/>
                                        <grammars:Namespace value="org.whole.tests.statemachine2grammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testNormalizeFamilyGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeOperation xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="normalize grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="FamilyGrammar"/>
                                        <grammars:URI value="http://oslo.examples.whole.org/Family"/>
                                        <grammars:NonTerminal value="Persons"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[ \n\r\t]*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="1">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z]+"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="1">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Persons"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=","/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=", "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Person"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="first"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="last"/>
                                        </grammars:As>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:NonTerminal value="Persons"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=";"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=";"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <grammars:Name value="children"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/FamilyGrammar"/>
                                        <grammars:Namespace value="org.whole.examples.familygrammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                                <workflows:Operation value="NORMALIZER"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:InvokeOperation>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="FamilyGrammar"/>
                                        <grammars:URI value="http://oslo.examples.whole.org/Family"/>
                                        <grammars:NonTerminal value="Persons"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[ \n\r\t]*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="5">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z]+"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=","/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=", "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=";"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=";"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="4">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Persons"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:NonTerminal value="Person"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="First"/>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Last"/>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Person"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:As>
                                        <grammars:NonTerminal value="First"/>
                                        <grammars:Name value="first"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Last"/>
                                        <grammars:Name value="last"/>
                                        </grammars:As>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="Persons"/>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        </grammars:Concatenate>
                                        <grammars:Name value="children"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/FamilyGrammar"/>
                                        <grammars:Namespace value="org.whole.examples.familygrammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testNormalizeMT3Grammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeOperation xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="normalize grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="MT3Grammar"/>
                                        <grammars:URI value="http://test.whole.org/MT3"/>
                                        <grammars:NonTerminal value="Message"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="2">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="LINE_SEPARATOR"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\r\n|[\n\r\u2028\u2029\u0085]"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value="\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="MSG_SEPARATOR"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=",(\r\n|[\n\r\u2028\u2029\u0085])"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=",\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="8">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Message"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Header"/>
                                        <grammars:Name value="header"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="LINE_SEPARATOR"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Body"/>
                                        <grammars:Name value="body"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="LINE_SEPARATOR"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Trailer"/>
                                        <grammars:Name value="trailer"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Header"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:Split>
                                        <grammars:BySize value="6"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:Name value="date"/>
                                        </grammars:As>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Decimal18"/>
                                        <grammars:Name value="totAmount"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Body"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="MSG_SEPARATOR"/>
                                        <grammars:NonTerminal value="BodyElement"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="BodyElement"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="Msg1"/>
                                        <grammars:NonTerminal value="Msg2"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Msg1"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{20:\E"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="{20:"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:Split>
                                        <grammars:BySize value="11"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9A-Z]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:Name value="bic"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Decimal18"/>
                                        <grammars:Name value="amount"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Msg2"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{30:\E"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="{30:"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:Split>
                                        <grammars:BySize value="20"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%-20s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:Split>
                                        <grammars:BySize value="6"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:Name value="dateOfBidth"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:Optional>
                                        <grammars:NonTerminal value="Decimal18"/>
                                        </grammars:Optional>
                                        <grammars:Name value="amount"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Trailer"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:Split>
                                        <grammars:BySize value="2"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:Name value="nofMsg"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Decimal18"/>
                                        <grammars:Split>
                                        <grammars:BySize value="18"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[ 0-9,.]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%18s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="DOUBLE"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/MT3Grammar"/>
                                        <grammars:Namespace value="org.whole.examples.mt3grammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                                <workflows:Operation value="NORMALIZER"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:InvokeOperation>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="MT3Grammar"/>
                                        <grammars:URI value="http://test.whole.org/MT3"/>
                                        <grammars:NonTerminal value="Message"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="6">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="LINE_SEPARATOR"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\r\n|[\n\r\u2028\u2029\u0085]"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value="\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="MSG_SEPARATOR"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=",(\r\n|[\n\r\u2028\u2029\u0085])"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=",\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{20:\E"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="{20:"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{30:\E"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="{30:"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="13">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Message"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Header"/>
                                        <grammars:Name value="header"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="LINE_SEPARATOR"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Body"/>
                                        <grammars:Name value="body"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="LINE_SEPARATOR"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Trailer"/>
                                        <grammars:Name value="trailer"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Header"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Date"/>
                                        <grammars:Name value="date"/>
                                        </grammars:As>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Decimal18"/>
                                        <grammars:Name value="totAmount"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Body"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="MSG_SEPARATOR"/>
                                        <grammars:NonTerminal value="BodyElement"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="BodyElement"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="Msg1"/>
                                        <grammars:NonTerminal value="Msg2"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Msg1"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Bic"/>
                                        <grammars:Name value="bic"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Decimal18"/>
                                        <grammars:Name value="amount"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Msg2"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="DateOfBidth"/>
                                        <grammars:Name value="dateOfBidth"/>
                                        </grammars:As>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Decimal18"/>
                                        <grammars:Name value="amount"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Trailer"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="NofMsg"/>
                                        <grammars:Name value="nofMsg"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Decimal18"/>
                                        <grammars:Split>
                                        <grammars:BySize value="18"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[ 0-9,.]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%18s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="DOUBLE"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Date"/>
                                        <grammars:Split>
                                        <grammars:BySize value="6"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Bic"/>
                                        <grammars:Split>
                                        <grammars:BySize value="11"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9A-Z]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Split>
                                        <grammars:BySize value="20"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%-20s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DateOfBidth"/>
                                        <grammars:Split>
                                        <grammars:BySize value="6"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NofMsg"/>
                                        <grammars:Split>
                                        <grammars:BySize value="2"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/MT3Grammar"/>
                                        <grammars:Namespace value="org.whole.examples.mt3grammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testNormalizeXmlGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeOperation xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="normalize grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="XmlGrammar"/>
                                        <grammars:URI value="http://lang.whole.org/Xml"/>
                                        <grammars:NonTerminal value="Document"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\p{javaWhitespace}*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="4">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="QS"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[^&quot;]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NCNAME"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z][_a-zA-Z0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(?s).*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\p{javaWhitespace}+"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="5">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Document"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Prolog"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="XMLDecl"/>
                                        <grammars:Concatenate initialCapacity="12">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;?xml\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;?xml"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="version"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="version"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="="/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="="/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&quot;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\&quot;"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Version"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&quot;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\&quot;"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="encoding"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="encoding"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="="/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="="/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&quot;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\&quot;"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Encoding"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&quot;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\&quot;"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <grammars:Name value="encoding"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="standalone"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="standalone"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="="/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="="/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&quot;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\&quot;"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Standalone"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="yes|no"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="BOOLEAN"/>
                                        </grammars:Production>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&quot;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\&quot;"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <grammars:Name value="standalone"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q?&gt;\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="?&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Name value="xmlDecl"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:Optional>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DocTypeDecl"/>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;!DOCTYPE\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;!DOCTYPE"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IExternalId"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SystemId"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:As>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SystemLiteral"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Name value="systemLiteral"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="PublicId"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="PubidLiteral"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <grammars:NonTerminal value="SystemLiteral"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Concatenate>
                                        <grammars:Name value="externalId"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Optional>
                                        <grammars:Optional>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Misc"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        <grammars:NonTerminal value="IMisc"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Optional>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:NonTerminal value="Element"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Element"/>
                                        <grammars:Concatenate initialCapacity="8">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&lt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="tag"/>
                                        </grammars:As>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Attributes"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Attribute"/>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="="/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="="/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&quot;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\&quot;"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Value"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&quot;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\&quot;"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Name value="attributes"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IContent"/>
                                        <grammars:Name value="content"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;/\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;/"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="tag"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&gt;"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:NonTerminal value="NCNAME"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="QualifiedName"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NameSpace"/>
                                        <grammars:NonTerminal value="NCNAME"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=":"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=":"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IContent"/>
                                        <grammars:Choose initialCapacity="6">
                                        <grammars:NonTerminal value="Element"/>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CharData"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[^&lt;]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CDataSect"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;![CDATA[\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;![CDATA["/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CDataSectData"/>
                                        <grammars:NonTerminal value="STRING"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Repeat>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="]]&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="]]&gt;"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Comment"/>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&lt;!--"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;!--"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CommentText"/>
                                        <grammars:NonTerminal value="STRING"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="--&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="--&gt;"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <grammars:Name value="text"/>
                                        </grammars:As>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="PI"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;?\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;?"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <grammars:As>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Instruction"/>
                                        <grammars:NonTerminal value="STRING"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Name value="instruction"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q?&gt;\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="?&gt;"/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Content"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        <grammars:NonTerminal value="IContent"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IMisc"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="PI"/>
                                        <grammars:NonTerminal value="Comment"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/XmlGrammar"/>
                                        <grammars:Namespace value="org.whole.lang.xml"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                                <workflows:Operation value="NORMALIZER"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:InvokeOperation>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="XmlGrammar"/>
                                        <grammars:URI value="http://lang.whole.org/Xml"/>
                                        <grammars:NonTerminal value="Document"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\p{javaWhitespace}*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="23">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="QS"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[^&quot;]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NCNAME"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z][_a-zA-Z0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(?s).*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\p{javaWhitespace}+"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;?xml\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;?xml"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="version"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="version"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="="/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="="/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&quot;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\&quot;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="encoding"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="encoding"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="standalone"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="standalone"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q?&gt;\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="?&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN9"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;!DOCTYPE\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;!DOCTYPE"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN11"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&lt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN12"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;/\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;/"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN13"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=":"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=":"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN14"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;![CDATA[\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;![CDATA["/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN15"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="]]&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="]]&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN16"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&lt;!--"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;!--"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN17"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="--&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="--&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN18"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;?\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;?"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="31">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Document"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Prolog"/>
                                        <grammars:Name value="prolog"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Element"/>
                                        <grammars:Name value="element"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Element"/>
                                        <grammars:Concatenate initialCapacity="8">
                                        <grammars:NonTerminal value="TOKEN11"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="tag"/>
                                        </grammars:As>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Attributes"/>
                                        <grammars:Name value="attributes"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IContent"/>
                                        <grammars:Name value="content"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN12"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="tag"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:NonTerminal value="QualifiedName"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IContent"/>
                                        <grammars:Choose initialCapacity="6">
                                        <grammars:NonTerminal value="Element"/>
                                        <grammars:NonTerminal value="CharData"/>
                                        <grammars:NonTerminal value="CDataSect"/>
                                        <grammars:NonTerminal value="Comment"/>
                                        <grammars:NonTerminal value="PI"/>
                                        <grammars:NonTerminal value="Content"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IMisc"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="PI"/>
                                        <grammars:NonTerminal value="Comment"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Version"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Encoding"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Standalone"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="yes|no"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="BOOLEAN"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="XMLDecl"/>
                                        <grammars:Concatenate initialCapacity="12">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Version"/>
                                        <grammars:Name value="version"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:NonTerminal value="Encoding"/>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        </grammars:Concatenate>
                                        <grammars:Name value="encoding"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:NonTerminal value="Standalone"/>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        </grammars:Concatenate>
                                        <grammars:Name value="standalone"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SystemLiteral"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SystemId"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:As>
                                        <grammars:NonTerminal value="SystemLiteral"/>
                                        <grammars:Name value="systemLiteral"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="PubidLiteral"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="PublicId"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:As>
                                        <grammars:NonTerminal value="PubidLiteral"/>
                                        <grammars:Name value="pubidLiteral"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SystemLiteral"/>
                                        <grammars:Name value="systemLiteral"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IExternalId"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="SystemId"/>
                                        <grammars:NonTerminal value="PublicId"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DocTypeDecl"/>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:NonTerminal value="TOKEN9"/>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="IExternalId"/>
                                        </grammars:Concatenate>
                                        <grammars:Name value="externalId"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Misc"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:NonTerminal value="IMisc"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Prolog"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="XMLDecl"/>
                                        <grammars:Name value="xmlDecl"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="DocTypeDecl"/>
                                        <grammars:Name value="docTypeDecl"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Misc"/>
                                        <grammars:Name value="misc"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Value"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Attribute"/>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Value"/>
                                        <grammars:Name value="value"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Attributes"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Attribute"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:NonTerminal value="NCNAME"/>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NameSpace"/>
                                        <grammars:NonTerminal value="NCNAME"/>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="QualifiedName"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:As>
                                        <grammars:NonTerminal value="NameSpace"/>
                                        <grammars:Name value="nameSpace"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN13"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CharData"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[^&lt;]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CDataSectData"/>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CDataSect"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN14"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="CDataSectData"/>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN15"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CommentText"/>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Comment"/>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN16"/>
                                        <grammars:NonTerminal value="CommentText"/>
                                        <grammars:NonTerminal value="TOKEN17"/>
                                        </grammars:Concatenate>
                                        <grammars:Name value="text"/>
                                        </grammars:As>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Instruction"/>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="PI"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="TOKEN18"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Instruction"/>
                                        <grammars:Name value="instruction"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Content"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:NonTerminal value="IContent"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/XmlGrammar"/>
                                        <grammars:Namespace value="org.whole.lang.xml"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testNormalizeDTAUSGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeOperation xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="normalize grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="DTAUSGrammar"/>
                                        <grammars:URI value="http://xsd.dataintegration.examples.whole.org/DTAUS"/>
                                        <grammars:NonTerminal value="DTAUS"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=""/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="0"/>
                                        <grammars:Productions initialCapacity="24">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DTAUS"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:As>
                                        <grammars:NonTerminal value="ARecord"/>
                                        <grammars:Name value="header"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="CRecords"/>
                                        <grammars:Name value="body"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ERecord"/>
                                        <grammars:Name value="footer"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ARecord"/>
                                        <grammars:Concatenate initialCapacity="14">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="0128"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="0128"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="A"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="A"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="TransactionKind"/>
                                        <grammars:Name value="transactionKind"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:Name value="bankID"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="00000000"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="00000000"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="customerName"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SDate"/>
                                        <grammars:Name value="currentDate"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="    "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="    "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LNumber"/>
                                        <grammars:Name value="accountNo"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="RefType"/>
                                        <grammars:Name value="refNo"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="               "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="               "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="FDate"/>
                                        <grammars:Name value="executionDate"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="                        "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="                        "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Currency"/>
                                        <grammars:Name value="currency"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CRecords"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="1"/>
                                        <grammars:Size value="9999999"/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="CRecord"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CRecord"/>
                                        <grammars:Concatenate initialCapacity="26">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Size"/>
                                        <grammars:Name value="recSize"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="C"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="C"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:Name value="contractingBankID"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:Name value="targetBankID"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LNumber"/>
                                        <grammars:Name value="targetAccountNo"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="InternalID"/>
                                        <grammars:Name value="internalCustomerID"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="TransactionType"/>
                                        <grammars:Name value="transactionType"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=" "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="AMNumber"/>
                                        <grammars:Name value="dmAmount"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:Name value="bankID"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LNumber"/>
                                        <grammars:Name value="accountNo"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="AMNumber"/>
                                        <grammars:Name value="euroAmount"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="   "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="   "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="targetCustomerName"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="        "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="        "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="customerName"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="purpose"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Currency"/>
                                        <grammars:Name value="currency"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="  "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="  "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="VSNumber"/>
                                        <grammars:Name value="expansionRecNo"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType2"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion2"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="           "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="           "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionRecords"/>
                                        <grammars:Name value="expansionRecords"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ExpansionRecords"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Size value="99"/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="ExpansionRecord"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ExpansionRecord"/>
                                        <grammars:Concatenate initialCapacity="9">
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType2"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion2"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType3"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion3"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType4"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion4"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="            "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="            "/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ERecord"/>
                                        <grammars:Concatenate initialCapacity="9">
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="0128"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="0128"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="E"/>
                                        </grammars:LiteralTerminal>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="     "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="     "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:As>
                                        <grammars:NonTerminal value="RecordNumber"/>
                                        <grammars:Name value="bodyLength"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="STotal"/>
                                        <grammars:Name value="dmTotal"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LTotal"/>
                                        <grammars:Name value="accountTotal"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LTotal"/>
                                        <grammars:Name value="bankTotal"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="STotal"/>
                                        <grammars:Name value="euroTotal"/>
                                        </grammars:As>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="                                                   "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="                                                   "/>
                                        </grammars:LiteralTerminal>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TransactionKind"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[GL][BK]"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{8}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%08d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".{27}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SDate"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{6}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="LNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{10}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%010d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RefType"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".{10}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="FDate"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(([0-9]{8})|([ ]{8}))"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Currency"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[ 1]"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Size"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{4}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%04d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="SHORT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="InternalID"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".{13}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TransactionType"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="((04000)|(05000)|(05005)|(05006)|(05015)|(51000)|(53000)|(54[0-9][0-9]J)|(56000))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="AMNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{11}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%011d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="VSNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{2}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%02d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="((  )|(01)|(02)|(03))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RecordNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{7}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%07d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="STotal"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{13}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%013d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="LTotal"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{17}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%017d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/DTAUSGrammar"/>
                                        <grammars:Namespace value="org.whole.examples.dtaus"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                                <workflows:Operation value="NORMALIZER"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:InvokeOperation>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="DTAUSGrammar"/>
                                        <grammars:URI value="http://xsd.dataintegration.examples.whole.org/DTAUS"/>
                                        <grammars:NonTerminal value="DTAUS"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=""/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="16">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="0128"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="0128"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="A"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="A"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="00000000"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="00000000"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="    "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="    "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="               "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="               "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="                        "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="                        "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="C"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="C"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=" "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="   "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="   "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN9"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="        "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="        "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="  "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="  "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN11"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="           "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="           "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN12"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="            "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="            "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN13"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="E"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN14"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="     "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="     "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN15"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="                                                   "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="                                                   "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="24">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DTAUS"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:As>
                                        <grammars:NonTerminal value="ARecord"/>
                                        <grammars:Name value="header"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="CRecords"/>
                                        <grammars:Name value="body"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ERecord"/>
                                        <grammars:Name value="footer"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ARecord"/>
                                        <grammars:Concatenate initialCapacity="14">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="TransactionKind"/>
                                        <grammars:Name value="transactionKind"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:Name value="bankID"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="customerName"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SDate"/>
                                        <grammars:Name value="currentDate"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LNumber"/>
                                        <grammars:Name value="accountNo"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="RefType"/>
                                        <grammars:Name value="refNo"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="FDate"/>
                                        <grammars:Name value="executionDate"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Currency"/>
                                        <grammars:Name value="currency"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CRecords"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="1"/>
                                        <grammars:Size value="9999999"/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="CRecord"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CRecord"/>
                                        <grammars:Concatenate initialCapacity="26">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Size"/>
                                        <grammars:Name value="recSize"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:Name value="contractingBankID"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:Name value="targetBankID"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LNumber"/>
                                        <grammars:Name value="targetAccountNo"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="InternalID"/>
                                        <grammars:Name value="internalCustomerID"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="TransactionType"/>
                                        <grammars:Name value="transactionType"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="AMNumber"/>
                                        <grammars:Name value="dmAmount"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:Name value="bankID"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LNumber"/>
                                        <grammars:Name value="accountNo"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="AMNumber"/>
                                        <grammars:Name value="euroAmount"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="targetCustomerName"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN9"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="customerName"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="purpose"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Currency"/>
                                        <grammars:Name value="currency"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="VSNumber"/>
                                        <grammars:Name value="expansionRecNo"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType2"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion2"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN11"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionRecords"/>
                                        <grammars:Name value="expansionRecords"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ExpansionRecords"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Size value="99"/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="ExpansionRecord"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ExpansionRecord"/>
                                        <grammars:Concatenate initialCapacity="9">
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType2"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion2"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType3"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion3"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType4"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion4"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN12"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ERecord"/>
                                        <grammars:Concatenate initialCapacity="9">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:NonTerminal value="TOKEN13"/>
                                        <grammars:NonTerminal value="TOKEN14"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="RecordNumber"/>
                                        <grammars:Name value="bodyLength"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="STotal"/>
                                        <grammars:Name value="dmTotal"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LTotal"/>
                                        <grammars:Name value="accountTotal"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LTotal"/>
                                        <grammars:Name value="bankTotal"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="STotal"/>
                                        <grammars:Name value="euroTotal"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN15"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TransactionKind"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[GL][BK]"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{8}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%08d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".{27}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SDate"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{6}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="LNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{10}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%010d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RefType"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".{10}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="FDate"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(([0-9]{8})|([ ]{8}))"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Currency"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[ 1]"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Size"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{4}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%04d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="SHORT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="InternalID"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".{13}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TransactionType"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="((04000)|(05000)|(05005)|(05006)|(05015)|(51000)|(53000)|(54[0-9][0-9]J)|(56000))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="AMNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{11}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%011d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="VSNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{2}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%02d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="((  )|(01)|(02)|(03))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RecordNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{7}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%07d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="STotal"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{13}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%013d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="LTotal"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{17}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%017d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/DTAUSGrammar"/>
                                        <grammars:Namespace value="org.whole.examples.dtaus"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testNormalizeMotoGPCSVGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeOperation xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="normalize grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="MotoGP_TeamsCSVGrammar"/>
                                        <grammars:URI value="http://dataintegration.examples.whole.org/MotoGP"/>
                                        <grammars:NonTerminal value="Teams"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="2">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\r\n|[\n\r\u2028\u2029\u0085]"/>
                                        <commons:Resolver/>
                                        <grammars:Literal value="\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=";"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=";"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="4">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Teams"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="2"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Team"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="manufacturer"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Name value="rider1"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Name value="rider2"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Number"/>
                                        <grammars:Name value="number"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z0-9 ]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Number"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/MotoGPTeamsCSVGrammar"/>
                                        <grammars:Namespace value="org.whole.examples.motogpteams"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                                <workflows:Operation value="NORMALIZER"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:InvokeOperation>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="MotoGP_TeamsCSVGrammar"/>
                                        <grammars:URI value="http://dataintegration.examples.whole.org/MotoGP"/>
                                        <grammars:NonTerminal value="Teams"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="2">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\r\n|[\n\r\u2028\u2029\u0085]"/>
                                        <commons:Resolver/>
                                        <grammars:Literal value="\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=";"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=";"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="5">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Teams"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="2"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:NonTerminal value="Team"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Number"/>
                                        <grammars:Name value="number"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z0-9 ]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Number"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Team"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="manufacturer"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Name value="rider1"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Name value="rider2"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/MotoGPTeamsCSVGrammar"/>
                                        <grammars:Namespace value="org.whole.examples.motogpteams"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testNormalizeMotoGPFLFGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeOperation xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="normalize grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="MotoGP_TeamsFLFGrammar"/>
                                        <grammars:URI value="http://dataintegration.examples.whole.org/MotoGP"/>
                                        <grammars:NonTerminal value="Teams"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="0"/>
                                        <grammars:Productions initialCapacity="4">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Teams"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="2"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Team"/>
                                        <grammars:Split>
                                        <grammars:BySize value="100"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:Split>
                                        <grammars:BySize value="30"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        <grammars:Split>
                                        <grammars:BySize value="10"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="manufacturer"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Name value="rider1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Name value="rider2"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:Split>
                                        <grammars:BySize value="28"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        <grammars:Split>
                                        <grammars:BySize value="2"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Number"/>
                                        <grammars:Name value="number"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(([ ]?[a-zA-Z0-9]+)*)[ ]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Number"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%02d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/MotoGPTeamsFLFGrammar"/>
                                        <grammars:Namespace value="org.whole.examples.motogpteams"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                                <workflows:Operation value="NORMALIZER"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:InvokeOperation>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="MotoGP_TeamsFLFGrammar"/>
                                        <grammars:URI value="http://dataintegration.examples.whole.org/MotoGP"/>
                                        <grammars:NonTerminal value="Teams"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="0"/>
                                        <grammars:Productions initialCapacity="5">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Teams"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="2"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Team"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:Split>
                                        <grammars:BySize value="28"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        <grammars:Split>
                                        <grammars:BySize value="2"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Number"/>
                                        <grammars:Name value="number"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(([ ]?[a-zA-Z0-9]+)*)[ ]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Number"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%02d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Team"/>
                                        <grammars:Split>
                                        <grammars:BySize value="100"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:Split>
                                        <grammars:BySize value="30"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        <grammars:Split>
                                        <grammars:BySize value="10"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="manufacturer"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Name value="rider1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Name value="rider2"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/MotoGPTeamsFLFGrammar"/>
                                        <grammars:Namespace value="org.whole.examples.motogpteams"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                    </grammars:Grammar>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
            </tests:Tests>
            <tests:Results>
                <tests:IntLiteral value="12"/>
                <tests:IntLiteral value="0"/>
                <tests:IntLiteral value="0"/>
            </tests:Results>
            <tests:Results>
                <tests:IntLiteral value="12"/>
                <tests:IntLiteral value="0"/>
                <tests:IntLiteral value="0"/>
            </tests:Results>
        </tests:TestCase>
        <tests:TestCase>
            <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
            <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
            <tests:Name value="Grammars2ModelsVisitorTest"/>
            <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
            <tests:Aspects initialCapacity="0"/>
            <tests:Tests initialCapacity="12">
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testMappingRules"/>
                    <tests:TestStatements initialCapacity="3">
                        <tests:AssertThat>
                            <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="map grammars to models"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="org.whole.lang.grammars.util.GrammarsUtils"/>
                                <workflows:StringLiteral value="deriveModel(org.whole.lang.grammars.model.Grammar, boolean)"/>
                                <workflows:Expressions initialCapacity="2">
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="LanguageNameGrammar"/>
                                        <grammars:LanguageDescriptor>
                                        <grammars:URI value="http://lang.whole.org/LanguageName"/>
                                        <grammars:Namespace value="org.whole.lang.language"/>
                                        <grammars:Name value="LanguageName"/>
                                        <commons:Resolver/>
                                        </grammars:LanguageDescriptor>
                                        <grammars:NonTerminal value="NT_DATA1"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="2">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="pattern"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="literal"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:Empty>
                                        <grammars:Literal value=""/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="10">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA1"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA2"/>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA3"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA4"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA4_AS"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA4_PROD1"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="DATA4Prod1"/>
                                        <grammars:Name value="dATA4Prod1"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA4_PROD2"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="DATA4Prod2"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA4Prod1"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA4Prod2"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/LanguageNameGrammar"/>
                                        <grammars:Namespace value="org.whole.lang.language"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        </grammars:Grammar>
                                    </commons:StageUpFragment>
                                    <workflows:BooleanLiteral value="false"/>
                                </workflows:Expressions>
                            </workflows:InvokeJavaClassMethod>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <models:Model xmlns:models="http://lang.whole.org/Models">
                                        <models:SimpleName value="LanguageName"/>
                                        <models:TypeRelations initialCapacity="0"/>
                                        <models:ModelDeclarations initialCapacity="10">
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NT_DATA1"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NT_DATA2"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NT_DATA3"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NT_DATA4"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NT_DATA4_AS"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="1">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NT_DATA4_PROD1"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="1">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DATA4Prod1"/>
                                        <models:SimpleName value="dATA4Prod1"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NT_DATA4_PROD2"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="1">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DATA4Prod2"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DATA4Prod1"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DATA4Prod2"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        </models:ModelDeclarations>
                                        <models:Namespace value="org.whole.lang.language"/>
                                        <commons:Resolver/>
                                        <models:URI value="http://lang.whole.org/LanguageName"/>
                                    </models:Model>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                        <tests:AssertThat>
                            <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="map grammars to models"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="org.whole.lang.grammars.util.GrammarsUtils"/>
                                <workflows:StringLiteral value="deriveModel(org.whole.lang.grammars.model.Grammar, boolean)"/>
                                <workflows:Expressions initialCapacity="2">
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="LanguageNameGrammar"/>
                                        <grammars:LanguageDescriptor>
                                        <grammars:URI value="http://lang.whole.org/LanguageName"/>
                                        <grammars:Namespace value="org.whole.lang.language"/>
                                        <grammars:Name value="LanguageName"/>
                                        <commons:Resolver/>
                                        </grammars:LanguageDescriptor>
                                        <grammars:NonTerminal value="NT_DATA5"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="1">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="pattern"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="literal"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="11">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA5"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA5_AS"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Namex"/>
                                        <grammars:Name value="namex"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA5_PROD1"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:As>
                                        <grammars:NonTerminal value="DATA5Prod1"/>
                                        <grammars:Name value="dATA5Prod1"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA5_PROD2"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:As>
                                        <grammars:NonTerminal value="DATA5Prod2"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA6"/>
                                        <grammars:Split>
                                        <grammars:BySize value="12"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA6_PROD1"/>
                                        <grammars:Split>
                                        <grammars:BySize value="12"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="DATA6Prod1"/>
                                        <grammars:Name value="dATA6Prod1"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NT_DATA7"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:Split>
                                        <grammars:BySize value="12"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Namex"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA5Prod1"/>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA5Prod2"/>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATA6Prod1"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/LanguageNameGrammar"/>
                                        <grammars:Namespace value="org.whole.lang.language"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        </grammars:Grammar>
                                    </commons:StageUpFragment>
                                    <workflows:BooleanLiteral value="false"/>
                                </workflows:Expressions>
                            </workflows:InvokeJavaClassMethod>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <models:Model xmlns:models="http://lang.whole.org/Models">
                                        <models:SimpleName value="LanguageName"/>
                                        <models:TypeRelations initialCapacity="0"/>
                                        <models:ModelDeclarations initialCapacity="11">
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NT_DATA5"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NT_DATA5_AS"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="1">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Namex"/>
                                        <models:SimpleName value="namex"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NT_DATA5_PROD1"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="1">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DATA5Prod1"/>
                                        <models:SimpleName value="dATA5Prod1"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NT_DATA5_PROD2"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="1">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DATA5Prod2"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NT_DATA6"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NT_DATA6_PROD1"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="1">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DATA6Prod1"/>
                                        <models:SimpleName value="dATA6Prod1"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NT_DATA7"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Namex"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DATA5Prod1"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DATA5Prod2"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DATA6Prod1"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        </models:ModelDeclarations>
                                        <models:Namespace value="org.whole.lang.language"/>
                                        <commons:Resolver/>
                                        <models:URI value="http://lang.whole.org/LanguageName"/>
                                    </models:Model>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                        <tests:AssertThat>
                            <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="map grammars to models"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="org.whole.lang.grammars.util.GrammarsUtils"/>
                                <workflows:StringLiteral value="deriveModel(org.whole.lang.grammars.model.Grammar, boolean)"/>
                                <workflows:Expressions initialCapacity="2">
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="grammarName"/>
                                        <grammars:LanguageDescriptor>
                                        <grammars:URI value="http://lang.whole.org/LanguageName"/>
                                        <grammars:Namespace value="org.whole.lang.language"/>
                                        <grammars:Name value="LanguageName"/>
                                        <commons:Resolver/>
                                        </grammars:LanguageDescriptor>
                                        <grammars:NonTerminal value="A"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="8">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="a"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="b"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="b"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="c"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="c"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="d"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="d"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="e"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="e"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="f"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="f"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="g"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="g"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="h"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="h"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="12">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="A"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="B"/>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="B"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="A"/>
                                        <grammars:NonTerminal value="C"/>
                                        </grammars:Choose>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="C"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="D"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="B"/>
                                        </grammars:Repeat>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DD"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:Split>
                                        <grammars:BySize value="5"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="B"/>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="E"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="E1"/>
                                        <grammars:Name value="e1"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="EE"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="EE1"/>
                                        <grammars:Name value="eE1"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="F"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:When>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:When>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="G"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="E1"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="A"/>
                                        <grammars:NonTerminal value="C"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="EE1"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="A"/>
                                        <grammars:NonTerminal value="C"/>
                                        </grammars:Choose>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        </grammars:Concatenate>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/LanguageNameGrammar"/>
                                        <grammars:Namespace value="org.whole.lang.language"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        </grammars:Grammar>
                                    </commons:StageUpFragment>
                                    <workflows:BooleanLiteral value="false"/>
                                </workflows:Expressions>
                            </workflows:InvokeJavaClassMethod>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <models:Model xmlns:models="http://lang.whole.org/Models">
                                        <models:SimpleName value="LanguageName"/>
                                        <models:TypeRelations initialCapacity="0"/>
                                        <models:ModelDeclarations initialCapacity="12">
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="A"/>
                                        <models:Types initialCapacity="3">
                                        <models:SimpleName value="B"/>
                                        <models:SimpleName value="E1"/>
                                        <models:SimpleName value="EE1"/>
                                        </models:Types>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="B"/>
                                        </models:CompositeEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="1">
                                        <models:EntityModifier value="abstract"/>
                                        </models:EntityModifiers>
                                        <models:SimpleName value="B"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="C"/>
                                        <models:Types initialCapacity="3">
                                        <models:SimpleName value="B"/>
                                        <models:SimpleName value="E1"/>
                                        <models:SimpleName value="EE1"/>
                                        </models:Types>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="D"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="B"/>
                                        </models:CompositeEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DD"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="B"/>
                                        </models:CompositeEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="E"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="1">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="1">
                                        <models:FeatureModifier value="optional"/>
                                        </models:FeatureModifiers>
                                        <models:SimpleName value="E1"/>
                                        <models:SimpleName value="e1"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="EE"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="1">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="1">
                                        <models:FeatureModifier value="optional"/>
                                        </models:FeatureModifiers>
                                        <models:SimpleName value="EE1"/>
                                        <models:SimpleName value="eE1"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="F"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="G"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="1">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="1">
                                        <models:EntityModifier value="abstract"/>
                                        </models:EntityModifiers>
                                        <models:SimpleName value="E1"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="1">
                                        <models:EntityModifier value="abstract"/>
                                        </models:EntityModifiers>
                                        <models:SimpleName value="EE1"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        </models:ModelDeclarations>
                                        <models:Namespace value="org.whole.lang.language"/>
                                        <commons:Resolver/>
                                        <models:URI value="http://lang.whole.org/LanguageName"/>
                                    </models:Model>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testMappingTestGrammar1"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="map grammars to models"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="org.whole.lang.grammars.util.GrammarsUtils"/>
                                <workflows:StringLiteral value="deriveModel(org.whole.lang.grammars.model.Grammar, boolean)"/>
                                <workflows:Expressions initialCapacity="2">
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="TestGrammar1"/>
                                        <grammars:LanguageDescriptor>
                                        <grammars:URI value="http://lang.whole.org/Test1"/>
                                        <grammars:Namespace value="org.whole.lang.language"/>
                                        <grammars:Name value="Test1"/>
                                        <commons:Resolver/>
                                        </grammars:LanguageDescriptor>
                                        <grammars:NonTerminal value="CSVSimple"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="27">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="a literal terminal"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a literal terminal"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[0-9a-zA-Z]{6}[a-zA-Z]{2}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="abcedfgh"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="BEGIN"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="BEGIN"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[AB]"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="A"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[0-9]{2,5}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="666"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="(,[0-9]{2})*"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=",12,23,34"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="END"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="END"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q(\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="("/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=","/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=","/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN9"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q)\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=")"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="a"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN11"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="n optional"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="n optional"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN12"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=" literal terminal"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" literal terminal"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN13"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="n"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN14"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\s+"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN15"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="optional"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="optional"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN16"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="Message: "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="Message: "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN17"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=" "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN18"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="bla"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="bla"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN19"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q.\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="."/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN20"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="My "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="My "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN21"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="dog"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="dog"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN22"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="cat"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="cat"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN23"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q is sleeping.\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" is sleeping."/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN24"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=".*\n"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="a string, an int, a char, a double\\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN25"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\n"/>
                                        <commons:Resolver/>
                                        <grammars:Literal value="\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN26"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=","/>
                                        <commons:Resolver/>
                                        <grammars:Literal value=", "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="29">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SingleLiteral"/>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SinglePatternLiteral"/>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="LiteralSequence"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SingleData"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DataSequence"/>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="F1"/>
                                        <grammars:Name value="f1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="F2"/>
                                        <grammars:Name value="f2"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="F3"/>
                                        <grammars:Name value="f3"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN9"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DataSequenceWithDataTypes"/>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="EF1"/>
                                        <grammars:Name value="f1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="EF2"/>
                                        <grammars:Name value="f2"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="EF2"/>
                                        <grammars:Name value="f3"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN9"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="OptionalLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN11"/>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN12"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="OptionalConcatenate"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:Optional>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN13"/>
                                        <grammars:NonTerminal value="TOKEN14"/>
                                        <grammars:NonTerminal value="TOKEN15"/>
                                        </grammars:Concatenate>
                                        </grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="OptionalConcatenate1"/>
                                        <grammars:Name value="optionalConcatenate1"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RepeatedLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN16"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="1"/>
                                        <grammars:Size value="3"/>
                                        <grammars:NonTerminal value="TOKEN17"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:NonTerminal value="TOKEN18"/>
                                        </grammars:Concatenate>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN19"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RepeatedOptionalLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN16"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Size value="3"/>
                                        <grammars:NonTerminal value="TOKEN17"/>
                                        <grammars:NonTerminal value="TOKEN18"/>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN19"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RepeatedUnboundedLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN16"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="TOKEN17"/>
                                        <grammars:NonTerminal value="TOKEN18"/>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN19"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChooseLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN20"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="TOKEN21"/>
                                        <grammars:NonTerminal value="TOKEN22"/>
                                        </grammars:Choose>
                                        <grammars:NonTerminal value="TOKEN23"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChoosePolymorphic"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN20"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="ChooseType1"/>
                                        <grammars:NonTerminal value="ChooseType2"/>
                                        </grammars:Choose>
                                        <grammars:NonTerminal value="TOKEN23"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChooseEnum"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:As>
                                        <grammars:NonTerminal value="TOKEN21"/>
                                        <grammars:Name value="DOG"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="TOKEN22"/>
                                        <grammars:Name value="CAT"/>
                                        </grammars:As>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CSVSimple"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:NonTerminal value="TOKEN24"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="TOKEN25"/>
                                        <grammars:NonTerminal value="CSVSimple1"/>
                                        </grammars:Repeat>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(?:&quot;)(.*)(?:&quot;)|[^&quot;,]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CHAR"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(?s)."/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="CHAR"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="INT"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([-+]?([0-9]++))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="FLOAT"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([-+]?([0-9]++(\.[0-9]*+)?)|(\.[0-9]++))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="FLOAT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DOUBLE"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([-+]?([0-9]++(\.[0-9]*+)?)|(\.[0-9]++))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="DOUBLE"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="F1"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[AB]"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="F2"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="F3"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="EF1"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[AB]"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="CHAR"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="EF2"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="OptionalConcatenate1"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=" concatenate"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChooseType1"/>
                                        <grammars:NonTerminal value="TOKEN21"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ChooseType2"/>
                                        <grammars:NonTerminal value="TOKEN22"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CSVSimple1"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:As>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:Name value="AString"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN26"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="INT"/>
                                        <grammars:Name value="AnInt"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN26"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="CHAR"/>
                                        <grammars:Name value="AChar"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN26"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="DOUBLE"/>
                                        <grammars:Name value="ADouble"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/TestGrammar1"/>
                                        <grammars:Namespace value="org.whole.lang.language"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        </grammars:Grammar>
                                    </commons:StageUpFragment>
                                    <workflows:BooleanLiteral value="false"/>
                                </workflows:Expressions>
                            </workflows:InvokeJavaClassMethod>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <models:Model xmlns:models="http://lang.whole.org/Models">
                                        <models:SimpleName value="Test1"/>
                                        <models:TypeRelations initialCapacity="0"/>
                                        <models:ModelDeclarations initialCapacity="29">
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="SingleLiteral"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="SinglePatternLiteral"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="LiteralSequence"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="SingleData"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DataSequence"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="3">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="F1"/>
                                        <models:SimpleName value="f1"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="F2"/>
                                        <models:SimpleName value="f2"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="F3"/>
                                        <models:SimpleName value="f3"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DataSequenceWithDataTypes"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="3">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="EF1"/>
                                        <models:SimpleName value="f1"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="EF2"/>
                                        <models:SimpleName value="f2"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="EF2"/>
                                        <models:SimpleName value="f3"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="OptionalLiteral"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="OptionalConcatenate"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="1">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="OptionalConcatenate1"/>
                                        <models:SimpleName value="optionalConcatenate1"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="RepeatedLiteral"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="RepeatedOptionalLiteral"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="RepeatedUnboundedLiteral"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ChooseLiteral"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="1">
                                        <models:EntityModifier value="abstract"/>
                                        </models:EntityModifiers>
                                        <models:SimpleName value="ChoosePolymorphic"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:EnumEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ChooseEnum"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:EnumValues initialCapacity="2">
                                        <models:EnumValue value="DOG"/>
                                        <models:EnumValue value="CAT"/>
                                        </models:EnumValues>
                                        </models:EnumEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="CSVSimple"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="CSVSimple1"/>
                                        </models:CompositeEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="STRING"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="CHAR"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="char"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="INT"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="int"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="FLOAT"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="float"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DOUBLE"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="double"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="F1"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="F2"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="F3"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="EF1"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="char"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="EF2"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="int"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="OptionalConcatenate1"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ChooseType1"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="ChoosePolymorphic"/>
                                        </models:Types>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ChooseType2"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="ChoosePolymorphic"/>
                                        </models:Types>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="CSVSimple1"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="4">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="STRING"/>
                                        <models:SimpleName value="AString"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="INT"/>
                                        <models:SimpleName value="AnInt"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="CHAR"/>
                                        <models:SimpleName value="AChar"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DOUBLE"/>
                                        <models:SimpleName value="ADouble"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        </models:ModelDeclarations>
                                        <models:Namespace value="org.whole.lang.language"/>
                                        <commons:Resolver/>
                                        <models:URI value="http://lang.whole.org/Test1"/>
                                    </models:Model>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testMappingDataTypesGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="map grammars to models"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="org.whole.lang.grammars.util.GrammarsUtils"/>
                                <workflows:StringLiteral value="deriveModel(org.whole.lang.grammars.model.Grammar, boolean)"/>
                                <workflows:Expressions initialCapacity="2">
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="DataTypesGrammar"/>
                                        <grammars:LanguageDescriptor>
                                        <grammars:URI value="http://tests.lang.whole.org/DataTypes"/>
                                        <grammars:Namespace value="org.whole.tests.datatypesgrammar"/>
                                        <grammars:Name value="DataTypes"/>
                                        <commons:Resolver/>
                                        </grammars:LanguageDescriptor>
                                        <grammars:NonTerminal value="DataTypes"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\p{javaWhitespace}*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="18">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="BOOLEAN"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[tT]rue|[fF]alse"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%b"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="INT"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([+-]?([0-9]+))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DECIMAL"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="([+-]?([0-9]++[\.,][0-9]*+)|([\.,][0-9]++))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%f"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ISO_DATETIME"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{4}-[01][0-9]-[0-3][0-9]T[0-5][0-9]:[0-2][0-9]:[0-5][0-9]\.[0-9]{3}Z"/>
                                        <grammars:Category value="LITERAL"/>
                                        <commons:SameStageFragment>
                                        <workflows:InvokeJavaClassMethod>
                                        <workflows:Text value="to extended iso date time"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <workflows:StringLiteral value="org.whole.lang.util.StringUtils"/>
                                        <workflows:StringLiteral value="toExtendedISO8601DateTime(java.util.Date)"/>
                                        <workflows:Expressions initialCapacity="1">
                                        <workflows:Variable value="self"/>
                                        </workflows:Expressions>
                                        </workflows:InvokeJavaClassMethod>
                                        </commons:SameStageFragment>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DATE"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-3][0-9]/[01][0-9]/[0-9]{4}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%1$td/%1$tm/%1$tY"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[^&quot;]*+"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="εINDENT"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\t"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="εSP"/>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="εNL"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=";"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=";\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="x"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="x"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="one"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="one"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="two"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="two"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="three"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="three"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&quot;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\&quot;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:Empty>
                                        <commons:SameStageFragment>
                                        <queries:Choose xmlns:queries="http://lang.whole.org/Queries" initialCapacity="2">
                                        <queries:If>
                                        <queries:TypeTest value="BooleanLiteral"/>
                                        <queries:StringLiteral value="&#10;&#10;&#10;"/>
                                        </queries:If>
                                        <queries:StringLiteral value=""/>
                                        </queries:Choose>
                                        </commons:SameStageFragment>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\n}"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="9">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DataTypes"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:NonTerminal value="εNL"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="εINDENT"/>
                                        <grammars:NonTerminal value="DataType"/>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        </grammars:Concatenate>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="EnumType"/>
                                        <grammars:Choose initialCapacity="3">
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:NonTerminal value="εSP"/>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        </grammars:Concatenate>
                                        <grammars:Name value="ONE"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:Name value="TWO"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:Name value="THREE"/>
                                        </grammars:As>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="BooleanLiteral"/>
                                        <grammars:NonTerminal value="BOOLEAN"/>
                                        <grammars:DataType value="BOOLEAN"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DecimalLiteral"/>
                                        <grammars:NonTerminal value="DECIMAL"/>
                                        <grammars:CustomDataType value="java.math.BigDecimal"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DateTimeLiteral"/>
                                        <grammars:NonTerminal value="ISO_DATETIME"/>
                                        <grammars:DataType value="DATE"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DateLiteral"/>
                                        <grammars:NonTerminal value="DATE"/>
                                        <grammars:DataType value="DATE"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IntLiteral"/>
                                        <grammars:NonTerminal value="INT"/>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="StringLiteral"/>
                                        <grammars:NonTerminal value="STRING"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DataType"/>
                                        <grammars:Choose initialCapacity="7">
                                        <grammars:NonTerminal value="EnumType"/>
                                        <grammars:NonTerminal value="BooleanLiteral"/>
                                        <grammars:NonTerminal value="DecimalLiteral"/>
                                        <grammars:NonTerminal value="DateTimeLiteral"/>
                                        <grammars:NonTerminal value="DateLiteral"/>
                                        <grammars:NonTerminal value="IntLiteral"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:NonTerminal value="StringLiteral"/>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        </grammars:Concatenate>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://tests.whole.org/DataTypesGrammar"/>
                                        <grammars:Namespace value="org.whole.tests.datatypesgrammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        </grammars:Grammar>
                                    </commons:StageUpFragment>
                                    <workflows:BooleanLiteral value="false"/>
                                </workflows:Expressions>
                            </workflows:InvokeJavaClassMethod>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <models:Model xmlns:models="http://lang.whole.org/Models">
                                        <models:SimpleName value="DataTypes"/>
                                        <models:TypeRelations initialCapacity="0"/>
                                        <models:ModelDeclarations initialCapacity="9">
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DataTypes"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="DataType"/>
                                        </models:CompositeEntity>
                                        <models:EnumEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="EnumType"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="DataType"/>
                                        </models:Types>
                                        <models:EnumValues initialCapacity="3">
                                        <models:EnumValue value="ONE"/>
                                        <models:EnumValue value="TWO"/>
                                        <models:EnumValue value="THREE"/>
                                        </models:EnumValues>
                                        </models:EnumEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="BooleanLiteral"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="DataType"/>
                                        </models:Types>
                                        <models:DataType value="boolean"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DecimalLiteral"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="DataType"/>
                                        </models:Types>
                                        <models:DataType value="java.math.BigDecimal"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DateTimeLiteral"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="DataType"/>
                                        </models:Types>
                                        <models:DataType value="java.util.Date"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DateLiteral"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="DataType"/>
                                        </models:Types>
                                        <models:DataType value="java.util.Date"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="IntLiteral"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="DataType"/>
                                        </models:Types>
                                        <models:DataType value="long"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="StringLiteral"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="DataType"/>
                                        </models:Types>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="1">
                                        <models:EntityModifier value="abstract"/>
                                        </models:EntityModifiers>
                                        <models:SimpleName value="DataType"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        </models:ModelDeclarations>
                                        <models:Namespace value="org.whole.tests.datatypesgrammar"/>
                                        <commons:Resolver/>
                                        <models:URI value="http://tests.lang.whole.org/DataTypes"/>
                                    </models:Model>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testMappingMessagesGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="map grammars to models"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="org.whole.lang.grammars.util.GrammarsUtils"/>
                                <workflows:StringLiteral value="deriveModel(org.whole.lang.grammars.model.Grammar, boolean)"/>
                                <workflows:Expressions initialCapacity="2">
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="MessagesGrammar"/>
                                        <grammars:LanguageDescriptor>
                                        <grammars:URI value="http://test.lang.whole.org/Messages"/>
                                        <grammars:Namespace value="org.whole.tests.messagesgrammar"/>
                                        <grammars:Name value="Messages"/>
                                        <commons:Resolver/>
                                        </grammars:LanguageDescriptor>
                                        <grammars:NonTerminal value="Messages"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\p{javaWhitespace}+"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="6">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="hd:"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="hd:"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="b"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="b"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\|\|"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="||"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="!!"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="!!\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\d.*"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="num"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\D.*"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="non_num"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="7">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Messages"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="1"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Message"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Message"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:When>
                                        <grammars:Or>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:Not>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Not>
                                        </grammars:Or>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Header"/>
                                        <grammars:Name value="header"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:When>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Body"/>
                                        <grammars:Name value="body"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Body"/>
                                        <grammars:Choose initialCapacity="3">
                                        <grammars:When>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:NonTerminal value="NumericBody"/>
                                        </grammars:When>
                                        <grammars:When>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:NonTerminal value="NonNumericBody"/>
                                        </grammars:When>
                                        <grammars:NonTerminal value="OtherBody"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NumericBody"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="\d+"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NonNumericBody"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="OtherBody"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Header"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://tests.whole.org/MessagesGrammar"/>
                                        <grammars:Namespace value="org.whole.tests.messagesgrammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        </grammars:Grammar>
                                    </commons:StageUpFragment>
                                    <workflows:BooleanLiteral value="false"/>
                                </workflows:Expressions>
                            </workflows:InvokeJavaClassMethod>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <models:Model xmlns:models="http://lang.whole.org/Models">
                                        <models:SimpleName value="Messages"/>
                                        <models:TypeRelations initialCapacity="0"/>
                                        <models:ModelDeclarations initialCapacity="7">
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Messages"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="Message"/>
                                        </models:CompositeEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Message"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Header"/>
                                        <models:SimpleName value="header"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Body"/>
                                        <models:SimpleName value="body"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="1">
                                        <models:EntityModifier value="abstract"/>
                                        </models:EntityModifiers>
                                        <models:SimpleName value="Body"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NumericBody"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="Body"/>
                                        </models:Types>
                                        <models:DataType value="int"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NonNumericBody"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="Body"/>
                                        </models:Types>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="OtherBody"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="Body"/>
                                        </models:Types>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Header"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        </models:ModelDeclarations>
                                        <models:Namespace value="org.whole.tests.messagesgrammar"/>
                                        <commons:Resolver/>
                                        <models:URI value="http://test.lang.whole.org/Messages"/>
                                    </models:Model>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testMappingStateMachineGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="map grammars to models"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="org.whole.lang.grammars.util.GrammarsUtils"/>
                                <workflows:StringLiteral value="deriveModel(org.whole.lang.grammars.model.Grammar, boolean)"/>
                                <workflows:Expressions initialCapacity="2">
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="StateMachineGrammar"/>
                                        <grammars:LanguageDescriptor>
                                        <grammars:URI value="http://tests.lang.whole.org/StateMachine"/>
                                        <grammars:Namespace value="org.whole.tests.statemachinegrammar"/>
                                        <grammars:Name value="StateMachine"/>
                                        <commons:Resolver/>
                                        </grammars:LanguageDescriptor>
                                        <grammars:NonTerminal value="StateMachine"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[ \n\r\t]*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="12">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\t"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="events"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="events"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="end"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="end"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="resetEvents"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="resetEvents"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="commands"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="commands"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="state"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="state"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="actions"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="actions"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="=&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="=&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="12">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="StateMachine"/>
                                        <grammars:Concatenate initialCapacity="10">
                                        <grammars:Split>
                                        <grammars:ByDelimiter>
                                        <grammars:RegExp value="end"/>
                                        </grammars:ByDelimiter>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Events"/>
                                        <grammars:Name value="events"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Split>
                                        <grammars:ByDelimiter>
                                        <grammars:RegExp value="end"/>
                                        </grammars:ByDelimiter>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ResetEvents"/>
                                        <grammars:Name value="resetEvents"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Split>
                                        <grammars:ByDelimiter>
                                        <grammars:RegExp value="end"/>
                                        </grammars:ByDelimiter>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Commands"/>
                                        <grammars:Name value="commands"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="States"/>
                                        <grammars:Name value="states"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="State"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:Split>
                                        <grammars:ByDelimiter>
                                        <grammars:RegExp value="end"/>
                                        </grammars:ByDelimiter>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Actions"/>
                                        <grammars:Name value="actions"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Transitions"/>
                                        <grammars:Name value="transitions"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Transition"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="event"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="state"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z][a-zA-Z0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Event"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="code"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Events"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Event"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ResetEvents"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Command"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="code"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Commands"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Command"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="States"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="State"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Actions"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:NonTerminal value="ID"/>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Transitions"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Transition"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://tests.lang.whole.org/StateMachineGrammar"/>
                                        <grammars:Namespace value="org.whole.tests.statemachinegrammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        </grammars:Grammar>
                                    </commons:StageUpFragment>
                                    <workflows:BooleanLiteral value="false"/>
                                </workflows:Expressions>
                            </workflows:InvokeJavaClassMethod>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <models:Model xmlns:models="http://lang.whole.org/Models">
                                        <models:SimpleName value="StateMachine"/>
                                        <models:TypeRelations initialCapacity="0"/>
                                        <models:ModelDeclarations initialCapacity="12">
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="StateMachine"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="4">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Events"/>
                                        <models:SimpleName value="events"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ResetEvents"/>
                                        <models:SimpleName value="resetEvents"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Commands"/>
                                        <models:SimpleName value="commands"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="States"/>
                                        <models:SimpleName value="states"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="State"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="3">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="1">
                                        <models:FeatureModifier value="optional"/>
                                        </models:FeatureModifiers>
                                        <models:SimpleName value="Actions"/>
                                        <models:SimpleName value="actions"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Transitions"/>
                                        <models:SimpleName value="transitions"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Transition"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:SimpleName value="event"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:SimpleName value="state"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Event"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:SimpleName value="code"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Events"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="Event"/>
                                        </models:CompositeEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ResetEvents"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="ID"/>
                                        </models:CompositeEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Command"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:SimpleName value="code"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Commands"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="Command"/>
                                        </models:CompositeEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="States"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="State"/>
                                        </models:CompositeEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Actions"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="ID"/>
                                        </models:CompositeEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Transitions"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="Transition"/>
                                        </models:CompositeEntity>
                                        </models:ModelDeclarations>
                                        <models:Namespace value="org.whole.tests.statemachinegrammar"/>
                                        <commons:Resolver/>
                                        <models:URI value="http://tests.lang.whole.org/StateMachine"/>
                                    </models:Model>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testMappingStateMachine2Grammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="map grammars to models"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="org.whole.lang.grammars.util.GrammarsUtils"/>
                                <workflows:StringLiteral value="deriveModel(org.whole.lang.grammars.model.Grammar, boolean)"/>
                                <workflows:Expressions initialCapacity="2">
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="StateMachineGramar2"/>
                                        <grammars:LanguageDescriptor>
                                        <grammars:URI value="http://tests.lang.whole.org/StateMachine2"/>
                                        <grammars:Namespace value="org.whole.tests.statemachine2grammar"/>
                                        <grammars:Name value="StateMachine2"/>
                                        <commons:Resolver/>
                                        </grammars:LanguageDescriptor>
                                        <grammars:NonTerminal value="StateMachine"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[ \n\r\t]*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="12">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\t"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="events"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="events"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="end"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="end"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="resetEvents"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="resetEvents"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="commands"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="commands"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="state"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="state"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="actions"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="actions"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="=&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="=&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="12">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="StateMachine"/>
                                        <grammars:Concatenate initialCapacity="16">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Events"/>
                                        <grammars:Name value="events"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ResetEvents"/>
                                        <grammars:Name value="resetEvents"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Commands"/>
                                        <grammars:Name value="commands"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="States"/>
                                        <grammars:Name value="states"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="State"/>
                                        <grammars:Concatenate initialCapacity="8">
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Actions"/>
                                        <grammars:Name value="actions"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Transitions"/>
                                        <grammars:Name value="transitions"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Transition"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="event"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="state"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:When>
                                        <grammars:Not>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Not>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z][a-zA-Z0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:When>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Event"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="code"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Events"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Event"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ResetEvents"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Command"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ID"/>
                                        <grammars:Name value="code"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Commands"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Command"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="States"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="State"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Actions"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:NonTerminal value="INDENT"/>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:NonTerminal value="ID"/>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:NonTerminal value="NL"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Transitions"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Transition"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://tests.lang.whole.org/StateMachine2Grammar"/>
                                        <grammars:Namespace value="org.whole.tests.statemachine2grammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        </grammars:Grammar>
                                    </commons:StageUpFragment>
                                    <workflows:BooleanLiteral value="false"/>
                                </workflows:Expressions>
                            </workflows:InvokeJavaClassMethod>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <models:Model xmlns:models="http://lang.whole.org/Models">
                                        <models:SimpleName value="StateMachine2"/>
                                        <models:TypeRelations initialCapacity="0"/>
                                        <models:ModelDeclarations initialCapacity="12">
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="StateMachine"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="4">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Events"/>
                                        <models:SimpleName value="events"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ResetEvents"/>
                                        <models:SimpleName value="resetEvents"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Commands"/>
                                        <models:SimpleName value="commands"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="States"/>
                                        <models:SimpleName value="states"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="State"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="3">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="1">
                                        <models:FeatureModifier value="optional"/>
                                        </models:FeatureModifiers>
                                        <models:SimpleName value="Actions"/>
                                        <models:SimpleName value="actions"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Transitions"/>
                                        <models:SimpleName value="transitions"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Transition"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:SimpleName value="event"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:SimpleName value="state"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Event"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:SimpleName value="code"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Events"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="Event"/>
                                        </models:CompositeEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ResetEvents"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="ID"/>
                                        </models:CompositeEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Command"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ID"/>
                                        <models:SimpleName value="code"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Commands"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="Command"/>
                                        </models:CompositeEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="States"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="State"/>
                                        </models:CompositeEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Actions"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="ID"/>
                                        </models:CompositeEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Transitions"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="Transition"/>
                                        </models:CompositeEntity>
                                        </models:ModelDeclarations>
                                        <models:Namespace value="org.whole.tests.statemachine2grammar"/>
                                        <commons:Resolver/>
                                        <models:URI value="http://tests.lang.whole.org/StateMachine2"/>
                                    </models:Model>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testMappingFamilyGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="map grammars to models"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="org.whole.lang.grammars.util.GrammarsUtils"/>
                                <workflows:StringLiteral value="deriveModel(org.whole.lang.grammars.model.Grammar, boolean)"/>
                                <workflows:Expressions initialCapacity="2">
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="FamilyGrammar"/>
                                        <grammars:LanguageDescriptor>
                                        <grammars:URI value="http://oslo.examples.whole.org/Family"/>
                                        <grammars:Namespace value="org.whole.examples.familygrammar"/>
                                        <grammars:Name value="Family"/>
                                        <commons:Resolver/>
                                        </grammars:LanguageDescriptor>
                                        <grammars:NonTerminal value="Persons"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="[ \n\r\t]*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="5">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z]+"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=","/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=", "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=";"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=";"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="4">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Persons"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:NonTerminal value="Person"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="First"/>
                                        <grammars:NonTerminal value="Name"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Last"/>
                                        <grammars:NonTerminal value="Name"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Person"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:As>
                                        <grammars:NonTerminal value="First"/>
                                        <grammars:Name value="first"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Last"/>
                                        <grammars:Name value="last"/>
                                        </grammars:As>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="Persons"/>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        </grammars:Concatenate>
                                        <grammars:Name value="children"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/FamilyGrammar"/>
                                        <grammars:Namespace value="org.whole.examples.familygrammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        </grammars:Grammar>
                                    </commons:StageUpFragment>
                                    <workflows:BooleanLiteral value="false"/>
                                </workflows:Expressions>
                            </workflows:InvokeJavaClassMethod>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <models:Model xmlns:models="http://lang.whole.org/Models">
                                        <models:SimpleName value="Family"/>
                                        <models:TypeRelations initialCapacity="0"/>
                                        <models:ModelDeclarations initialCapacity="4">
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Persons"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="Person"/>
                                        </models:CompositeEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="First"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Last"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Person"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="3">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="First"/>
                                        <models:SimpleName value="first"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Last"/>
                                        <models:SimpleName value="last"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="1">
                                        <models:FeatureModifier value="optional"/>
                                        </models:FeatureModifiers>
                                        <models:SimpleName value="Persons"/>
                                        <models:SimpleName value="children"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        </models:ModelDeclarations>
                                        <models:Namespace value="org.whole.examples.familygrammar"/>
                                        <commons:Resolver/>
                                        <models:URI value="http://oslo.examples.whole.org/Family"/>
                                    </models:Model>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testMappingMT3Grammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="map grammars to models"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="org.whole.lang.grammars.util.GrammarsUtils"/>
                                <workflows:StringLiteral value="deriveModel(org.whole.lang.grammars.model.Grammar, boolean)"/>
                                <workflows:Expressions initialCapacity="2">
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="MT3Grammar"/>
                                        <grammars:LanguageDescriptor>
                                        <grammars:URI value="http://test.whole.org/MT3"/>
                                        <grammars:Namespace value="org.whole.examples.mt3grammar"/>
                                        <grammars:Name value="MT3"/>
                                        <commons:Resolver/>
                                        </grammars:LanguageDescriptor>
                                        <grammars:NonTerminal value="Message"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="6">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="LINE_SEPARATOR"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\r\n|[\n\r\u2028\u2029\u0085]"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value="\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="MSG_SEPARATOR"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=",(\r\n|[\n\r\u2028\u2029\u0085])"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=",\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{\E"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="{"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="}"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{20:\E"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="{20:"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q{30:\E"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Literal value="{30:"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="13">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Message"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Header"/>
                                        <grammars:Name value="header"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="LINE_SEPARATOR"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Body"/>
                                        <grammars:Name value="body"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="LINE_SEPARATOR"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Trailer"/>
                                        <grammars:Name value="trailer"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Header"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Date"/>
                                        <grammars:Name value="date"/>
                                        </grammars:As>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Decimal18"/>
                                        <grammars:Name value="totAmount"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Body"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="MSG_SEPARATOR"/>
                                        <grammars:NonTerminal value="BodyElement"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="BodyElement"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="Msg1"/>
                                        <grammars:NonTerminal value="Msg2"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Msg1"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Bic"/>
                                        <grammars:Name value="bic"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Decimal18"/>
                                        <grammars:Name value="amount"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Msg2"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="DateOfBidth"/>
                                        <grammars:Name value="dateOfBidth"/>
                                        </grammars:As>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Decimal18"/>
                                        <grammars:Name value="amount"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Trailer"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="NofMsg"/>
                                        <grammars:Name value="nofMsg"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Decimal18"/>
                                        <grammars:Split>
                                        <grammars:BySize value="18"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[ 0-9,.]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%18s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="DOUBLE"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Date"/>
                                        <grammars:Split>
                                        <grammars:BySize value="6"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Bic"/>
                                        <grammars:Split>
                                        <grammars:BySize value="11"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9A-Z]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Split>
                                        <grammars:BySize value="20"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%-20s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DateOfBidth"/>
                                        <grammars:Split>
                                        <grammars:BySize value="6"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NofMsg"/>
                                        <grammars:Split>
                                        <grammars:BySize value="2"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        </grammars:Split>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/MT3Grammar"/>
                                        <grammars:Namespace value="org.whole.examples.mt3grammar"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        </grammars:Grammar>
                                    </commons:StageUpFragment>
                                    <workflows:BooleanLiteral value="false"/>
                                </workflows:Expressions>
                            </workflows:InvokeJavaClassMethod>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <models:Model xmlns:models="http://lang.whole.org/Models">
                                        <models:SimpleName value="MT3"/>
                                        <models:TypeRelations initialCapacity="0"/>
                                        <models:ModelDeclarations initialCapacity="13">
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Message"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="3">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Header"/>
                                        <models:SimpleName value="header"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Body"/>
                                        <models:SimpleName value="body"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Trailer"/>
                                        <models:SimpleName value="trailer"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Header"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Date"/>
                                        <models:SimpleName value="date"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="1">
                                        <models:FeatureModifier value="optional"/>
                                        </models:FeatureModifiers>
                                        <models:SimpleName value="Decimal18"/>
                                        <models:SimpleName value="totAmount"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Body"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="BodyElement"/>
                                        </models:CompositeEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="1">
                                        <models:EntityModifier value="abstract"/>
                                        </models:EntityModifiers>
                                        <models:SimpleName value="BodyElement"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Msg1"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="BodyElement"/>
                                        </models:Types>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Bic"/>
                                        <models:SimpleName value="bic"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Decimal18"/>
                                        <models:SimpleName value="amount"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Msg2"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="BodyElement"/>
                                        </models:Types>
                                        <models:Features initialCapacity="3">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DateOfBidth"/>
                                        <models:SimpleName value="dateOfBidth"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="1">
                                        <models:FeatureModifier value="optional"/>
                                        </models:FeatureModifiers>
                                        <models:SimpleName value="Decimal18"/>
                                        <models:SimpleName value="amount"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Trailer"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="1">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NofMsg"/>
                                        <models:SimpleName value="nofMsg"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Decimal18"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="double"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Date"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Bic"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DateOfBidth"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NofMsg"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        </models:ModelDeclarations>
                                        <models:Namespace value="org.whole.examples.mt3grammar"/>
                                        <commons:Resolver/>
                                        <models:URI value="http://test.whole.org/MT3"/>
                                    </models:Model>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testMappingXmlGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="map grammars to models"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="org.whole.lang.grammars.util.GrammarsUtils"/>
                                <workflows:StringLiteral value="deriveModel(org.whole.lang.grammars.model.Grammar, boolean)"/>
                                <workflows:Expressions initialCapacity="2">
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="XmlGrammar"/>
                                        <grammars:LanguageDescriptor>
                                        <grammars:URI value="http://lang.whole.org/Xml"/>
                                        <grammars:Namespace value="org.whole.lang.xml"/>
                                        <grammars:Name value="Xml"/>
                                        <commons:Resolver/>
                                        </grammars:LanguageDescriptor>
                                        <grammars:NonTerminal value="Document"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\p{javaWhitespace}*"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="23">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="QS"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[^&quot;]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NCNAME"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z][_a-zA-Z0-9]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="STRING"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(?s).*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SP"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\p{javaWhitespace}+"/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;?xml\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;?xml"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:Empty>
                                        <grammars:Literal value=" "/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="version"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="version"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="="/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="="/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&quot;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="\&quot;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="encoding"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="encoding"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="standalone"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="standalone"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q?&gt;\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="?&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:Empty>
                                        <grammars:Literal value="\n"/>
                                        </grammars:Empty>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN9"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;!DOCTYPE\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;!DOCTYPE"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN11"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&lt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN12"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;/\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;/"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN13"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=":"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=":"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN14"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;![CDATA[\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;![CDATA["/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN15"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="]]&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="]]&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN16"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="&lt;!--"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;!--"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN17"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="--&gt;"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="--&gt;"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN18"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\Q&lt;?\E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="&lt;?"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="31">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Document"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Prolog"/>
                                        <grammars:Name value="prolog"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Element"/>
                                        <grammars:Name value="element"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Element"/>
                                        <grammars:Concatenate initialCapacity="8">
                                        <grammars:NonTerminal value="TOKEN11"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="tag"/>
                                        </grammars:As>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Attributes"/>
                                        <grammars:Name value="attributes"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IContent"/>
                                        <grammars:Name value="content"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN12"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="tag"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:NonTerminal value="QualifiedName"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IContent"/>
                                        <grammars:Choose initialCapacity="6">
                                        <grammars:NonTerminal value="Element"/>
                                        <grammars:NonTerminal value="CharData"/>
                                        <grammars:NonTerminal value="CDataSect"/>
                                        <grammars:NonTerminal value="Comment"/>
                                        <grammars:NonTerminal value="PI"/>
                                        <grammars:NonTerminal value="Content"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IMisc"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="PI"/>
                                        <grammars:NonTerminal value="Comment"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Version"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Encoding"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Standalone"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="yes|no"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="BOOLEAN"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="XMLDecl"/>
                                        <grammars:Concatenate initialCapacity="12">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Version"/>
                                        <grammars:Name value="version"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:NonTerminal value="Encoding"/>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        </grammars:Concatenate>
                                        <grammars:Name value="encoding"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:NonTerminal value="Standalone"/>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        </grammars:Concatenate>
                                        <grammars:Name value="standalone"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SystemLiteral"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SystemId"/>
                                        <grammars:Concatenate initialCapacity="1">
                                        <grammars:As>
                                        <grammars:NonTerminal value="SystemLiteral"/>
                                        <grammars:Name value="systemLiteral"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="PubidLiteral"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="PublicId"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:As>
                                        <grammars:NonTerminal value="PubidLiteral"/>
                                        <grammars:Name value="pubidLiteral"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SystemLiteral"/>
                                        <grammars:Name value="systemLiteral"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="IExternalId"/>
                                        <grammars:Choose initialCapacity="2">
                                        <grammars:NonTerminal value="SystemId"/>
                                        <grammars:NonTerminal value="PublicId"/>
                                        </grammars:Choose>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DocTypeDecl"/>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:NonTerminal value="TOKEN9"/>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:NonTerminal value="IExternalId"/>
                                        </grammars:Concatenate>
                                        <grammars:Name value="externalId"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Misc"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:NonTerminal value="IMisc"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Prolog"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="XMLDecl"/>
                                        <grammars:Name value="xmlDecl"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="DocTypeDecl"/>
                                        <grammars:Name value="docTypeDecl"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        <grammars:Optional>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Misc"/>
                                        <grammars:Name value="misc"/>
                                        </grammars:As>
                                        </grammars:Optional>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Value"/>
                                        <grammars:NonTerminal value="QS"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Attribute"/>
                                        <grammars:Concatenate initialCapacity="6">
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Value"/>
                                        <grammars:Name value="value"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Attributes"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Attribute"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:NonTerminal value="NCNAME"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NameSpace"/>
                                        <grammars:NonTerminal value="NCNAME"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="QualifiedName"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:As>
                                        <grammars:NonTerminal value="NameSpace"/>
                                        <grammars:Name value="nameSpace"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN13"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CharData"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[^&lt;]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CDataSectData"/>
                                        <grammars:NonTerminal value="STRING"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CDataSect"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN14"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="CDataSectData"/>
                                        </grammars:Repeat>
                                        <grammars:NonTerminal value="TOKEN15"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CommentText"/>
                                        <grammars:NonTerminal value="STRING"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Comment"/>
                                        <grammars:As>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:NonTerminal value="TOKEN16"/>
                                        <grammars:NonTerminal value="CommentText"/>
                                        <grammars:NonTerminal value="TOKEN17"/>
                                        </grammars:Concatenate>
                                        <grammars:Name value="text"/>
                                        </grammars:As>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Instruction"/>
                                        <grammars:NonTerminal value="STRING"/>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="PI"/>
                                        <grammars:Concatenate initialCapacity="5">
                                        <grammars:NonTerminal value="TOKEN18"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="IName"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Instruction"/>
                                        <grammars:Name value="instruction"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Content"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:NonTerminal value="IContent"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://lang.whole.org/XmlGrammar"/>
                                        <grammars:Namespace value="org.whole.lang.xml"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        </grammars:Grammar>
                                    </commons:StageUpFragment>
                                    <workflows:BooleanLiteral value="false"/>
                                </workflows:Expressions>
                            </workflows:InvokeJavaClassMethod>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <models:Model xmlns:models="http://lang.whole.org/Models">
                                        <models:SimpleName value="Xml"/>
                                        <models:TypeRelations initialCapacity="0"/>
                                        <models:ModelDeclarations initialCapacity="31">
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Document"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Prolog"/>
                                        <models:SimpleName value="prolog"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Element"/>
                                        <models:SimpleName value="element"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Element"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="IContent"/>
                                        </models:Types>
                                        <models:Features initialCapacity="3">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="IName"/>
                                        <models:SimpleName value="tag"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="1">
                                        <models:FeatureModifier value="optional"/>
                                        </models:FeatureModifiers>
                                        <models:SimpleName value="Attributes"/>
                                        <models:SimpleName value="attributes"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="IContent"/>
                                        <models:SimpleName value="content"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="1">
                                        <models:EntityModifier value="abstract"/>
                                        </models:EntityModifiers>
                                        <models:SimpleName value="IName"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="1">
                                        <models:EntityModifier value="abstract"/>
                                        </models:EntityModifiers>
                                        <models:SimpleName value="IContent"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="1">
                                        <models:EntityModifier value="abstract"/>
                                        </models:EntityModifiers>
                                        <models:SimpleName value="IMisc"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Version"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Encoding"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Standalone"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="boolean"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="XMLDecl"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="3">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Version"/>
                                        <models:SimpleName value="version"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="1">
                                        <models:FeatureModifier value="optional"/>
                                        </models:FeatureModifiers>
                                        <models:SimpleName value="Encoding"/>
                                        <models:SimpleName value="encoding"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="1">
                                        <models:FeatureModifier value="optional"/>
                                        </models:FeatureModifiers>
                                        <models:SimpleName value="Standalone"/>
                                        <models:SimpleName value="standalone"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="SystemLiteral"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="SystemId"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="IExternalId"/>
                                        </models:Types>
                                        <models:Features initialCapacity="1">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="SystemLiteral"/>
                                        <models:SimpleName value="systemLiteral"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="PubidLiteral"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="PublicId"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="IExternalId"/>
                                        </models:Types>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="PubidLiteral"/>
                                        <models:SimpleName value="pubidLiteral"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="SystemLiteral"/>
                                        <models:SimpleName value="systemLiteral"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="1">
                                        <models:EntityModifier value="abstract"/>
                                        </models:EntityModifiers>
                                        <models:SimpleName value="IExternalId"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="0"/>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DocTypeDecl"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="IName"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="1">
                                        <models:FeatureModifier value="optional"/>
                                        </models:FeatureModifiers>
                                        <models:SimpleName value="IExternalId"/>
                                        <models:SimpleName value="externalId"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Misc"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="IMisc"/>
                                        </models:CompositeEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Prolog"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="3">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="1">
                                        <models:FeatureModifier value="optional"/>
                                        </models:FeatureModifiers>
                                        <models:SimpleName value="XMLDecl"/>
                                        <models:SimpleName value="xmlDecl"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="1">
                                        <models:FeatureModifier value="optional"/>
                                        </models:FeatureModifiers>
                                        <models:SimpleName value="DocTypeDecl"/>
                                        <models:SimpleName value="docTypeDecl"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="1">
                                        <models:FeatureModifier value="optional"/>
                                        </models:FeatureModifiers>
                                        <models:SimpleName value="Misc"/>
                                        <models:SimpleName value="misc"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Value"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Attribute"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="IName"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Value"/>
                                        <models:SimpleName value="value"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Attributes"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="Attribute"/>
                                        </models:CompositeEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="IName"/>
                                        </models:Types>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NameSpace"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="QualifiedName"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="IName"/>
                                        </models:Types>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="NameSpace"/>
                                        <models:SimpleName value="nameSpace"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="CharData"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="IContent"/>
                                        </models:Types>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="CDataSectData"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="CDataSect"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="IContent"/>
                                        </models:Types>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="CDataSectData"/>
                                        </models:CompositeEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="CommentText"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Comment"/>
                                        <models:Types initialCapacity="2">
                                        <models:SimpleName value="IContent"/>
                                        <models:SimpleName value="IMisc"/>
                                        </models:Types>
                                        <models:Features initialCapacity="1">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="CommentText"/>
                                        <models:SimpleName value="text"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Instruction"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="PI"/>
                                        <models:Types initialCapacity="2">
                                        <models:SimpleName value="IContent"/>
                                        <models:SimpleName value="IMisc"/>
                                        </models:Types>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="IName"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Instruction"/>
                                        <models:SimpleName value="instruction"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Content"/>
                                        <models:Types initialCapacity="1">
                                        <models:SimpleName value="IContent"/>
                                        </models:Types>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="IContent"/>
                                        </models:CompositeEntity>
                                        </models:ModelDeclarations>
                                        <models:Namespace value="org.whole.lang.xml"/>
                                        <commons:Resolver/>
                                        <models:URI value="http://lang.whole.org/Xml"/>
                                    </models:Model>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testMappingDTAUSGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="map grammars to models"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="org.whole.lang.grammars.util.GrammarsUtils"/>
                                <workflows:StringLiteral value="deriveModel(org.whole.lang.grammars.model.Grammar, boolean)"/>
                                <workflows:Expressions initialCapacity="2">
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="DTAUSGrammar"/>
                                        <grammars:LanguageDescriptor>
                                        <grammars:URI value="http://xsd.dataintegration.examples.whole.org/DTAUS"/>
                                        <grammars:Namespace value="org.whole.examples.dtaus"/>
                                        <grammars:Name value="DTAUS"/>
                                        <commons:Resolver/>
                                        </grammars:LanguageDescriptor>
                                        <grammars:NonTerminal value="DTAUS"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=""/>
                                        <grammars:Category value="SEPARATOR"/>
                                        <grammars:Literal value=""/>
                                        </grammars:LiteralTerminal>
                                        <grammars:Productions initialCapacity="16">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="0128"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="0128"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="A"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="A"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="00000000"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="00000000"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="    "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="    "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="               "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="               "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="                        "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="                        "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="C"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="C"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=" "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=" "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="   "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="   "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN9"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="        "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="        "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="  "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="  "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN11"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="           "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="           "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN12"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="            "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="            "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN13"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="E"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="E"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN14"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="     "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="     "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TOKEN15"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="                                                   "/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value="                                                   "/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="24">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="DTAUS"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:As>
                                        <grammars:NonTerminal value="ARecord"/>
                                        <grammars:Name value="header"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="CRecords"/>
                                        <grammars:Name value="body"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ERecord"/>
                                        <grammars:Name value="footer"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ARecord"/>
                                        <grammars:Concatenate initialCapacity="14">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:NonTerminal value="TOKEN1"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="TransactionKind"/>
                                        <grammars:Name value="transactionKind"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:Name value="bankID"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN2"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="customerName"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SDate"/>
                                        <grammars:Name value="currentDate"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN3"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LNumber"/>
                                        <grammars:Name value="accountNo"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="RefType"/>
                                        <grammars:Name value="refNo"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN4"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="FDate"/>
                                        <grammars:Name value="executionDate"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN5"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Currency"/>
                                        <grammars:Name value="currency"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CRecords"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="1"/>
                                        <grammars:Size value="9999999"/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="CRecord"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="CRecord"/>
                                        <grammars:Concatenate initialCapacity="26">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Size"/>
                                        <grammars:Name value="recSize"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN6"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:Name value="contractingBankID"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:Name value="targetBankID"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LNumber"/>
                                        <grammars:Name value="targetAccountNo"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="InternalID"/>
                                        <grammars:Name value="internalCustomerID"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="TransactionType"/>
                                        <grammars:Name value="transactionType"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN7"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="AMNumber"/>
                                        <grammars:Name value="dmAmount"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:Name value="bankID"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LNumber"/>
                                        <grammars:Name value="accountNo"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="AMNumber"/>
                                        <grammars:Name value="euroAmount"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN8"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="targetCustomerName"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN9"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="customerName"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="purpose"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Currency"/>
                                        <grammars:Name value="currency"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN10"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="VSNumber"/>
                                        <grammars:Name value="expansionRecNo"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType2"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion2"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN11"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionRecords"/>
                                        <grammars:Name value="expansionRecords"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ExpansionRecords"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="0"/>
                                        <grammars:Size value="99"/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="ExpansionRecord"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ExpansionRecord"/>
                                        <grammars:Concatenate initialCapacity="9">
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType2"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion2"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType3"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion3"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:Name value="expansionType4"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:Name value="expansion4"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN12"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ERecord"/>
                                        <grammars:Concatenate initialCapacity="9">
                                        <grammars:NonTerminal value="TOKEN"/>
                                        <grammars:NonTerminal value="TOKEN13"/>
                                        <grammars:NonTerminal value="TOKEN14"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="RecordNumber"/>
                                        <grammars:Name value="bodyLength"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="STotal"/>
                                        <grammars:Name value="dmTotal"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LTotal"/>
                                        <grammars:Name value="accountTotal"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="LTotal"/>
                                        <grammars:Name value="bankTotal"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="STotal"/>
                                        <grammars:Name value="euroTotal"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="TOKEN15"/>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TransactionKind"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[GL][BK]"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{8}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%08d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Chars"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".{27}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SDate"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{6}"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="LNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{10}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%010d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RefType"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".{10}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="FDate"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(([0-9]{8})|([ ]{8}))"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Currency"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[ 1]"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Size"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{4}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%04d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="SHORT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="InternalID"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value=".{13}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="TransactionType"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="((04000)|(05000)|(05005)|(05006)|(05015)|(51000)|(53000)|(54[0-9][0-9]J)|(56000))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="AMNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{11}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%011d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="VSNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{2}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%02d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="ExpansionType"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="((  )|(01)|(02)|(03))"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="RecordNumber"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{7}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%07d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="STotal"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{13}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%013d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="LTotal"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]{17}"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%017d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="LONG"/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/DTAUSGrammar"/>
                                        <grammars:Namespace value="org.whole.examples.dtaus"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        </grammars:Grammar>
                                    </commons:StageUpFragment>
                                    <workflows:BooleanLiteral value="false"/>
                                </workflows:Expressions>
                            </workflows:InvokeJavaClassMethod>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <models:Model xmlns:models="http://lang.whole.org/Models">
                                        <models:SimpleName value="DTAUS"/>
                                        <models:TypeRelations initialCapacity="0"/>
                                        <models:ModelDeclarations initialCapacity="24">
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="DTAUS"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="3">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ARecord"/>
                                        <models:SimpleName value="header"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="CRecords"/>
                                        <models:SimpleName value="body"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ERecord"/>
                                        <models:SimpleName value="footer"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ARecord"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="8">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="TransactionKind"/>
                                        <models:SimpleName value="transactionKind"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="SNumber"/>
                                        <models:SimpleName value="bankID"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Chars"/>
                                        <models:SimpleName value="customerName"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="SDate"/>
                                        <models:SimpleName value="currentDate"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="LNumber"/>
                                        <models:SimpleName value="accountNo"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="RefType"/>
                                        <models:SimpleName value="refNo"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="FDate"/>
                                        <models:SimpleName value="executionDate"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Currency"/>
                                        <models:SimpleName value="currency"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="CRecords"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="CRecord"/>
                                        </models:CompositeEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="CRecord"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="20">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Size"/>
                                        <models:SimpleName value="recSize"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="SNumber"/>
                                        <models:SimpleName value="contractingBankID"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="SNumber"/>
                                        <models:SimpleName value="targetBankID"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="LNumber"/>
                                        <models:SimpleName value="targetAccountNo"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="InternalID"/>
                                        <models:SimpleName value="internalCustomerID"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="TransactionType"/>
                                        <models:SimpleName value="transactionType"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="AMNumber"/>
                                        <models:SimpleName value="dmAmount"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="SNumber"/>
                                        <models:SimpleName value="bankID"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="LNumber"/>
                                        <models:SimpleName value="accountNo"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="AMNumber"/>
                                        <models:SimpleName value="euroAmount"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Chars"/>
                                        <models:SimpleName value="targetCustomerName"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Chars"/>
                                        <models:SimpleName value="customerName"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Chars"/>
                                        <models:SimpleName value="purpose"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Currency"/>
                                        <models:SimpleName value="currency"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="VSNumber"/>
                                        <models:SimpleName value="expansionRecNo"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ExpansionType"/>
                                        <models:SimpleName value="expansionType1"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Chars"/>
                                        <models:SimpleName value="expansion1"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ExpansionType"/>
                                        <models:SimpleName value="expansionType2"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Chars"/>
                                        <models:SimpleName value="expansion2"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ExpansionRecords"/>
                                        <models:SimpleName value="expansionRecords"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ExpansionRecords"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="ExpansionRecord"/>
                                        </models:CompositeEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ExpansionRecord"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="8">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ExpansionType"/>
                                        <models:SimpleName value="expansionType1"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Chars"/>
                                        <models:SimpleName value="expansion1"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ExpansionType"/>
                                        <models:SimpleName value="expansionType2"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Chars"/>
                                        <models:SimpleName value="expansion2"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ExpansionType"/>
                                        <models:SimpleName value="expansionType3"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Chars"/>
                                        <models:SimpleName value="expansion3"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ExpansionType"/>
                                        <models:SimpleName value="expansionType4"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Chars"/>
                                        <models:SimpleName value="expansion4"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ERecord"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="5">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="RecordNumber"/>
                                        <models:SimpleName value="bodyLength"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="STotal"/>
                                        <models:SimpleName value="dmTotal"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="LTotal"/>
                                        <models:SimpleName value="accountTotal"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="LTotal"/>
                                        <models:SimpleName value="bankTotal"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="STotal"/>
                                        <models:SimpleName value="euroTotal"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="TransactionKind"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="SNumber"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="int"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Chars"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="SDate"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="LNumber"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="long"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="RefType"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="FDate"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Currency"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Size"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="short"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="InternalID"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="TransactionType"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="AMNumber"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="long"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="VSNumber"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="int"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="ExpansionType"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="RecordNumber"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="int"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="STotal"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="long"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="LTotal"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="long"/>
                                        </models:DataEntity>
                                        </models:ModelDeclarations>
                                        <models:Namespace value="org.whole.examples.dtaus"/>
                                        <commons:Resolver/>
                                        <models:URI value="http://xsd.dataintegration.examples.whole.org/DTAUS"/>
                                    </models:Model>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testMappingMotoGPCSVGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="map grammars to models"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="org.whole.lang.grammars.util.GrammarsUtils"/>
                                <workflows:StringLiteral value="deriveModel(org.whole.lang.grammars.model.Grammar, boolean)"/>
                                <workflows:Expressions initialCapacity="2">
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="MotoGP_TeamsCSVGrammar"/>
                                        <grammars:LanguageDescriptor>
                                        <grammars:URI value="http://dataintegration.examples.whole.org/MotoGP"/>
                                        <grammars:Namespace value="org.whole.examples.motogpteams"/>
                                        <grammars:Name value="MotoGP"/>
                                        <commons:Resolver/>
                                        </grammars:LanguageDescriptor>
                                        <grammars:NonTerminal value="Teams"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="2">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value="\r\n|[\n\r\u2028\u2029\u0085]"/>
                                        <commons:Resolver/>
                                        <grammars:Literal value="\n"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:LiteralTerminal>
                                        <grammars:RegExp value=";"/>
                                        <grammars:Category value="DELIMITER"/>
                                        <grammars:Literal value=";"/>
                                        </grammars:LiteralTerminal>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:Productions initialCapacity="5">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Teams"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="2"/>
                                        <grammars:Unbounded/>
                                        <grammars:NonTerminal value="NL"/>
                                        <grammars:NonTerminal value="Team"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Concatenate initialCapacity="3">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Number"/>
                                        <grammars:Name value="number"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[a-zA-Z0-9 ]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Number"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Team"/>
                                        <grammars:Concatenate initialCapacity="7">
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="manufacturer"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Name value="rider1"/>
                                        </grammars:As>
                                        <grammars:NonTerminal value="SEP"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Name value="rider2"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/MotoGPTeamsCSVGrammar"/>
                                        <grammars:Namespace value="org.whole.examples.motogpteams"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        </grammars:Grammar>
                                    </commons:StageUpFragment>
                                    <workflows:BooleanLiteral value="false"/>
                                </workflows:Expressions>
                            </workflows:InvokeJavaClassMethod>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <models:Model xmlns:models="http://lang.whole.org/Models">
                                        <models:SimpleName value="MotoGP"/>
                                        <models:TypeRelations initialCapacity="0"/>
                                        <models:ModelDeclarations initialCapacity="5">
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Teams"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="Team"/>
                                        </models:CompositeEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Rider"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Number"/>
                                        <models:SimpleName value="number"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Number"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="int"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Team"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="4">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:SimpleName value="manufacturer"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Rider"/>
                                        <models:SimpleName value="rider1"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Rider"/>
                                        <models:SimpleName value="rider2"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        </models:ModelDeclarations>
                                        <models:Namespace value="org.whole.examples.motogpteams"/>
                                        <commons:Resolver/>
                                        <models:URI value="http://dataintegration.examples.whole.org/MotoGP"/>
                                    </models:Model>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testMappingMotoGPFLFGrammar"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:InvokeJavaClassMethod xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="map grammars to models"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="org.whole.lang.grammars.util.GrammarsUtils"/>
                                <workflows:StringLiteral value="deriveModel(org.whole.lang.grammars.model.Grammar, boolean)"/>
                                <workflows:Expressions initialCapacity="2">
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <grammars:Grammar xmlns:grammars="http://lang.whole.org/Grammars">
                                        <grammars:Name value="MotoGP_TeamsFLFGrammar"/>
                                        <grammars:LanguageDescriptor>
                                        <grammars:URI value="http://dataintegration.examples.whole.org/MotoGP"/>
                                        <grammars:Namespace value="org.whole.examples.motogpteams"/>
                                        <grammars:Name value="MotoGP"/>
                                        <commons:Resolver/>
                                        </grammars:LanguageDescriptor>
                                        <grammars:NonTerminal value="Teams"/>
                                        <commons:Resolver/>
                                        <grammars:Productions initialCapacity="0"/>
                                        <grammars:Productions initialCapacity="5">
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Teams"/>
                                        <grammars:Repeat>
                                        <grammars:Size value="2"/>
                                        <grammars:Unbounded/>
                                        <commons:Resolver/>
                                        <grammars:NonTerminal value="Team"/>
                                        </grammars:Repeat>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Concatenate initialCapacity="2">
                                        <grammars:Split>
                                        <grammars:BySize value="28"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        <grammars:Split>
                                        <grammars:BySize value="2"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Number"/>
                                        <grammars:Name value="number"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        </grammars:Concatenate>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="(([ ]?[a-zA-Z0-9]+)*)[ ]*"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%s"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="STRING"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Number"/>
                                        <grammars:DataTerminal>
                                        <grammars:RegExp value="[0-9]+"/>
                                        <grammars:Category value="LITERAL"/>
                                        <grammars:Format value="%02d"/>
                                        </grammars:DataTerminal>
                                        <grammars:DataType value="INT"/>
                                        </grammars:Production>
                                        <grammars:Production>
                                        <grammars:NonTerminal value="Team"/>
                                        <grammars:Split>
                                        <grammars:BySize value="100"/>
                                        <grammars:Concatenate initialCapacity="4">
                                        <grammars:Split>
                                        <grammars:BySize value="30"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="name"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        <grammars:Split>
                                        <grammars:BySize value="10"/>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Name"/>
                                        <grammars:Name value="manufacturer"/>
                                        </grammars:As>
                                        </grammars:Split>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Name value="rider1"/>
                                        </grammars:As>
                                        <grammars:As>
                                        <grammars:NonTerminal value="Rider"/>
                                        <grammars:Name value="rider2"/>
                                        </grammars:As>
                                        </grammars:Concatenate>
                                        </grammars:Split>
                                        <commons:Resolver/>
                                        </grammars:Production>
                                        </grammars:Productions>
                                        <grammars:URI value="http://examples.whole.org/MotoGPTeamsFLFGrammar"/>
                                        <grammars:Namespace value="org.whole.examples.motogpteams"/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        <commons:Resolver/>
                                        </grammars:Grammar>
                                    </commons:StageUpFragment>
                                    <workflows:BooleanLiteral value="false"/>
                                </workflows:Expressions>
                            </workflows:InvokeJavaClassMethod>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <models:Model xmlns:models="http://lang.whole.org/Models">
                                        <models:SimpleName value="MotoGP"/>
                                        <models:TypeRelations initialCapacity="0"/>
                                        <models:ModelDeclarations initialCapacity="5">
                                        <models:CompositeEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Teams"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:ComponentModifiers initialCapacity="1">
                                        <models:ComponentModifier value="ordered"/>
                                        </models:ComponentModifiers>
                                        <models:SimpleName value="Team"/>
                                        </models:CompositeEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Rider"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="2">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Number"/>
                                        <models:SimpleName value="number"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="String"/>
                                        </models:DataEntity>
                                        <models:DataEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Number"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:DataType value="int"/>
                                        </models:DataEntity>
                                        <models:SimpleEntity>
                                        <models:EntityModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Team"/>
                                        <models:Types initialCapacity="0"/>
                                        <models:Features initialCapacity="4">
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:SimpleName value="name"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Name"/>
                                        <models:SimpleName value="manufacturer"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Rider"/>
                                        <models:SimpleName value="rider1"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        <models:Feature>
                                        <models:FeatureModifiers initialCapacity="0"/>
                                        <models:SimpleName value="Rider"/>
                                        <models:SimpleName value="rider2"/>
                                        <commons:Resolver/>
                                        </models:Feature>
                                        </models:Features>
                                        </models:SimpleEntity>
                                        </models:ModelDeclarations>
                                        <models:Namespace value="org.whole.examples.motogpteams"/>
                                        <commons:Resolver/>
                                        <models:URI value="http://dataintegration.examples.whole.org/MotoGP"/>
                                    </models:Model>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
            </tests:Tests>
            <tests:Results>
                <tests:IntLiteral value="12"/>
                <tests:IntLiteral value="0"/>
                <tests:IntLiteral value="0"/>
            </tests:Results>
            <tests:Results>
                <tests:IntLiteral value="12"/>
                <tests:IntLiteral value="0"/>
                <tests:IntLiteral value="0"/>
            </tests:Results>
        </tests:TestCase>
        <tests:TestCase>
            <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
            <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
            <tests:Name value="GenericPredictiveParserTest"/>
            <workflows:Sequence xmlns:workflows="http://lang.whole.org/Workflows">
                <workflows:Text value="sequence"/>
                <workflows:FlowObjects initialCapacity="2">
                    <workflows:LoadModel>
                        <workflows:Text value="load Deployer Workflow"/>
                        <workflows:Variable value="deployerWorkflow"/>
                        <workflows:StringLiteral value="org.whole.lang.xml.codebase.XmlBuilderPersistenceKit"/>
                        <workflows:ResourceKind value="CLASSPATH"/>
                        <workflows:StringLiteral value="org/whole/lang/grammars/util/tests/GrammarsDeployer.xwl"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </workflows:LoadModel>
                    <workflows:InvokeOperation>
                        <workflows:Text value="interpret Deployer Workflow"/>
                        <workflows:Variable value="deployerWorkflow"/>
                        <workflows:Operation value="INTERPRETER"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </workflows:InvokeOperation>
                </workflows:FlowObjects>
            </workflows:Sequence>
            <tests:Aspects initialCapacity="0"/>
            <tests:Tests initialCapacity="9">
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testParseDataTypesGrammar"/>
                    <tests:TestStatements initialCapacity="2">
                        <workflows:AssignActivity xmlns:workflows="http://lang.whole.org/Workflows">
                            <workflows:Text value="init source variable"/>
                            <workflows:Assignments initialCapacity="1">
                                <workflows:Assign>
                                    <workflows:Variable value="source"/>
                                    <workflows:StringLiteral value="{&#10;&#9;false;&#10;&#9;x one;&#10;&#9;12345,000000;&#10;&#9;12345;&#10;&#9;two;&#10;&#9;three;&#10;&#9;31/12/2005;&#10;&#9;2009-01-21T17:10:46.120Z;&#10;&#9;true;&#10;&#9;&quot;ciao&quot;;&#10;&#9;-123,456000&#10;}"/>
                                </workflows:Assign>
                            </workflows:Assignments>
                        </workflows:AssignActivity>
                        <tests:AssertThat>
                            <workflows:Parse xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="parse source using grammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:Variable value="source"/>
                                <workflows:StringLiteral value="http://tests.whole.org/DataTypesGrammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:Parse>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <datatypes:DataTypes xmlns:datatypes="http://tests.lang.whole.org/DataTypes" initialCapacity="11">
                                        <datatypes:BooleanLiteral value="false"/>
                                        <datatypes:EnumType value="x one"/>
                                        <datatypes:DecimalLiteral value="12345,000000"/>
                                        <datatypes:IntLiteral value="12345"/>
                                        <datatypes:EnumType value="two"/>
                                        <datatypes:EnumType value="three"/>
                                        <datatypes:DateLiteral value="31/12/2005"/>
                                        <datatypes:DateTimeLiteral value="2009-01-21T17:10:46.120Z"/>
                                        <datatypes:BooleanLiteral value="true"/>
                                        <datatypes:StringLiteral value="ciao"/>
                                        <datatypes:DecimalLiteral value="-123,456000"/>
                                    </datatypes:DataTypes>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testParseMessagesGrammar"/>
                    <tests:TestStatements initialCapacity="2">
                        <workflows:AssignActivity xmlns:workflows="http://lang.whole.org/Workflows">
                            <workflows:Text value="init source variable"/>
                            <workflows:Assignments initialCapacity="1">
                                <workflows:Assign>
                                    <workflows:Variable value="source"/>
                                    <workflows:StringLiteral value="&#10;hd:&#10;&#9;header1 ||&#10;&#9;123numericBody !!&#10;&#10;hd: header2 || nonNumericBody !!&#10;hd:&#10;&#9;header1 ||&#10;&#9;1234567 !!&#10;&#10;"/>
                                </workflows:Assign>
                            </workflows:Assignments>
                        </workflows:AssignActivity>
                        <tests:AssertThat>
                            <workflows:Parse xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="parse source using grammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:Variable value="source"/>
                                <workflows:StringLiteral value="http://tests.whole.org/MessagesGrammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:Parse>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <messages:Messages xmlns:messages="http://test.lang.whole.org/Messages" initialCapacity="3">
                                        <messages:Message>
                                        <messages:Header value="header1"/>
                                        <messages:OtherBody value="123numericBody"/>
                                        </messages:Message>
                                        <messages:Message>
                                        <messages:Header value="header2"/>
                                        <messages:NonNumericBody value="nonNumericBody"/>
                                        </messages:Message>
                                        <messages:Message>
                                        <messages:Header value="header1"/>
                                        <messages:NumericBody value="1234567"/>
                                        </messages:Message>
                                    </messages:Messages>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testParseStateMachineGrammar"/>
                    <tests:TestStatements initialCapacity="2">
                        <workflows:AssignActivity xmlns:workflows="http://lang.whole.org/Workflows">
                            <workflows:Text value="init source variable"/>
                            <workflows:Assignments initialCapacity="1">
                                <workflows:Assign>
                                    <workflows:Variable value="source"/>
                                    <workflows:StringLiteral value="events&#10;  doorClosed  D1CL&#10;  drawOpened  D2OP&#10;  lightOn     L1ON&#10;  doorOpened  D1OP&#10;  panelClosed PNCL&#10;end&#10;&#10;resetEvents&#10;  doorOpened&#10;end&#10;&#10;commands&#10;  unlockPanel PNUL&#10;  lockPanel   PNLK&#10;  lockDoor    D1LK&#10;  unlockDoor  D1UL&#10;end&#10;&#10;state idle&#10;  actions {unlockDoor lockPanel}&#10;  doorClosed =&gt; active&#10;end&#10;&#10;state active&#10;  drawOpened =&gt; waitingForLight&#10;  lightOn    =&gt; waitingForDraw&#10;end&#10;&#10;state waitingForLight&#10;  lightOn =&gt; unlockedPanel&#10;end&#10;&#10;state waitingForDraw&#10;  drawOpened =&gt; unlockedPanel&#10;end&#10;&#10;state unlockedPanel&#10;  actions {unlockPanel lockDoor}&#10;  panelClosed =&gt; idle&#10;end&#10;"/>
                                </workflows:Assign>
                            </workflows:Assignments>
                        </workflows:AssignActivity>
                        <tests:AssertThat>
                            <workflows:Parse xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="parse source using grammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:Variable value="source"/>
                                <workflows:StringLiteral value="http://tests.lang.whole.org/StateMachineGrammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:Parse>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <statemachine:StateMachine xmlns:statemachine="http://tests.lang.whole.org/StateMachine">
                                        <statemachine:Events initialCapacity="5">
                                        <statemachine:Event>
                                        <statemachine:ID value="doorClosed"/>
                                        <statemachine:ID value="D1CL"/>
                                        </statemachine:Event>
                                        <statemachine:Event>
                                        <statemachine:ID value="drawOpened"/>
                                        <statemachine:ID value="D2OP"/>
                                        </statemachine:Event>
                                        <statemachine:Event>
                                        <statemachine:ID value="lightOn"/>
                                        <statemachine:ID value="L1ON"/>
                                        </statemachine:Event>
                                        <statemachine:Event>
                                        <statemachine:ID value="doorOpened"/>
                                        <statemachine:ID value="D1OP"/>
                                        </statemachine:Event>
                                        <statemachine:Event>
                                        <statemachine:ID value="panelClosed"/>
                                        <statemachine:ID value="PNCL"/>
                                        </statemachine:Event>
                                        </statemachine:Events>
                                        <statemachine:ResetEvents initialCapacity="1">
                                        <statemachine:ID value="doorOpened"/>
                                        </statemachine:ResetEvents>
                                        <statemachine:Commands initialCapacity="4">
                                        <statemachine:Command>
                                        <statemachine:ID value="unlockPanel"/>
                                        <statemachine:ID value="PNUL"/>
                                        </statemachine:Command>
                                        <statemachine:Command>
                                        <statemachine:ID value="lockPanel"/>
                                        <statemachine:ID value="PNLK"/>
                                        </statemachine:Command>
                                        <statemachine:Command>
                                        <statemachine:ID value="lockDoor"/>
                                        <statemachine:ID value="D1LK"/>
                                        </statemachine:Command>
                                        <statemachine:Command>
                                        <statemachine:ID value="unlockDoor"/>
                                        <statemachine:ID value="D1UL"/>
                                        </statemachine:Command>
                                        </statemachine:Commands>
                                        <statemachine:States initialCapacity="5">
                                        <statemachine:State>
                                        <statemachine:ID value="idle"/>
                                        <statemachine:Actions initialCapacity="2">
                                        <statemachine:ID value="unlockDoor"/>
                                        <statemachine:ID value="lockPanel"/>
                                        </statemachine:Actions>
                                        <statemachine:Transitions initialCapacity="1">
                                        <statemachine:Transition>
                                        <statemachine:ID value="doorClosed"/>
                                        <statemachine:ID value="active"/>
                                        </statemachine:Transition>
                                        </statemachine:Transitions>
                                        </statemachine:State>
                                        <statemachine:State>
                                        <statemachine:ID value="active"/>
                                        <commons:Resolver/>
                                        <statemachine:Transitions initialCapacity="2">
                                        <statemachine:Transition>
                                        <statemachine:ID value="drawOpened"/>
                                        <statemachine:ID value="waitingForLight"/>
                                        </statemachine:Transition>
                                        <statemachine:Transition>
                                        <statemachine:ID value="lightOn"/>
                                        <statemachine:ID value="waitingForDraw"/>
                                        </statemachine:Transition>
                                        </statemachine:Transitions>
                                        </statemachine:State>
                                        <statemachine:State>
                                        <statemachine:ID value="waitingForLight"/>
                                        <commons:Resolver/>
                                        <statemachine:Transitions initialCapacity="1">
                                        <statemachine:Transition>
                                        <statemachine:ID value="lightOn"/>
                                        <statemachine:ID value="unlockedPanel"/>
                                        </statemachine:Transition>
                                        </statemachine:Transitions>
                                        </statemachine:State>
                                        <statemachine:State>
                                        <statemachine:ID value="waitingForDraw"/>
                                        <commons:Resolver/>
                                        <statemachine:Transitions initialCapacity="1">
                                        <statemachine:Transition>
                                        <statemachine:ID value="drawOpened"/>
                                        <statemachine:ID value="unlockedPanel"/>
                                        </statemachine:Transition>
                                        </statemachine:Transitions>
                                        </statemachine:State>
                                        <statemachine:State>
                                        <statemachine:ID value="unlockedPanel"/>
                                        <statemachine:Actions initialCapacity="2">
                                        <statemachine:ID value="unlockPanel"/>
                                        <statemachine:ID value="lockDoor"/>
                                        </statemachine:Actions>
                                        <statemachine:Transitions initialCapacity="1">
                                        <statemachine:Transition>
                                        <statemachine:ID value="panelClosed"/>
                                        <statemachine:ID value="idle"/>
                                        </statemachine:Transition>
                                        </statemachine:Transitions>
                                        </statemachine:State>
                                        </statemachine:States>
                                    </statemachine:StateMachine>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testParseStateMachine2Grammar"/>
                    <tests:TestStatements initialCapacity="2">
                        <workflows:AssignActivity xmlns:workflows="http://lang.whole.org/Workflows">
                            <workflows:Text value="init source variable"/>
                            <workflows:Assignments initialCapacity="1">
                                <workflows:Assign>
                                    <workflows:Variable value="source"/>
                                    <workflows:StringLiteral value="events&#10;  doorClosed  D1CL&#10;  drawOpened  D2OP&#10;  lightOn     L1ON&#10;  doorOpened  D1OP&#10;  panelClosed PNCL&#10;end&#10;&#10;resetEvents&#10;  doorOpened&#10;end&#10;&#10;commands&#10;  unlockPanel PNUL&#10;  lockPanel   PNLK&#10;  lockDoor    D1LK&#10;  unlockDoor  D1UL&#10;end&#10;&#10;state idle&#10;  actions {unlockDoor lockPanel}&#10;  doorClosed =&gt; active&#10;end&#10;&#10;state active&#10;  drawOpened =&gt; waitingForLight&#10;  lightOn    =&gt; waitingForDraw&#10;end&#10;&#10;state waitingForLight&#10;  lightOn =&gt; unlockedPanel&#10;end&#10;&#10;state waitingForDraw&#10;  drawOpened =&gt; unlockedPanel&#10;end&#10;&#10;state unlockedPanel&#10;  actions {unlockPanel lockDoor}&#10;  panelClosed =&gt; idle&#10;end&#10;"/>
                                </workflows:Assign>
                            </workflows:Assignments>
                        </workflows:AssignActivity>
                        <tests:AssertThat>
                            <workflows:Parse xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="parse source using grammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:Variable value="source"/>
                                <workflows:StringLiteral value="http://tests.lang.whole.org/StateMachine2Grammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:Parse>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <statemachine2:StateMachine xmlns:statemachine2="http://tests.lang.whole.org/StateMachine2">
                                        <statemachine2:Events initialCapacity="5">
                                        <statemachine2:Event>
                                        <statemachine2:ID value="doorClosed"/>
                                        <statemachine2:ID value="D1CL"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <statemachine2:ID value="drawOpened"/>
                                        <statemachine2:ID value="D2OP"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <statemachine2:ID value="lightOn"/>
                                        <statemachine2:ID value="L1ON"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <statemachine2:ID value="doorOpened"/>
                                        <statemachine2:ID value="D1OP"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <statemachine2:ID value="panelClosed"/>
                                        <statemachine2:ID value="PNCL"/>
                                        </statemachine2:Event>
                                        </statemachine2:Events>
                                        <statemachine2:ResetEvents initialCapacity="1">
                                        <statemachine2:ID value="doorOpened"/>
                                        </statemachine2:ResetEvents>
                                        <statemachine2:Commands initialCapacity="4">
                                        <statemachine2:Command>
                                        <statemachine2:ID value="unlockPanel"/>
                                        <statemachine2:ID value="PNUL"/>
                                        </statemachine2:Command>
                                        <statemachine2:Command>
                                        <statemachine2:ID value="lockPanel"/>
                                        <statemachine2:ID value="PNLK"/>
                                        </statemachine2:Command>
                                        <statemachine2:Command>
                                        <statemachine2:ID value="lockDoor"/>
                                        <statemachine2:ID value="D1LK"/>
                                        </statemachine2:Command>
                                        <statemachine2:Command>
                                        <statemachine2:ID value="unlockDoor"/>
                                        <statemachine2:ID value="D1UL"/>
                                        </statemachine2:Command>
                                        </statemachine2:Commands>
                                        <statemachine2:States initialCapacity="5">
                                        <statemachine2:State>
                                        <statemachine2:ID value="idle"/>
                                        <statemachine2:Actions initialCapacity="2">
                                        <statemachine2:ID value="unlockDoor"/>
                                        <statemachine2:ID value="lockPanel"/>
                                        </statemachine2:Actions>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="doorClosed"/>
                                        <statemachine2:ID value="active"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        <statemachine2:State>
                                        <statemachine2:ID value="active"/>
                                        <commons:Resolver/>
                                        <statemachine2:Transitions initialCapacity="2">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="drawOpened"/>
                                        <statemachine2:ID value="waitingForLight"/>
                                        </statemachine2:Transition>
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="lightOn"/>
                                        <statemachine2:ID value="waitingForDraw"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        <statemachine2:State>
                                        <statemachine2:ID value="waitingForLight"/>
                                        <commons:Resolver/>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="lightOn"/>
                                        <statemachine2:ID value="unlockedPanel"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        <statemachine2:State>
                                        <statemachine2:ID value="waitingForDraw"/>
                                        <commons:Resolver/>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="drawOpened"/>
                                        <statemachine2:ID value="unlockedPanel"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        <statemachine2:State>
                                        <statemachine2:ID value="unlockedPanel"/>
                                        <statemachine2:Actions initialCapacity="2">
                                        <statemachine2:ID value="unlockPanel"/>
                                        <statemachine2:ID value="lockDoor"/>
                                        </statemachine2:Actions>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="panelClosed"/>
                                        <statemachine2:ID value="idle"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        </statemachine2:States>
                                    </statemachine2:StateMachine>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testParseFamilyGrammar"/>
                    <tests:TestStatements initialCapacity="2">
                        <workflows:AssignActivity xmlns:workflows="http://lang.whole.org/Workflows">
                            <workflows:Text value="init source variable"/>
                            <workflows:Assignments initialCapacity="1">
                                <workflows:Assign>
                                    <workflows:Variable value="source"/>
                                    <workflows:StringLiteral value="Bob Smith&#10;{&#10;&#9;Joanie Smith,&#10;&#9;Cathy Smith,&#10;&#9;Bob Smith&#10;&#9;{&#10;&#9;&#9;Josh Smith,&#10;&#9;&#9;Jennie Smith,&#10;&#9;&#9;Julie Smith&#10;&#9;};&#10;};&#10;"/>
                                </workflows:Assign>
                            </workflows:Assignments>
                        </workflows:AssignActivity>
                        <tests:AssertThat>
                            <workflows:Parse xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="parse source using grammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:Variable value="source"/>
                                <workflows:StringLiteral value="http://examples.whole.org/FamilyGrammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:Parse>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <family:Persons xmlns:family="http://oslo.examples.whole.org/Family" initialCapacity="1">
                                        <family:Person>
                                        <family:First value="Bob"/>
                                        <family:Last value="Smith"/>
                                        <family:Persons initialCapacity="3">
                                        <family:Person>
                                        <family:First value="Joanie"/>
                                        <family:Last value="Smith"/>
                                        <commons:Resolver/>
                                        </family:Person>
                                        <family:Person>
                                        <family:First value="Cathy"/>
                                        <family:Last value="Smith"/>
                                        <commons:Resolver/>
                                        </family:Person>
                                        <family:Person>
                                        <family:First value="Bob"/>
                                        <family:Last value="Smith"/>
                                        <family:Persons initialCapacity="3">
                                        <family:Person>
                                        <family:First value="Josh"/>
                                        <family:Last value="Smith"/>
                                        <commons:Resolver/>
                                        </family:Person>
                                        <family:Person>
                                        <family:First value="Jennie"/>
                                        <family:Last value="Smith"/>
                                        <commons:Resolver/>
                                        </family:Person>
                                        <family:Person>
                                        <family:First value="Julie"/>
                                        <family:Last value="Smith"/>
                                        <commons:Resolver/>
                                        </family:Person>
                                        </family:Persons>
                                        </family:Person>
                                        </family:Persons>
                                        </family:Person>
                                    </family:Persons>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testParseMT3Grammar"/>
                    <tests:TestStatements initialCapacity="2">
                        <workflows:AssignActivity xmlns:workflows="http://lang.whole.org/Workflows">
                            <workflows:Text value="init source variable"/>
                            <workflows:Assignments initialCapacity="1">
                                <workflows:Assign>
                                    <workflows:Variable value="source"/>
                                    <workflows:StringLiteral value="{270570            1235.3}&#10;{30:Mr. Pippo           270570},&#10;{30:Mr. Pippo           270570}&#10;{02}"/>
                                </workflows:Assign>
                            </workflows:Assignments>
                        </workflows:AssignActivity>
                        <tests:AssertThat>
                            <workflows:Parse xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="parse source using grammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:Variable value="source"/>
                                <workflows:StringLiteral value="http://examples.whole.org/MT3Grammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:Parse>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <mt3:Message xmlns:mt3="http://test.whole.org/MT3">
                                        <mt3:Header>
                                        <mt3:Date value="270570"/>
                                        <mt3:Decimal18 value="            1235.3"/>
                                        </mt3:Header>
                                        <mt3:Body initialCapacity="2">
                                        <mt3:Msg2>
                                        <mt3:Name value="Mr. Pippo           "/>
                                        <mt3:DateOfBidth value="270570"/>
                                        <commons:Resolver/>
                                        </mt3:Msg2>
                                        <mt3:Msg2>
                                        <mt3:Name value="Mr. Pippo           "/>
                                        <mt3:DateOfBidth value="270570"/>
                                        <commons:Resolver/>
                                        </mt3:Msg2>
                                        </mt3:Body>
                                        <mt3:Trailer>
                                        <mt3:NofMsg value="02"/>
                                        </mt3:Trailer>
                                    </mt3:Message>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testParseDTAUSGrammar"/>
                    <tests:TestStatements initialCapacity="2">
                        <workflows:AssignActivity xmlns:workflows="http://lang.whole.org/Workflows">
                            <workflows:Text value="init source variable"/>
                            <workflows:Assignments initialCapacity="1">
                                <workflows:Assign>
                                    <workflows:Variable value="source"/>
                                    <workflows:StringLiteral value="0128AGK5009990000000000MUSTERMANN                 070108    1234567890EF00010402               21012008                        10303C50099900700999009876543210080000012346851000 0000000000050099900123456789000001010044   MALEREI PINSEL UND KLECKS G        NIKOLAUS MUSTERMANN                                   1  0501MBH                        02RECHNUNG 1111 VOM 13.1.2008           02 RECHNUNG 1112 VOM 14.1.200028 RECHNUNG 1113 VOM 15.1.200208                                                                  0128E     0000001000000000000000000009876543210000000000700999000000001010044                                                   "/>
                                </workflows:Assign>
                            </workflows:Assignments>
                        </workflows:AssignActivity>
                        <tests:AssertThat>
                            <workflows:Parse xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="parse source using grammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:Variable value="source"/>
                                <workflows:StringLiteral value="http://examples.whole.org/DTAUSGrammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:Parse>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <dtaus:DTAUS xmlns:dtaus="http://xsd.dataintegration.examples.whole.org/DTAUS">
                                        <dtaus:ARecord>
                                        <dtaus:TransactionKind value="GK"/>
                                        <dtaus:SNumber value="50099900"/>
                                        <dtaus:Chars value="MUSTERMANN                 "/>
                                        <dtaus:SDate value="070108"/>
                                        <dtaus:LNumber value="1234567890"/>
                                        <dtaus:RefType value="EF00010402"/>
                                        <dtaus:FDate value="21012008"/>
                                        <dtaus:Currency value="1"/>
                                        </dtaus:ARecord>
                                        <dtaus:CRecords initialCapacity="1">
                                        <dtaus:CRecord>
                                        <dtaus:Size value="0303"/>
                                        <dtaus:SNumber value="50099900"/>
                                        <dtaus:SNumber value="70099900"/>
                                        <dtaus:LNumber value="9876543210"/>
                                        <dtaus:InternalID value="0800000123468"/>
                                        <dtaus:TransactionType value="51000"/>
                                        <dtaus:AMNumber value="00000000000"/>
                                        <dtaus:SNumber value="50099900"/>
                                        <dtaus:LNumber value="1234567890"/>
                                        <dtaus:AMNumber value="00001010044"/>
                                        <dtaus:Chars value="MALEREI PINSEL UND KLECKS G"/>
                                        <dtaus:Chars value="NIKOLAUS MUSTERMANN        "/>
                                        <dtaus:Chars value="                           "/>
                                        <dtaus:Currency value="1"/>
                                        <dtaus:VSNumber value="05"/>
                                        <dtaus:ExpansionType value="01"/>
                                        <dtaus:Chars value="MBH                        "/>
                                        <dtaus:ExpansionType value="02"/>
                                        <dtaus:Chars value="RECHNUNG 1111 VOM 13.1.2008"/>
                                        <dtaus:ExpansionRecords initialCapacity="1">
                                        <dtaus:ExpansionRecord>
                                        <dtaus:ExpansionType value="02"/>
                                        <dtaus:Chars value=" RECHNUNG 1112 VOM 14.1.200"/>
                                        <dtaus:ExpansionType value="02"/>
                                        <dtaus:Chars value="8 RECHNUNG 1113 VOM 15.1.20"/>
                                        <dtaus:ExpansionType value="02"/>
                                        <dtaus:Chars value="08                         "/>
                                        <dtaus:ExpansionType value="  "/>
                                        <dtaus:Chars value="                           "/>
                                        </dtaus:ExpansionRecord>
                                        </dtaus:ExpansionRecords>
                                        </dtaus:CRecord>
                                        </dtaus:CRecords>
                                        <dtaus:ERecord>
                                        <dtaus:RecordNumber value="0000001"/>
                                        <dtaus:STotal value="0000000000000"/>
                                        <dtaus:LTotal value="00000009876543210"/>
                                        <dtaus:LTotal value="00000000070099900"/>
                                        <dtaus:STotal value="0000001010044"/>
                                        </dtaus:ERecord>
                                    </dtaus:DTAUS>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testParseMotoGPCSVGrammar"/>
                    <tests:TestStatements initialCapacity="2">
                        <workflows:AssignActivity xmlns:workflows="http://lang.whole.org/Workflows">
                            <workflows:Text value="init source variable"/>
                            <workflows:Assignments initialCapacity="1">
                                <workflows:Assign>
                                    <workflows:Variable value="source"/>
                                    <workflows:StringLiteral value="Ducati Marlboro Team;Ducati;Casey Stoner;1;Marco Melandri;33&#10;Fiat Yamaha Team;Yamaha;Valentino Rossi;46;Jorge Lorenzo;48&#10;Repsol Honda Team;Honda;Daniel Pedrosa;26;Nicky Hayden;69&#10;Team Alice;Ducati;Tony Elias;24;Sylvain Guintoli;50&#10;Honda Gresini;Honda;Shinya Nakano;56;Alex De Angelis;3&#10;Yamaha Tech 3;Yamaha;Colin Edwards;5;James Toseland;52&#10;Rizla Suzuki MotoGP;Suzuki;Chris Vermeulen;7;Loris Capirossi;65&#10;Kawasaki Racing Team;Kavasaki;John Hopkins;21;Anthony West;13&#10;Honda LCR;Honda;Randy De Puniet;14; ;0&#10;Jir Scot Team;Honda;Andrea Dovizioso;3; ;0"/>
                                </workflows:Assign>
                            </workflows:Assignments>
                        </workflows:AssignActivity>
                        <tests:AssertThat>
                            <workflows:Parse xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="parse source using grammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:Variable value="source"/>
                                <workflows:StringLiteral value="http://examples.whole.org/MotoGPTeamsCSVGrammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:Parse>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <motogp_teams:Teams xmlns:motogp_teams="http://dataintegration.examples.whole.org/MotoGP" initialCapacity="10">
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Ducati Marlboro Team"/>
                                        <motogp_teams:Name value="Ducati"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Casey Stoner"/>
                                        <motogp_teams:Number value="01"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Marco Melandri"/>
                                        <motogp_teams:Number value="33"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Fiat Yamaha Team"/>
                                        <motogp_teams:Name value="Yamaha"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Valentino Rossi"/>
                                        <motogp_teams:Number value="46"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Jorge Lorenzo"/>
                                        <motogp_teams:Number value="48"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Repsol Honda Team"/>
                                        <motogp_teams:Name value="Honda"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Daniel Pedrosa"/>
                                        <motogp_teams:Number value="26"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Nicky Hayden"/>
                                        <motogp_teams:Number value="69"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Team Alice"/>
                                        <motogp_teams:Name value="Ducati"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Tony Elias"/>
                                        <motogp_teams:Number value="24"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Sylvain Guintoli"/>
                                        <motogp_teams:Number value="50"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Honda Gresini"/>
                                        <motogp_teams:Name value="Honda"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Shinya Nakano"/>
                                        <motogp_teams:Number value="56"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Alex De Angelis"/>
                                        <motogp_teams:Number value="03"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Yamaha Tech 3"/>
                                        <motogp_teams:Name value="Yamaha"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Colin Edwards"/>
                                        <motogp_teams:Number value="05"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="James Toseland"/>
                                        <motogp_teams:Number value="52"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Rizla Suzuki MotoGP"/>
                                        <motogp_teams:Name value="Suzuki"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Chris Vermeulen"/>
                                        <motogp_teams:Number value="07"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Loris Capirossi"/>
                                        <motogp_teams:Number value="65"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Kawasaki Racing Team"/>
                                        <motogp_teams:Name value="Kavasaki"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="John Hopkins"/>
                                        <motogp_teams:Number value="21"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Anthony West"/>
                                        <motogp_teams:Number value="13"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Honda LCR"/>
                                        <motogp_teams:Name value="Honda"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Randy De Puniet"/>
                                        <motogp_teams:Number value="14"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value=" "/>
                                        <motogp_teams:Number value="00"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Jir Scot Team"/>
                                        <motogp_teams:Name value="Honda"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Andrea Dovizioso"/>
                                        <motogp_teams:Number value="03"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value=" "/>
                                        <motogp_teams:Number value="00"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                    </motogp_teams:Teams>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testParseMotoGPFLFGrammar"/>
                    <tests:TestStatements initialCapacity="2">
                        <workflows:AssignActivity xmlns:workflows="http://lang.whole.org/Workflows">
                            <workflows:Text value="init source variable"/>
                            <workflows:Assignments initialCapacity="1">
                                <workflows:Assign>
                                    <workflows:Variable value="source"/>
                                    <workflows:StringLiteral value="Ducati Marlboro Team          Ducati    Casey Stoner                01Marco Melandri              33Fiat Yamaha Team              Yamaha    Valentino Rossi             46Jorge Lorenzo               48Repsol Honda Team             Honda     Daniel Pedrosa              26Nicky Hayden                69Team Alice                    Ducati    Tony Elias                  24Sylvain Guintoli            50Honda Gresini                 Honda     Shinya Nakano               56Alex De Angelis             03Yamaha Tech 3                 Yamaha    Colin Edwards               05James Toseland              52Rizla Suzuki MotoGP           Suzuki    Chris Vermeulen             07Loris Capirossi             65Kawasaki Racing Team          Kavasaki  John Hopkins                21Anthony West                13Honda LCR                     Honda     Randy De Puniet             14                            00Jir Scot Team                 Honda     Andrea Dovizioso            03                            00"/>
                                </workflows:Assign>
                            </workflows:Assignments>
                        </workflows:AssignActivity>
                        <tests:AssertThat>
                            <workflows:Parse xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="parse source using grammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:Variable value="source"/>
                                <workflows:StringLiteral value="http://examples.whole.org/MotoGPTeamsFLFGrammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:Parse>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <motogp_teams:Teams xmlns:motogp_teams="http://dataintegration.examples.whole.org/MotoGP" initialCapacity="10">
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Ducati Marlboro Team"/>
                                        <motogp_teams:Name value="Ducati"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Casey Stoner"/>
                                        <motogp_teams:Number value="01"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Marco Melandri"/>
                                        <motogp_teams:Number value="33"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Fiat Yamaha Team"/>
                                        <motogp_teams:Name value="Yamaha"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Valentino Rossi"/>
                                        <motogp_teams:Number value="46"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Jorge Lorenzo"/>
                                        <motogp_teams:Number value="48"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Repsol Honda Team"/>
                                        <motogp_teams:Name value="Honda"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Daniel Pedrosa"/>
                                        <motogp_teams:Number value="26"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Nicky Hayden"/>
                                        <motogp_teams:Number value="69"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Team Alice"/>
                                        <motogp_teams:Name value="Ducati"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Tony Elias"/>
                                        <motogp_teams:Number value="24"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Sylvain Guintoli"/>
                                        <motogp_teams:Number value="50"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Honda Gresini"/>
                                        <motogp_teams:Name value="Honda"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Shinya Nakano"/>
                                        <motogp_teams:Number value="56"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Alex De Angelis"/>
                                        <motogp_teams:Number value="03"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Yamaha Tech 3"/>
                                        <motogp_teams:Name value="Yamaha"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Colin Edwards"/>
                                        <motogp_teams:Number value="05"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="James Toseland"/>
                                        <motogp_teams:Number value="52"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Rizla Suzuki MotoGP"/>
                                        <motogp_teams:Name value="Suzuki"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Chris Vermeulen"/>
                                        <motogp_teams:Number value="07"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Loris Capirossi"/>
                                        <motogp_teams:Number value="65"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Kawasaki Racing Team"/>
                                        <motogp_teams:Name value="Kavasaki"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="John Hopkins"/>
                                        <motogp_teams:Number value="21"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Anthony West"/>
                                        <motogp_teams:Number value="13"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Honda LCR"/>
                                        <motogp_teams:Name value="Honda"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Randy De Puniet"/>
                                        <motogp_teams:Number value="14"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value=""/>
                                        <motogp_teams:Number value="00"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                        <motogp_teams:Team>
                                        <motogp_teams:Name value="Jir Scot Team"/>
                                        <motogp_teams:Name value="Honda"/>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value="Andrea Dovizioso"/>
                                        <motogp_teams:Number value="03"/>
                                        </motogp_teams:Rider>
                                        <motogp_teams:Rider>
                                        <motogp_teams:Name value=""/>
                                        <motogp_teams:Number value="00"/>
                                        </motogp_teams:Rider>
                                        </motogp_teams:Team>
                                    </motogp_teams:Teams>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
            </tests:Tests>
            <tests:Results>
                <tests:IntLiteral value="9"/>
                <tests:IntLiteral value="0"/>
                <tests:IntLiteral value="0"/>
            </tests:Results>
            <tests:Results>
                <tests:IntLiteral value="9"/>
                <tests:IntLiteral value="0"/>
                <tests:IntLiteral value="0"/>
            </tests:Results>
        </tests:TestCase>
        <tests:TestCase>
            <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
            <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
            <tests:Name value="GrammarBasedUnparserVisitorTest"/>
            <workflows:Sequence xmlns:workflows="http://lang.whole.org/Workflows">
                <workflows:Text value="sequence"/>
                <workflows:FlowObjects initialCapacity="2">
                    <workflows:LoadModel>
                        <workflows:Text value="load Deployer Workflow"/>
                        <workflows:Variable value="deployerWorkflow"/>
                        <workflows:StringLiteral value="org.whole.lang.xml.codebase.XmlBuilderPersistenceKit"/>
                        <workflows:ResourceKind value="CLASSPATH"/>
                        <workflows:StringLiteral value="org/whole/lang/grammars/util/tests/GrammarsDeployer.xwl"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </workflows:LoadModel>
                    <workflows:InvokeOperation>
                        <workflows:Text value="interpret Deployer Workflow"/>
                        <workflows:Variable value="deployerWorkflow"/>
                        <workflows:Operation value="INTERPRETER"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </workflows:InvokeOperation>
                </workflows:FlowObjects>
            </workflows:Sequence>
            <tests:Aspects initialCapacity="0"/>
            <tests:Tests initialCapacity="2">
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testUnparseWithFragments"/>
                    <tests:TestStatements initialCapacity="2">
                        <workflows:Sequence xmlns:workflows="http://lang.whole.org/Workflows">
                            <workflows:Text value="unparse models with and without fragments"/>
                            <workflows:FlowObjects initialCapacity="2">
                                <workflows:Unparse>
                                    <workflows:Text value="unparse model with fragments using grammar"/>
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <statemachine2:StateMachine xmlns:statemachine2="http://tests.lang.whole.org/StateMachine2">
                                        <statemachine2:Events initialCapacity="5">
                                        <statemachine2:Event>
                                        <commons:StageDownFragment>
                                        <queries:Addition xmlns:queries="http://lang.whole.org/Queries">
                                        <queries:StringLiteral value="door"/>
                                        <queries:StringLiteral value="Closed"/>
                                        </queries:Addition>
                                        </commons:StageDownFragment>
                                        <statemachine2:ID value="D1CL"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <commons:SameStageFragment>
                                        <queries:StringLiteral xmlns:queries="http://lang.whole.org/Queries" value="drawOpened"/>
                                        </commons:SameStageFragment>
                                        <statemachine2:ID value="D2OP"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <commons:StageUpFragment>
                                        <queries:StringLiteral xmlns:queries="http://lang.whole.org/Queries" value="lightOn"/>
                                        </commons:StageUpFragment>
                                        <statemachine2:ID value="L1ON"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <statemachine2:ID value="doorOpened"/>
                                        <statemachine2:ID value="D1OP"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <statemachine2:ID value="panelClosed"/>
                                        <statemachine2:ID value="PNCL"/>
                                        </statemachine2:Event>
                                        </statemachine2:Events>
                                        <statemachine2:ResetEvents initialCapacity="1">
                                        <statemachine2:ID value="doorOpened"/>
                                        </statemachine2:ResetEvents>
                                        <statemachine2:Commands initialCapacity="3">
                                        <statemachine2:Command>
                                        <statemachine2:ID value="unlockPanel"/>
                                        <statemachine2:ID value="PNUL"/>
                                        </statemachine2:Command>
                                        <commons:StageUpFragment>
                                        <statemachine2:Commands initialCapacity="2">
                                        <statemachine2:Command>
                                        <statemachine2:ID value="lockPanel"/>
                                        <statemachine2:ID value="PNLK"/>
                                        </statemachine2:Command>
                                        <statemachine2:Command>
                                        <statemachine2:ID value="lockDoor"/>
                                        <statemachine2:ID value="D1LK"/>
                                        </statemachine2:Command>
                                        </statemachine2:Commands>
                                        </commons:StageUpFragment>
                                        <statemachine2:Command>
                                        <statemachine2:ID value="unlockDoor"/>
                                        <statemachine2:ID value="D1UL"/>
                                        </statemachine2:Command>
                                        </statemachine2:Commands>
                                        <statemachine2:States initialCapacity="5">
                                        <statemachine2:State>
                                        <statemachine2:ID value="idle"/>
                                        <commons:SameStageFragment>
                                        <statemachine2:Actions initialCapacity="2">
                                        <statemachine2:ID value="unlockDoor"/>
                                        <statemachine2:ID value="lockPanel"/>
                                        </statemachine2:Actions>
                                        </commons:SameStageFragment>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="doorClosed"/>
                                        <statemachine2:ID value="active"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        <commons:SameStageFragment>
                                        <statemachine2:State>
                                        <statemachine2:ID value="active"/>
                                        <commons:Resolver/>
                                        <statemachine2:Transitions initialCapacity="2">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="drawOpened"/>
                                        <statemachine2:ID value="waitingForLight"/>
                                        </statemachine2:Transition>
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="lightOn"/>
                                        <statemachine2:ID value="waitingForDraw"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        </commons:SameStageFragment>
                                        <statemachine2:State>
                                        <statemachine2:ID value="waitingForLight"/>
                                        <commons:Resolver/>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="lightOn"/>
                                        <statemachine2:ID value="unlockedPanel"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        <statemachine2:State>
                                        <statemachine2:ID value="waitingForDraw"/>
                                        <commons:Resolver/>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="drawOpened"/>
                                        <statemachine2:ID value="unlockedPanel"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        <statemachine2:State>
                                        <statemachine2:ID value="unlockedPanel"/>
                                        <statemachine2:Actions initialCapacity="2">
                                        <statemachine2:ID value="unlockPanel"/>
                                        <statemachine2:ID value="lockDoor"/>
                                        </statemachine2:Actions>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="panelClosed"/>
                                        <statemachine2:ID value="idle"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        </statemachine2:States>
                                        </statemachine2:StateMachine>
                                    </commons:StageUpFragment>
                                    <workflows:Variable value="toStringFromModelWithFragments"/>
                                    <workflows:StringLiteral value="http://tests.lang.whole.org/StateMachine2Grammar"/>
                                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                </workflows:Unparse>
                                <workflows:Unparse>
                                    <workflows:Text value="unparse model without fragments using grammar"/>
                                    <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <statemachine2:StateMachine xmlns:statemachine2="http://tests.lang.whole.org/StateMachine2">
                                        <statemachine2:Events initialCapacity="5">
                                        <statemachine2:Event>
                                        <statemachine2:ID value="doorClosed"/>
                                        <statemachine2:ID value="D1CL"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <statemachine2:ID value="drawOpened"/>
                                        <statemachine2:ID value="D2OP"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <statemachine2:ID value="lightOn"/>
                                        <statemachine2:ID value="L1ON"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <statemachine2:ID value="doorOpened"/>
                                        <statemachine2:ID value="D1OP"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <statemachine2:ID value="panelClosed"/>
                                        <statemachine2:ID value="PNCL"/>
                                        </statemachine2:Event>
                                        </statemachine2:Events>
                                        <statemachine2:ResetEvents initialCapacity="1">
                                        <statemachine2:ID value="doorOpened"/>
                                        </statemachine2:ResetEvents>
                                        <statemachine2:Commands initialCapacity="4">
                                        <statemachine2:Command>
                                        <statemachine2:ID value="unlockPanel"/>
                                        <statemachine2:ID value="PNUL"/>
                                        </statemachine2:Command>
                                        <statemachine2:Command>
                                        <statemachine2:ID value="lockPanel"/>
                                        <statemachine2:ID value="PNLK"/>
                                        </statemachine2:Command>
                                        <statemachine2:Command>
                                        <statemachine2:ID value="lockDoor"/>
                                        <statemachine2:ID value="D1LK"/>
                                        </statemachine2:Command>
                                        <statemachine2:Command>
                                        <statemachine2:ID value="unlockDoor"/>
                                        <statemachine2:ID value="D1UL"/>
                                        </statemachine2:Command>
                                        </statemachine2:Commands>
                                        <statemachine2:States initialCapacity="5">
                                        <statemachine2:State>
                                        <statemachine2:ID value="idle"/>
                                        <statemachine2:Actions initialCapacity="2">
                                        <statemachine2:ID value="unlockDoor"/>
                                        <statemachine2:ID value="lockPanel"/>
                                        </statemachine2:Actions>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="doorClosed"/>
                                        <statemachine2:ID value="active"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        <statemachine2:State>
                                        <statemachine2:ID value="active"/>
                                        <commons:Resolver/>
                                        <statemachine2:Transitions initialCapacity="2">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="drawOpened"/>
                                        <statemachine2:ID value="waitingForLight"/>
                                        </statemachine2:Transition>
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="lightOn"/>
                                        <statemachine2:ID value="waitingForDraw"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        <statemachine2:State>
                                        <statemachine2:ID value="waitingForLight"/>
                                        <commons:Resolver/>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="lightOn"/>
                                        <statemachine2:ID value="unlockedPanel"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        <statemachine2:State>
                                        <statemachine2:ID value="waitingForDraw"/>
                                        <commons:Resolver/>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="drawOpened"/>
                                        <statemachine2:ID value="unlockedPanel"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        <statemachine2:State>
                                        <statemachine2:ID value="unlockedPanel"/>
                                        <statemachine2:Actions initialCapacity="2">
                                        <statemachine2:ID value="unlockPanel"/>
                                        <statemachine2:ID value="lockDoor"/>
                                        </statemachine2:Actions>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="panelClosed"/>
                                        <statemachine2:ID value="idle"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        </statemachine2:States>
                                        </statemachine2:StateMachine>
                                    </commons:StageUpFragment>
                                    <workflows:Variable value="toStringFromModelWithoutFragments"/>
                                    <workflows:StringLiteral value="http://tests.lang.whole.org/StateMachine2Grammar"/>
                                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                </workflows:Unparse>
                            </workflows:FlowObjects>
                        </workflows:Sequence>
                        <tests:AssertThat>
                            <tests:DataName value="toStringFromModelWithFragments"/>
                            <tests:Equals>
                                <tests:DataName value="toStringFromModelWithoutFragments"/>
                            </tests:Equals>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testUnparseWithBehavioralLiteral"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:Unparse xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="unparse model using grammar"/>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <datatypes:DataTypes xmlns:datatypes="http://tests.lang.whole.org/DataTypes" initialCapacity="11">
                                        <datatypes:BooleanLiteral value="false"/>
                                        <datatypes:EnumType value="x one"/>
                                        <datatypes:DecimalLiteral value="12345,500000"/>
                                        <datatypes:IntLiteral value="12345"/>
                                        <datatypes:EnumType value="two"/>
                                        <datatypes:EnumType value="three"/>
                                        <datatypes:DateLiteral value="31/12/2003"/>
                                        <datatypes:DateTimeLiteral value="2009-01-21T17:10:46.120Z"/>
                                        <datatypes:BooleanLiteral value="true"/>
                                        <datatypes:StringLiteral value="ciao"/>
                                        <datatypes:DecimalLiteral value="-123,456000"/>
                                    </datatypes:DataTypes>
                                </commons:StageUpFragment>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                <workflows:StringLiteral value="http://tests.whole.org/DataTypesGrammar"/>
                                <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                            </workflows:Unparse>
                            <tests:Equals>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <environment:StringData xmlns:environment="http://lang.whole.org/Environment" value="{&#10;    false&#10;&#10;&#10;    ;&#10;    x one;&#10;    12345,500000;&#10;    12345;&#10;    two;&#10;    three;&#10;    31/12/2003;&#10;    2009-01-21T17:10:46.120Z;&#10;    true&#10;&#10;&#10;    ;&#10;    &quot;ciao&quot;;&#10;    -123,456000&#10;}"/>
                                </commons:StageUpFragment>
                            </tests:Equals>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
            </tests:Tests>
            <tests:Results>
                <tests:IntLiteral value="2"/>
                <tests:IntLiteral value="0"/>
                <tests:IntLiteral value="0"/>
            </tests:Results>
            <tests:Results>
                <tests:IntLiteral value="2"/>
                <tests:IntLiteral value="0"/>
                <tests:IntLiteral value="0"/>
            </tests:Results>
        </tests:TestCase>
        <tests:TestCase>
            <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
            <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
            <tests:Name value="GrammarBasedPrettyPrinterVisitorTest"/>
            <workflows:Sequence xmlns:workflows="http://lang.whole.org/Workflows">
                <workflows:Text value="sequence"/>
                <workflows:FlowObjects initialCapacity="2">
                    <workflows:LoadModel>
                        <workflows:Text value="load Deployer Workflow"/>
                        <workflows:Variable value="deployerWorkflow"/>
                        <workflows:StringLiteral value="org.whole.lang.xml.codebase.XmlBuilderPersistenceKit"/>
                        <workflows:ResourceKind value="CLASSPATH"/>
                        <workflows:StringLiteral value="org/whole/lang/grammars/util/tests/GrammarsDeployer.xwl"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </workflows:LoadModel>
                    <workflows:InvokeOperation>
                        <workflows:Text value="interpret Deployer Workflow"/>
                        <workflows:Variable value="deployerWorkflow"/>
                        <workflows:Operation value="INTERPRETER"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </workflows:InvokeOperation>
                </workflows:FlowObjects>
            </workflows:Sequence>
            <tests:Aspects initialCapacity="0"/>
            <tests:Tests initialCapacity="2">
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testPrettyPrintWithFragments"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:Sequence xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="sequence"/>
                                <workflows:FlowObjects initialCapacity="2">
                                    <workflows:InvokeJavaClassMethod>
                                        <workflows:Text value="pretty print string from model with fragments"/>
                                        <workflows:Variable value="toStringFromModel"/>
                                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                        <workflows:StringLiteral value="org.whole.lang.operations.PrettyPrinterOperation"/>
                                        <workflows:StringLiteral value="toPrettyPrintString(org.whole.lang.model.IEntity)"/>
                                        <workflows:Expressions initialCapacity="1">
                                        <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <statemachine2:StateMachine xmlns:statemachine2="http://tests.lang.whole.org/StateMachine2">
                                        <statemachine2:Events initialCapacity="5">
                                        <statemachine2:Event>
                                        <commons:StageDownFragment>
                                        <queries:Addition xmlns:queries="http://lang.whole.org/Queries">
                                        <queries:StringLiteral value="door"/>
                                        <queries:StringLiteral value="Closed"/>
                                        </queries:Addition>
                                        </commons:StageDownFragment>
                                        <statemachine2:ID value="D1CL"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <commons:SameStageFragment>
                                        <queries:StringLiteral xmlns:queries="http://lang.whole.org/Queries" value="drawOpened"/>
                                        </commons:SameStageFragment>
                                        <statemachine2:ID value="D2OP"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <commons:StageUpFragment>
                                        <queries:StringLiteral xmlns:queries="http://lang.whole.org/Queries" value="lightOn"/>
                                        </commons:StageUpFragment>
                                        <statemachine2:ID value="L1ON"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <statemachine2:ID value="doorOpened"/>
                                        <statemachine2:ID value="D1OP"/>
                                        </statemachine2:Event>
                                        <statemachine2:Event>
                                        <statemachine2:ID value="panelClosed"/>
                                        <statemachine2:ID value="PNCL"/>
                                        </statemachine2:Event>
                                        </statemachine2:Events>
                                        <statemachine2:ResetEvents initialCapacity="1">
                                        <statemachine2:ID value="doorOpened"/>
                                        </statemachine2:ResetEvents>
                                        <statemachine2:Commands initialCapacity="3">
                                        <statemachine2:Command>
                                        <statemachine2:ID value="unlockPanel"/>
                                        <statemachine2:ID value="PNUL"/>
                                        </statemachine2:Command>
                                        <commons:StageUpFragment>
                                        <statemachine2:Commands initialCapacity="2">
                                        <statemachine2:Command>
                                        <statemachine2:ID value="lockPanel"/>
                                        <statemachine2:ID value="PNLK"/>
                                        </statemachine2:Command>
                                        <statemachine2:Command>
                                        <statemachine2:ID value="lockDoor"/>
                                        <statemachine2:ID value="D1LK"/>
                                        </statemachine2:Command>
                                        </statemachine2:Commands>
                                        </commons:StageUpFragment>
                                        <statemachine2:Command>
                                        <statemachine2:ID value="unlockDoor"/>
                                        <statemachine2:ID value="D1UL"/>
                                        </statemachine2:Command>
                                        </statemachine2:Commands>
                                        <statemachine2:States initialCapacity="5">
                                        <statemachine2:State>
                                        <statemachine2:ID value="idle"/>
                                        <commons:SameStageFragment>
                                        <statemachine2:Actions initialCapacity="2">
                                        <statemachine2:ID value="unlockDoor"/>
                                        <statemachine2:ID value="lockPanel"/>
                                        </statemachine2:Actions>
                                        </commons:SameStageFragment>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="doorClosed"/>
                                        <statemachine2:ID value="active"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        <commons:SameStageFragment>
                                        <statemachine2:State>
                                        <statemachine2:ID value="active"/>
                                        <commons:Resolver/>
                                        <statemachine2:Transitions initialCapacity="2">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="drawOpened"/>
                                        <statemachine2:ID value="waitingForLight"/>
                                        </statemachine2:Transition>
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="lightOn"/>
                                        <statemachine2:ID value="waitingForDraw"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        </commons:SameStageFragment>
                                        <statemachine2:State>
                                        <statemachine2:ID value="waitingForLight"/>
                                        <commons:Resolver/>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="lightOn"/>
                                        <statemachine2:ID value="unlockedPanel"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        <statemachine2:State>
                                        <statemachine2:ID value="waitingForDraw"/>
                                        <commons:Resolver/>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="drawOpened"/>
                                        <statemachine2:ID value="unlockedPanel"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        <statemachine2:State>
                                        <statemachine2:ID value="unlockedPanel"/>
                                        <statemachine2:Actions initialCapacity="2">
                                        <statemachine2:ID value="unlockPanel"/>
                                        <statemachine2:ID value="lockDoor"/>
                                        </statemachine2:Actions>
                                        <statemachine2:Transitions initialCapacity="1">
                                        <statemachine2:Transition>
                                        <statemachine2:ID value="panelClosed"/>
                                        <statemachine2:ID value="idle"/>
                                        </statemachine2:Transition>
                                        </statemachine2:Transitions>
                                        </statemachine2:State>
                                        </statemachine2:States>
                                        </statemachine2:StateMachine>
                                        </commons:StageUpFragment>
                                        </workflows:Expressions>
                                    </workflows:InvokeJavaClassMethod>
                                    <workflows:LoadModel>
                                        <workflows:Text value="loadmodel"/>
                                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                        <workflows:StringLiteral value="org.whole.lang.text.codebase.TextSourcePersistenceKit"/>
                                        <workflows:ResourceKind value="VARIABLE"/>
                                        <workflows:Variable value="toStringFromModel"/>
                                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                    </workflows:LoadModel>
                                </workflows:FlowObjects>
                            </workflows:Sequence>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <text:Document xmlns:text="http://lang.whole.org/Text" initialCapacity="35">
                                        <text:Row initialCapacity="1">
                                        <text:Text value="events"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;doorClosed&#9;D1CL"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;drawOpened&#9;D2OP"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;lightOn&#9;L1ON"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;doorOpened&#9;D1OP"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;panelClosed&#9;PNCL"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="end"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="resetEvents"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;doorOpened"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="end"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="commands"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;unlockPanel&#9;PNUL"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;lockPanel&#9;PNLK"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;lockDoor&#9;D1LK"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;unlockDoor&#9;D1UL"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="end"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="state idle"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;actions {unlockDoor lockPanel}"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;doorClosed =&gt; active"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="end"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="state active"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;drawOpened =&gt; waitingForLight"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;lightOn =&gt; waitingForDraw"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="end"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="state waitingForLight"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;lightOn =&gt; unlockedPanel"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="end"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="state waitingForDraw"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;drawOpened =&gt; unlockedPanel"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="end"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="state unlockedPanel"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;actions {unlockPanel lockDoor}"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="&#9;panelClosed =&gt; idle"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="end"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value=""/>
                                        </text:Row>
                                    </text:Document>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
                <tests:Test>
                    <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    <tests:Name value="testPrettyPrintWithBehavioralLiteral"/>
                    <tests:TestStatements initialCapacity="1">
                        <tests:AssertThat>
                            <workflows:Sequence xmlns:workflows="http://lang.whole.org/Workflows">
                                <workflows:Text value="sequence"/>
                                <workflows:FlowObjects initialCapacity="2">
                                    <workflows:InvokeJavaClassMethod>
                                        <workflows:Text value="pretty print string from model"/>
                                        <workflows:Variable value="toStringFromModel"/>
                                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                        <workflows:StringLiteral value="org.whole.lang.operations.PrettyPrinterOperation"/>
                                        <workflows:StringLiteral value="toPrettyPrintString(org.whole.lang.model.IEntity)"/>
                                        <workflows:Expressions initialCapacity="1">
                                        <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                        <datatypes:DataTypes xmlns:datatypes="http://tests.lang.whole.org/DataTypes" initialCapacity="11">
                                        <datatypes:BooleanLiteral value="false"/>
                                        <datatypes:EnumType value="x one"/>
                                        <datatypes:DecimalLiteral value="12345,500000"/>
                                        <datatypes:IntLiteral value="12345"/>
                                        <datatypes:EnumType value="two"/>
                                        <datatypes:EnumType value="three"/>
                                        <datatypes:DateLiteral value="31/12/2003"/>
                                        <datatypes:DateTimeLiteral value="2009-01-21T17:10:46.120Z"/>
                                        <datatypes:BooleanLiteral value="true"/>
                                        <datatypes:StringLiteral value="ciao"/>
                                        <datatypes:DecimalLiteral value="-123,456000"/>
                                        </datatypes:DataTypes>
                                        </commons:StageUpFragment>
                                        </workflows:Expressions>
                                    </workflows:InvokeJavaClassMethod>
                                    <workflows:LoadModel>
                                        <workflows:Text value="loadmodel"/>
                                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                        <workflows:StringLiteral value="org.whole.lang.text.codebase.TextSourcePersistenceKit"/>
                                        <workflows:ResourceKind value="VARIABLE"/>
                                        <workflows:Variable value="toStringFromModel"/>
                                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                                    </workflows:LoadModel>
                                </workflows:FlowObjects>
                            </workflows:Sequence>
                            <tests:Matches>
                                <commons:StageUpFragment xmlns:commons="http://lang.whole.org/Commons">
                                    <text:Document xmlns:text="http://lang.whole.org/Text" initialCapacity="19">
                                        <text:Row initialCapacity="1">
                                        <text:Text value="{"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="    false"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value=""/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value=""/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="    ;"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="    x one;"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="    12345,500000;"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="    12345;"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="    two;"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="    three;"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="    31/12/2003;"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="    2009-01-21T17:10:46.120Z;"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="    true"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value=""/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value=""/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="    ;"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="    &quot;ciao&quot;;"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="    -123,456000"/>
                                        </text:Row>
                                        <text:Row initialCapacity="1">
                                        <text:Text value="}"/>
                                        </text:Row>
                                    </text:Document>
                                </commons:StageUpFragment>
                            </tests:Matches>
                        </tests:AssertThat>
                    </tests:TestStatements>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                    <tests:Result>
                        <tests:Outcome value="SUCCESS"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                        <commons:Resolver xmlns:commons="http://lang.whole.org/Commons"/>
                    </tests:Result>
                </tests:Test>
            </tests:Tests>
            <tests:Results>
                <tests:IntLiteral value="2"/>
                <tests:IntLiteral value="0"/>
                <tests:IntLiteral value="0"/>
            </tests:Results>
            <tests:Results>
                <tests:IntLiteral value="2"/>
                <tests:IntLiteral value="0"/>
                <tests:IntLiteral value="0"/>
            </tests:Results>
        </tests:TestCase>
    </tests:TestCases>
    <tests:Results>
        <tests:IntLiteral value="37"/>
        <tests:IntLiteral value="0"/>
        <tests:IntLiteral value="0"/>
    </tests:Results>
    <tests:Results>
        <tests:IntLiteral value="37"/>
        <tests:IntLiteral value="0"/>
        <tests:IntLiteral value="0"/>
    </tests:Results>
</tests:TestSuite>
