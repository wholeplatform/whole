package org.whole.lang.xsd.codebase;

import org.whole.lang.builders.IBuilderOperation;
import org.whole.lang.templates.AbstractTemplateFactory;

public class MappingActions extends AbstractTemplateFactory<org.whole.lang.actions.model.LanguageActionFactory> {

    public void apply(IBuilderOperation op) {
        org.whole.lang.actions.builders.IActionsBuilder b0 = (org.whole.lang.actions.builders.IActionsBuilder) op.wGetBuilder(org.whole.lang.actions.reflect.ActionsLanguageKit.URI);
        b0.LanguageActionFactory_();
        b0.URI("whole:org.whole.lang.xsd.codebase:MappingActions");
        b0.Namespace("org.whole.lang.xsd.codebase");
        b0.Name("Xsd Mapping Actions");
        org.whole.lang.commons.builders.ICommonsBuilder b1 = (org.whole.lang.commons.builders.ICommonsBuilder) op.wGetBuilder(org.whole.lang.commons.reflect.CommonsLanguageKit.URI);
        b1.Resolver();
        b0.URI("http://xsd.lang.whole.org/Mapping");
        b0.ToolbarActions_();
        b1.Resolver();
        b0.SimpleAction_();
        b0.Label("Normalize");
        org.whole.lang.queries.builders.IQueriesBuilder b2 = (org.whole.lang.queries.builders.IQueriesBuilder) op.wGetBuilder(org.whole.lang.queries.reflect.QueriesLanguageKit.URI);
        b2.Block_(7);
        b2.QueryDeclaration_();
        b2.Name("languageDiffers");
        b2.Names_(2);
        b2.Name("contextURI");
        b2.Name("entityURI");
        b2._Names();
        b2.Block_(2);
        b2.QueryDeclaration_();
        b2.Name("getLanguage");
        b2.Names_(2);
        b2.Name("URI");
        b2.Name("index");
        b2._Names();
        b1.SameStageFragment_();
        org.whole.lang.workflows.builders.IWorkflowsBuilder b3 = (org.whole.lang.workflows.builders.IWorkflowsBuilder) op.wGetBuilder(org.whole.lang.workflows.reflect.WorkflowsLanguageKit.URI);
        b3.Sequence_();
        b3.Text("sequence");
        b3.FlowObjects_(2);
        b3.InvokeJavaInstanceMethod_();
        b3.Text("index of '#'");
        b3.Variable("index");
        b3.Variable("URI");
        b1.Resolver();
        b3.StringLiteral("java.lang.String");
        b3.StringLiteral("indexOf(java.lang.String)");
        b3.Expressions_(1);
        b3.StringLiteral("#");
        b3._Expressions();
        b3._InvokeJavaInstanceMethod();
        b3.InvokeJavaInstanceMethod_();
        b3.Text("subString up to index");
        b1.Resolver();
        b3.Variable("URI");
        b1.Resolver();
        b3.StringLiteral("java.lang.String");
        b3.StringLiteral("substring(int, int)");
        b3.Expressions_(2);
        b3.IntLiteral(0);
        b3.Variable("index");
        b3._Expressions();
        b3._InvokeJavaInstanceMethod();
        b3._FlowObjects();
        b3._Sequence();
        b1._SameStageFragment();
        b2._QueryDeclaration();
        b2.Choose_(2);
        b2.If_();
        b2.Equals_();
        b2.Call_();
        b2.Name("getLanguage");
        b2.Expressions_(1);
        b2.VariableRefStep("contextURI");
        b2._Expressions();
        b2._Call();
        b2.Call_();
        b2.Name("getLanguage");
        b2.Expressions_(1);
        b2.VariableRefStep("entityURI");
        b2._Expressions();
        b2._Call();
        b2._Equals();
        b2.BooleanLiteral(false);
        b2._If();
        b2.Do_();
        b2.BooleanLiteral(true);
        b2._Do();
        b2._Choose();
        b2._Block();
        b2._QueryDeclaration();
        b2.Filter_();
        b2.Union_();
        b2.Expressions_(0);
        b2._Expressions();
        b1.Resolver();
        b2._Union();
        b2.VariableTest("mappings");
        b2._Filter();
        b2.Filter_();
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#namespace");
        b2.VariableTest("languageURI");
        b2._Filter();
        b2.CartesianUpdate_();
        b2.Path_(2);
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#mappings");
        b2.Filter_();
        b2.DescendantStep();
        b2.And_(1);
        b2.And_(2);
        b2.AtFeatureTest("featureType");
        b2.TypeTest("http://lang.whole.org/Commons#Resolver");
        b2._And();
        b2._And();
        b2._Filter();
        b2._Path();
        b2.StringLiteral("http://lang.whole.org/Commons#composite_element");
        b2._CartesianUpdate();
        b2.CartesianUpdate_();
        b2.Filter_();
        b2.Sequence_(4);
        b2.Filter_();
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#mixedDataType");
        b2.KindTest("IMPL");
        b2._Filter();
        b2.Path_(2);
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#mixedTypes");
        b2.Filter_();
        b2.ChildStep();
        b2.KindTest("IMPL");
        b2._Filter();
        b2._Path();
        b2.Path_(2);
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#mappings");
        b2.Filter_();
        b2.DescendantStep();
        b2.And_(1);
        b2.TypeTest("http://xsd.lang.whole.org/Mapping#URI");
        b2._And();
        b2._Filter();
        b2._Path();
        b2.Path_(2);
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#dataTypes");
        b2.Filter_();
        b2.DescendantStep();
        b2.And_(1);
        b2.TypeTest("http://xsd.lang.whole.org/Mapping#URI");
        b2._And();
        b2._Filter();
        b2._Path();
        b2._Sequence();
        b2.LessThan_();
        b3.InvokeJavaInstanceMethod_();
        b3.Text("index of '#'");
        b1.Resolver();
        b3.Variable("self");
        b1.Resolver();
        b3.StringLiteral("java.lang.String");
        b3.StringLiteral("indexOf(java.lang.String)");
        b3.Expressions_(1);
        b3.StringLiteral("#");
        b3._Expressions();
        b3._InvokeJavaInstanceMethod();
        b2.IntLiteral(0);
        b2._LessThan();
        b2._Filter();
        b2.Addition_();
        b2.VariableRefStep("languageURI");
        b2.Addition_();
        b2.StringLiteral("#");
        b2.SelfStep();
        b2._Addition();
        b2._Addition();
        b2._CartesianUpdate();
        b2.CartesianInsert_();
        b2.Placement("INTO");
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#mappings");
        b2.Path_(2);
        b2.VariableRefStep("mappings");
        b2.ChildStep();
        b2._Path();
        b2._CartesianInsert();
        b2.SelfStep();
        b2._Block();
        b0._SimpleAction();
        b1.Resolver();
        b0.SimpleAction_();
        b0.Label("Interpret");
        b2.Block_(2);
        b2.Filter_();
        b2.FeatureStep("namespace");
        b2.VariableTest("languageURI");
        b2._Filter();
        b1.SameStageFragment_();
        b3.Sequence_();
        b3.Text("deploy the mapping strategy and update persistence and editor");
        b3.FlowObjects_(5);
        b3.InvokeJavaClassMethod_();
        b3.Text("get a MappingStrategyRegistry instance");
        b3.Variable("strategyRegistry");
        b1.Resolver();
        b3.StringLiteral("org.whole.lang.xsd.codebase.MappingStrategyRegistry");
        b3.StringLiteral("instance()");
        b1.Resolver();
        b3._InvokeJavaClassMethod();
        b3.InvokeJavaInstanceMethod_();
        b3.Text("add strategy to the MappingStrategyRegistry");
        b1.Resolver();
        b3.Variable("strategyRegistry");
        b1.Resolver();
        b3.StringLiteral("org.whole.lang.xsd.codebase.MappingStrategyRegistry");
        b3.StringLiteral("putMappingModel(org.whole.lang.xsd.mapping.model.MappingStrategy)");
        b3.Expressions_(1);
        b3.Variable("self");
        b3._Expressions();
        b3._InvokeJavaInstanceMethod();
        b3.InvokeJavaClassMethod_();
        b3.Text("get language kit from languageURI");
        b3.Variable("lk");
        b1.Resolver();
        b3.StringLiteral("org.whole.lang.reflect.ReflectionFactory");
        b3.StringLiteral("getLanguageKit(java.lang.String)");
        b3.Expressions_(1);
        b3.Variable("languageURI");
        b3._Expressions();
        b3._InvokeJavaClassMethod();
        b3.InvokeJavaClassMethod_();
        b3.Text("update persistence and edito");
        b1.Resolver();
        b1.Resolver();
        b3.StringLiteral("org.whole.lang.reflect.ReflectionFactory");
        b3.StringLiteral("updatePersistenceAndEditorKits(org.whole.lang.reflect.ILanguageKit)");
        b3.Expressions_(1);
        b3.Variable("lk");
        b3._Expressions();
        b3._InvokeJavaClassMethod();
        b3.InvokeJavaClassMethod_();
        b3.Text("deploy schema operations");
        b1.Resolver();
        b1.Resolver();
        b3.StringLiteral("org.whole.lang.xsd.util.SchemaHelpers");
        b3.StringLiteral("deploySchemaOperations(java.lang.String)");
        b3.Expressions_(1);
        b3.Variable("languageURI");
        b3._Expressions();
        b3._InvokeJavaClassMethod();
        b3._FlowObjects();
        b3._Sequence();
        b1._SameStageFragment();
        b2._Block();
        b0._SimpleAction();
        b0.SimpleAction_();
        b0.Label("Generate Artifacts");
        b2.Block_(2);
        b2.Filter_();
        b1.SameStageFragment_();
        b3.Sequence_();
        b3.Text("sequence");
        b3.FlowObjects_(2);
        b3.InvokeJavaClassMethod_();
        b3.Text("clone mapping");
        b3.Variable("clonedMapping");
        b1.Resolver();
        b3.StringLiteral("org.whole.lang.util.EntityUtils");
        b3.StringLiteral("clone(org.whole.lang.model.IEntity)");
        b3.Expressions_(1);
        b3.Variable("self");
        b3._Expressions();
        b3._InvokeJavaClassMethod();
        b3.InvokeOperation_();
        b3.Text("normalize mapping");
        b3.Variable("clonedMapping");
        b3.Operation("NORMALIZER");
        b1.Resolver();
        b3._InvokeOperation();
        b3._FlowObjects();
        b3._Sequence();
        b1._SameStageFragment();
        b2.VariableTest("normalizedMapping");
        b2._Filter();
        b2.Select_();
        b1.StageUpFragment_();
        org.whole.lang.artifacts.builders.IArtifactsBuilder b4 = (org.whole.lang.artifacts.builders.IArtifactsBuilder) op.wGetBuilder(org.whole.lang.artifacts.reflect.ArtifactsLanguageKit.URI);
        b4.Workspace_();
        b1.Resolver();
        b4.Projects_(1);
        b4.Project_();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Artifacts#Name");
        b1.VarName("projectName");
        b1.Quantifier("!");
        b1._Variable();
        b4.Natures_(0);
        b4._Natures();
        b1.Resolver();
        b4.Artifacts_(1);
        b4.FolderArtifact_();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Artifacts#Name");
        b1.VarName("sourceFolderName");
        b1.Quantifier("!");
        b1._Variable();
        b1.Resolver();
        b4.Artifacts_(1);
        b4.PackageArtifact_();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Artifacts#Name");
        b1.VarName("packageName");
        b1.Quantifier("!");
        b1._Variable();
        b1.Resolver();
        b4.Artifacts_(1);
        b4.FileArtifact_();
        b4.NameWithExtension_();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Artifacts#Name");
        b1.VarName("mappingStrategyClassName");
        b1.Quantifier("!");
        b1._Variable();
        b4.Extension("java");
        b4._NameWithExtension();
        b4.Metadata_();
        b1.Resolver();
        b1.Resolver();
        b1.Resolver();
        b1.Resolver();
        b4.PersistenceKitId("org.whole.lang.java.codebase.JavaSourcePersistenceKit");
        b4._Metadata();
        b1.StageUpFragment_();
        org.whole.lang.java.builders.IJavaBuilder b5 = (org.whole.lang.java.builders.IJavaBuilder) op.wGetBuilder(org.whole.lang.java.reflect.JavaLanguageKit.URI);
        b5.CompilationUnit_();
        b5.PackageDeclaration_();
        b1.Resolver();
        b1.Resolver();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#QualifiedName");
        b1.VarName("packageName");
        b1.Quantifier("!");
        b1._Variable();
        b5._PackageDeclaration();
        b5.ImportDeclarations_(8);
        b5.ImportDeclaration_();
        b5.QualifiedName("org.whole.lang.commons.parsers.CommonsDataTypePersistenceParser.parseEntityDescriptor");
        b5.ImportModifier(false);
        b5.ImportModifier(true);
        b5._ImportDeclaration();
        b5.ImportDeclaration_();
        b5.QualifiedName("java.util.Collections");
        b5.ImportModifier(false);
        b5.ImportModifier(false);
        b5._ImportDeclaration();
        b5.ImportDeclaration_();
        b5.QualifiedName("java.util.HashMap");
        b5.ImportModifier(false);
        b5.ImportModifier(false);
        b5._ImportDeclaration();
        b5.ImportDeclaration_();
        b5.QualifiedName("java.util.HashSet");
        b5.ImportModifier(false);
        b5.ImportModifier(false);
        b5._ImportDeclaration();
        b5.ImportDeclaration_();
        b5.QualifiedName("java.util.Map");
        b5.ImportModifier(false);
        b5.ImportModifier(false);
        b5._ImportDeclaration();
        b5.ImportDeclaration_();
        b5.QualifiedName("java.util.Set");
        b5.ImportModifier(false);
        b5.ImportModifier(false);
        b5._ImportDeclaration();
        b5.ImportDeclaration_();
        b5.QualifiedName("org.whole.lang.reflect.EntityDescriptor");
        b5.ImportModifier(false);
        b5.ImportModifier(false);
        b5._ImportDeclaration();
        b5.ImportDeclaration_();
        b5.QualifiedName("org.whole.lang.xsd.codebase.AbstractMappingStrategy");
        b5.ImportModifier(false);
        b5.ImportModifier(false);
        b5._ImportDeclaration();
        b5._ImportDeclarations();
        b5.TypeDeclarations_(1);
        b5.ClassDeclaration_();
        b5.Javadoc_();
        b5.Tags_(1);
        b5.TagElement_();
        b5.TagName("generator");
        b5.DocElements_(1);
        b5.TextElement(" Whole");
        b5._DocElements();
        b5._TagElement();
        b5._Tags();
        b5._Javadoc();
        b5.ExtendedModifiers_(1);
        b5.Modifier("public");
        b5._ExtendedModifiers();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#SimpleName");
        b1.VarName("mappingStrategyClassName");
        b1.Quantifier("!");
        b1._Variable();
        b1.Resolver();
        b5.SimpleType("AbstractMappingStrategy");
        b1.Resolver();
        b5.BodyDeclarations_(19);
        b5.FieldDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("private");
        b5._ExtendedModifiers();
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5.VariableDeclarationFragments_(1);
        b5.VariableDeclarationFragment_();
        b5.SimpleName("mixedDataType");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b5._VariableDeclarationFragment();
        b5._VariableDeclarationFragments();
        b5._FieldDeclaration();
        b5.FieldDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("private");
        b5._ExtendedModifiers();
        b5.ParameterizedType_();
        b5.SimpleType("Set");
        b5.Types_(1);
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5._Types();
        b5._ParameterizedType();
        b5.VariableDeclarationFragments_(1);
        b5.VariableDeclarationFragment_();
        b5.SimpleName("mixedTypes");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b5._VariableDeclarationFragment();
        b5._VariableDeclarationFragments();
        b5._FieldDeclaration();
        b5.FieldDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("private");
        b5._ExtendedModifiers();
        b5.ParameterizedType_();
        b5.SimpleType("Map");
        b5.Types_(2);
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5.ParameterizedType_();
        b5.SimpleType("Map");
        b5.Types_(2);
        b5.SimpleType("String");
        b5.SimpleType("String");
        b5._Types();
        b5._ParameterizedType();
        b5._Types();
        b5._ParameterizedType();
        b5.VariableDeclarationFragments_(1);
        b5.VariableDeclarationFragment_();
        b5.SimpleName("fromEnumValues");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b5._VariableDeclarationFragment();
        b5._VariableDeclarationFragments();
        b5._FieldDeclaration();
        b5.FieldDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("private");
        b5._ExtendedModifiers();
        b5.ParameterizedType_();
        b5.SimpleType("Map");
        b5.Types_(2);
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5.ParameterizedType_();
        b5.SimpleType("Map");
        b5.Types_(2);
        b5.SimpleType("String");
        b5.SimpleType("String");
        b5._Types();
        b5._ParameterizedType();
        b5._Types();
        b5._ParameterizedType();
        b5.VariableDeclarationFragments_(1);
        b5.VariableDeclarationFragment_();
        b5.SimpleName("toEnumValues");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b5._VariableDeclarationFragment();
        b5._VariableDeclarationFragments();
        b5._FieldDeclaration();
        b5.ConstructorDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("public");
        b5._ExtendedModifiers();
        b1.Resolver();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#SimpleName");
        b1.VarName("mappingStrategyClassName");
        b1.Quantifier("!");
        b1._Variable();
        b5.Parameters_(0);
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(7);
        b5.ExpressionStatement_();
        b5.Assignment_();
        b5.FieldAccess_();
        b5.ThisExpression_();
        b1.Resolver();
        b5._ThisExpression();
        b5.SimpleName("mixedDataType");
        b5._FieldAccess();
        b5.AssignmentOperator("=");
        b5.NullLiteral();
        b5._Assignment();
        b5._ExpressionStatement();
        b5.ExpressionStatement_();
        b5.Assignment_();
        b5.FieldAccess_();
        b5.ThisExpression_();
        b1.Resolver();
        b5._ThisExpression();
        b5.SimpleName("mixedTypes");
        b5._FieldAccess();
        b5.AssignmentOperator("=");
        b5.MethodInvocation_();
        b5.SimpleName("Collections");
        b5.Types_(1);
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5._Types();
        b5.SimpleName("emptySet");
        b5.Arguments_(0);
        b5._Arguments();
        b5._MethodInvocation();
        b5._Assignment();
        b5._ExpressionStatement();
        b5.ExpressionStatement_();
        b5.Assignment_();
        b5.FieldAccess_();
        b5.ThisExpression_();
        b1.Resolver();
        b5._ThisExpression();
        b5.SimpleName("fromEnumValues");
        b5._FieldAccess();
        b5.AssignmentOperator("=");
        b5.ClassInstanceCreation_();
        b1.Resolver();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("HashMap");
        b5.Types_(2);
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5.ParameterizedType_();
        b5.SimpleType("Map");
        b5.Types_(2);
        b5.SimpleType("String");
        b5.SimpleType("String");
        b5._Types();
        b5._ParameterizedType();
        b5._Types();
        b5._ParameterizedType();
        b1.Resolver();
        b1.Resolver();
        b5._ClassInstanceCreation();
        b5._Assignment();
        b5._ExpressionStatement();
        b5.ExpressionStatement_();
        b5.Assignment_();
        b5.FieldAccess_();
        b5.ThisExpression_();
        b1.Resolver();
        b5._ThisExpression();
        b5.SimpleName("toEnumValues");
        b5._FieldAccess();
        b5.AssignmentOperator("=");
        b5.ClassInstanceCreation_();
        b1.Resolver();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("HashMap");
        b5.Types_(2);
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5.ParameterizedType_();
        b5.SimpleType("Map");
        b5.Types_(2);
        b5.SimpleType("String");
        b5.SimpleType("String");
        b5._Types();
        b5._ParameterizedType();
        b5._Types();
        b5._ParameterizedType();
        b1.Resolver();
        b1.Resolver();
        b5._ClassInstanceCreation();
        b5._Assignment();
        b5._ExpressionStatement();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#Statement");
        b1.VarName("mixedDataTypeStatement");
        b1.Quantifier("?");
        b1._Variable();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#Statement");
        b1.VarName("mixedTypesStatement");
        b1.Quantifier("?");
        b1._Variable();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#Statement");
        b1.VarName("enumValueMappingStatements");
        b1.Quantifier("*");
        b1._Variable();
        b5._Block();
        b5._ConstructorDeclaration();
        b5.MethodDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("public");
        b5._ExtendedModifiers();
        b1.Resolver();
        b5.SimpleType("String");
        b5.SimpleName("getNamespace");
        b5.Parameters_(0);
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(1);
        b5.ReturnStatement_();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#StringLiteral");
        b1.VarName("namespace");
        b1.Quantifier("!");
        b1._Variable();
        b5._ReturnStatement();
        b5._Block();
        b5._MethodDeclaration();
        b5.MethodDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("public");
        b5._ExtendedModifiers();
        b1.Resolver();
        b5.SimpleType("String");
        b5.SimpleName("getSchemaLocation");
        b5.Parameters_(0);
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(1);
        b5.ReturnStatement_();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#StringLiteral");
        b1.VarName("schemaLocation");
        b1.Quantifier("!");
        b1._Variable();
        b5._ReturnStatement();
        b5._Block();
        b5._MethodDeclaration();
        b5.MethodDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("public");
        b5._ExtendedModifiers();
        b1.Resolver();
        b5.PrimitiveType("boolean");
        b5.SimpleName("isSynthesized");
        b5.Parameters_(0);
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(1);
        b5.ReturnStatement_();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#BooleanLiteral");
        b1.VarName("isSynthesized");
        b1.Quantifier("!");
        b1._Variable();
        b5._ReturnStatement();
        b5._Block();
        b5._MethodDeclaration();
        b5.MethodDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("public");
        b5._ExtendedModifiers();
        b1.Resolver();
        b5.PrimitiveType("boolean");
        b5.SimpleName("isElementsFormQualified");
        b5.Parameters_(0);
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(1);
        b5.ReturnStatement_();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#BooleanLiteral");
        b1.VarName("isElementsFormQualified");
        b1.Quantifier("!");
        b1._Variable();
        b5._ReturnStatement();
        b5._Block();
        b5._MethodDeclaration();
        b5.MethodDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("public");
        b5._ExtendedModifiers();
        b1.Resolver();
        b5.PrimitiveType("boolean");
        b5.SimpleName("isAttributesFormQualified");
        b5.Parameters_(0);
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(1);
        b5.ReturnStatement_();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#BooleanLiteral");
        b1.VarName("isAttributesFormQualified");
        b1.Quantifier("!");
        b1._Variable();
        b5._ReturnStatement();
        b5._Block();
        b5._MethodDeclaration();
        b5.MethodDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("public");
        b5._ExtendedModifiers();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5.SimpleName("getMixedDataType");
        b5.Parameters_(0);
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(1);
        b5.ReturnStatement_();
        b5.SimpleName("mixedDataType");
        b5._ReturnStatement();
        b5._Block();
        b5._MethodDeclaration();
        b5.MethodDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("protected");
        b5._ExtendedModifiers();
        b1.Resolver();
        b5.PrimitiveType("void");
        b5.SimpleName("setMixedDataType");
        b5.Parameters_(1);
        b5.SingleVariableDeclaration_();
        b1.Resolver();
        b5.SimpleType("String");
        b5.Varargs(false);
        b5.SimpleName("uri");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b1.Resolver();
        b5._SingleVariableDeclaration();
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(1);
        b5.ExpressionStatement_();
        b5.Assignment_();
        b5.FieldAccess_();
        b5.ThisExpression_();
        b1.Resolver();
        b5._ThisExpression();
        b5.SimpleName("mixedDataType");
        b5._FieldAccess();
        b5.AssignmentOperator("=");
        b5.MethodInvocation_();
        b1.Resolver();
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("parseEntityDescriptor");
        b5.Arguments_(1);
        b5.SimpleName("uri");
        b5._Arguments();
        b5._MethodInvocation();
        b5._Assignment();
        b5._ExpressionStatement();
        b5._Block();
        b5._MethodDeclaration();
        b5.MethodDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("public");
        b5._ExtendedModifiers();
        b1.Resolver();
        b5.PrimitiveType("boolean");
        b5.SimpleName("isMixedType");
        b5.Parameters_(1);
        b5.SingleVariableDeclaration_();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5.Varargs(false);
        b5.SimpleName("ed");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b1.Resolver();
        b5._SingleVariableDeclaration();
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(1);
        b5.ReturnStatement_();
        b5.MethodInvocation_();
        b5.SimpleName("mixedTypes");
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("contains");
        b5.Arguments_(1);
        b5.SimpleName("ed");
        b5._Arguments();
        b5._MethodInvocation();
        b5._ReturnStatement();
        b5._Block();
        b5._MethodDeclaration();
        b5.MethodDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("protected");
        b5._ExtendedModifiers();
        b1.Resolver();
        b5.PrimitiveType("void");
        b5.SimpleName("setMixedTypes");
        b5.Parameters_(1);
        b5.SingleVariableDeclaration_();
        b1.Resolver();
        b5.SimpleType("String");
        b5.Varargs(true);
        b5.SimpleName("uris");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b1.Resolver();
        b5._SingleVariableDeclaration();
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(2);
        b5.ExpressionStatement_();
        b5.Assignment_();
        b5.SimpleName("mixedTypes");
        b5.AssignmentOperator("=");
        b5.ClassInstanceCreation_();
        b1.Resolver();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("HashSet");
        b5.Types_(1);
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5._Types();
        b5._ParameterizedType();
        b5.Arguments_(1);
        b5.QualifiedName("uris.length");
        b5._Arguments();
        b1.Resolver();
        b5._ClassInstanceCreation();
        b5._Assignment();
        b5._ExpressionStatement();
        b5.EnhancedForStatement_();
        b5.SingleVariableDeclaration_();
        b1.Resolver();
        b5.SimpleType("String");
        b5.Varargs(false);
        b5.SimpleName("uri");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b1.Resolver();
        b5._SingleVariableDeclaration();
        b5.SimpleName("uris");
        b5.ExpressionStatement_();
        b5.MethodInvocation_();
        b5.SimpleName("mixedTypes");
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("add");
        b5.Arguments_(1);
        b5.MethodInvocation_();
        b1.Resolver();
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("parseEntityDescriptor");
        b5.Arguments_(1);
        b5.SimpleName("uri");
        b5._Arguments();
        b5._MethodInvocation();
        b5._Arguments();
        b5._MethodInvocation();
        b5._ExpressionStatement();
        b5._EnhancedForStatement();
        b5._Block();
        b5._MethodDeclaration();
        b5.MethodDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("public");
        b5._ExtendedModifiers();
        b1.Resolver();
        b5.SimpleType("String");
        b5.SimpleName("fromEnumValue");
        b5.Parameters_(2);
        b5.SingleVariableDeclaration_();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5.Varargs(false);
        b5.SimpleName("context");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b1.Resolver();
        b5._SingleVariableDeclaration();
        b5.SingleVariableDeclaration_();
        b1.Resolver();
        b5.SimpleType("String");
        b5.Varargs(false);
        b5.SimpleName("enumValue");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b1.Resolver();
        b5._SingleVariableDeclaration();
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(1);
        b5.ReturnStatement_();
        b5.MethodInvocation_();
        b5.MethodInvocation_();
        b1.Resolver();
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("fromEnumValueMap");
        b5.Arguments_(1);
        b5.SimpleName("context");
        b5._Arguments();
        b5._MethodInvocation();
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("get");
        b5.Arguments_(1);
        b5.SimpleName("enumValue");
        b5._Arguments();
        b5._MethodInvocation();
        b5._ReturnStatement();
        b5._Block();
        b5._MethodDeclaration();
        b5.MethodDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("public");
        b5._ExtendedModifiers();
        b1.Resolver();
        b5.SimpleType("String");
        b5.SimpleName("toEnumValue");
        b5.Parameters_(2);
        b5.SingleVariableDeclaration_();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5.Varargs(false);
        b5.SimpleName("context");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b1.Resolver();
        b5._SingleVariableDeclaration();
        b5.SingleVariableDeclaration_();
        b1.Resolver();
        b5.SimpleType("String");
        b5.Varargs(false);
        b5.SimpleName("value");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b1.Resolver();
        b5._SingleVariableDeclaration();
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(1);
        b5.ReturnStatement_();
        b5.MethodInvocation_();
        b5.MethodInvocation_();
        b1.Resolver();
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("toEnumValueMap");
        b5.Arguments_(1);
        b5.SimpleName("context");
        b5._Arguments();
        b5._MethodInvocation();
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("get");
        b5.Arguments_(1);
        b5.SimpleName("value");
        b5._Arguments();
        b5._MethodInvocation();
        b5._ReturnStatement();
        b5._Block();
        b5._MethodDeclaration();
        b5.MethodDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("protected");
        b5._ExtendedModifiers();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("Map");
        b5.Types_(2);
        b5.SimpleType("String");
        b5.SimpleType("String");
        b5._Types();
        b5._ParameterizedType();
        b5.SimpleName("fromEnumValueMap");
        b5.Parameters_(1);
        b5.SingleVariableDeclaration_();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5.Varargs(false);
        b5.SimpleName("context");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b1.Resolver();
        b5._SingleVariableDeclaration();
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(3);
        b5.VariableDeclarationStatement_();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("Map");
        b5.Types_(2);
        b5.SimpleType("String");
        b5.SimpleType("String");
        b5._Types();
        b5._ParameterizedType();
        b5.VariableDeclarationFragments_(1);
        b5.VariableDeclarationFragment_();
        b5.SimpleName("map");
        b5.ExtraDimensions(0);
        b5.MethodInvocation_();
        b5.SimpleName("fromEnumValues");
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("get");
        b5.Arguments_(1);
        b5.SimpleName("context");
        b5._Arguments();
        b5._MethodInvocation();
        b5._VariableDeclarationFragment();
        b5._VariableDeclarationFragments();
        b5._VariableDeclarationStatement();
        b5.IfStatement_();
        b5.InfixExpression_();
        b5.SimpleName("map");
        b5.InfixOperator("==");
        b5.NullLiteral();
        b5.Expressions_(0);
        b5._Expressions();
        b5._InfixExpression();
        b5.ExpressionStatement_();
        b5.MethodInvocation_();
        b5.SimpleName("fromEnumValues");
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("put");
        b5.Arguments_(2);
        b5.SimpleName("context");
        b5.Assignment_();
        b5.SimpleName("map");
        b5.AssignmentOperator("=");
        b5.ClassInstanceCreation_();
        b1.Resolver();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("HashMap");
        b5.Types_(2);
        b5.SimpleType("String");
        b5.SimpleType("String");
        b5._Types();
        b5._ParameterizedType();
        b1.Resolver();
        b1.Resolver();
        b5._ClassInstanceCreation();
        b5._Assignment();
        b5._Arguments();
        b5._MethodInvocation();
        b5._ExpressionStatement();
        b1.Resolver();
        b5._IfStatement();
        b5.ReturnStatement_();
        b5.SimpleName("map");
        b5._ReturnStatement();
        b5._Block();
        b5._MethodDeclaration();
        b5.MethodDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("protected");
        b5._ExtendedModifiers();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("Map");
        b5.Types_(2);
        b5.SimpleType("String");
        b5.SimpleType("String");
        b5._Types();
        b5._ParameterizedType();
        b5.SimpleName("toEnumValueMap");
        b5.Parameters_(1);
        b5.SingleVariableDeclaration_();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5.Varargs(false);
        b5.SimpleName("context");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b1.Resolver();
        b5._SingleVariableDeclaration();
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(3);
        b5.VariableDeclarationStatement_();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("Map");
        b5.Types_(2);
        b5.SimpleType("String");
        b5.SimpleType("String");
        b5._Types();
        b5._ParameterizedType();
        b5.VariableDeclarationFragments_(1);
        b5.VariableDeclarationFragment_();
        b5.SimpleName("map");
        b5.ExtraDimensions(0);
        b5.MethodInvocation_();
        b5.SimpleName("toEnumValues");
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("get");
        b5.Arguments_(1);
        b5.SimpleName("context");
        b5._Arguments();
        b5._MethodInvocation();
        b5._VariableDeclarationFragment();
        b5._VariableDeclarationFragments();
        b5._VariableDeclarationStatement();
        b5.IfStatement_();
        b5.InfixExpression_();
        b5.SimpleName("map");
        b5.InfixOperator("==");
        b5.NullLiteral();
        b5.Expressions_(0);
        b5._Expressions();
        b5._InfixExpression();
        b5.ExpressionStatement_();
        b5.MethodInvocation_();
        b5.SimpleName("toEnumValues");
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("put");
        b5.Arguments_(2);
        b5.SimpleName("context");
        b5.Assignment_();
        b5.SimpleName("map");
        b5.AssignmentOperator("=");
        b5.ClassInstanceCreation_();
        b1.Resolver();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("HashMap");
        b5.Types_(2);
        b5.SimpleType("String");
        b5.SimpleType("String");
        b5._Types();
        b5._ParameterizedType();
        b1.Resolver();
        b1.Resolver();
        b5._ClassInstanceCreation();
        b5._Assignment();
        b5._Arguments();
        b5._MethodInvocation();
        b5._ExpressionStatement();
        b1.Resolver();
        b5._IfStatement();
        b5.ReturnStatement_();
        b5.SimpleName("map");
        b5._ReturnStatement();
        b5._Block();
        b5._MethodDeclaration();
        b5.MethodDeclaration_();
        b1.Resolver();
        b5.ExtendedModifiers_(1);
        b5.Modifier("protected");
        b5._ExtendedModifiers();
        b1.Resolver();
        b5.PrimitiveType("void");
        b5.SimpleName("addEnumValueMapping");
        b5.Parameters_(3);
        b5.SingleVariableDeclaration_();
        b1.Resolver();
        b5.SimpleType("String");
        b5.Varargs(false);
        b5.SimpleName("uri");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b1.Resolver();
        b5._SingleVariableDeclaration();
        b5.SingleVariableDeclaration_();
        b1.Resolver();
        b5.SimpleType("String");
        b5.Varargs(false);
        b5.SimpleName("value");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b1.Resolver();
        b5._SingleVariableDeclaration();
        b5.SingleVariableDeclaration_();
        b1.Resolver();
        b5.SimpleType("String");
        b5.Varargs(false);
        b5.SimpleName("enumValue");
        b5.ExtraDimensions(0);
        b1.Resolver();
        b1.Resolver();
        b5._SingleVariableDeclaration();
        b5._Parameters();
        b1.Resolver();
        b1.Resolver();
        b5.Block_(3);
        b5.VariableDeclarationStatement_();
        b1.Resolver();
        b5.ParameterizedType_();
        b5.SimpleType("EntityDescriptor");
        b5.Types_(1);
        b5.WildcardType_();
        b1.Resolver();
        b5.UpperBound(false);
        b5._WildcardType();
        b5._Types();
        b5._ParameterizedType();
        b5.VariableDeclarationFragments_(1);
        b5.VariableDeclarationFragment_();
        b5.SimpleName("context");
        b5.ExtraDimensions(0);
        b5.MethodInvocation_();
        b1.Resolver();
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("parseEntityDescriptor");
        b5.Arguments_(1);
        b5.SimpleName("uri");
        b5._Arguments();
        b5._MethodInvocation();
        b5._VariableDeclarationFragment();
        b5._VariableDeclarationFragments();
        b5._VariableDeclarationStatement();
        b5.ExpressionStatement_();
        b5.MethodInvocation_();
        b5.MethodInvocation_();
        b1.Resolver();
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("fromEnumValueMap");
        b5.Arguments_(1);
        b5.SimpleName("context");
        b5._Arguments();
        b5._MethodInvocation();
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("put");
        b5.Arguments_(2);
        b5.SimpleName("enumValue");
        b5.SimpleName("value");
        b5._Arguments();
        b5._MethodInvocation();
        b5._ExpressionStatement();
        b5.ExpressionStatement_();
        b5.MethodInvocation_();
        b5.MethodInvocation_();
        b1.Resolver();
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("toEnumValueMap");
        b5.Arguments_(1);
        b5.SimpleName("context");
        b5._Arguments();
        b5._MethodInvocation();
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("put");
        b5.Arguments_(2);
        b5.SimpleName("value");
        b5.SimpleName("enumValue");
        b5._Arguments();
        b5._MethodInvocation();
        b5._ExpressionStatement();
        b5._Block();
        b5._MethodDeclaration();
        b5._BodyDeclarations();
        b5._ClassDeclaration();
        b5._TypeDeclarations();
        b5._CompilationUnit();
        b1._StageUpFragment();
        b4._FileArtifact();
        b4._Artifacts();
        b4._PackageArtifact();
        b4._Artifacts();
        b4._FolderArtifact();
        b4._Artifacts();
        b1.Resolver();
        b4._Project();
        b4._Projects();
        b4._Workspace();
        b1._StageUpFragment();
        b2.VariableRefStep("normalizedMapping");
        b2.Sequence_(9);
        b2.Filter_();
        b2.Addition_();
        b2.VariableRefStep("fileName");
        b2.StringLiteral("Strategy");
        b2._Addition();
        b2.VariableTest("mappingStrategyClassName");
        b2._Filter();
        b2.Select_();
        b2.Filter_();
        b1.StageUpFragment_();
        b5.ExpressionStatement_();
        b5.MethodInvocation_();
        b1.Resolver();
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("setMixedDataType");
        b5.Arguments_(1);
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#StringLiteral");
        b1.VarName("mixedDataTypeUri");
        b1.Quantifier("!");
        b1._Variable();
        b5._Arguments();
        b5._MethodInvocation();
        b5._ExpressionStatement();
        b1._StageUpFragment();
        b2.VariableTest("mixedDataTypeStatement");
        b2._Filter();
        b2.Filter_();
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#mixedDataType");
        b2.KindTest("IMPL");
        b2._Filter();
        b2.Filter_();
        b2.SelfStep();
        b2.VariableTest("mixedDataTypeUri");
        b2._Filter();
        b2.TemplateNames();
        b2._Select();
        b2.Select_();
        b2.Filter_();
        b1.StageUpFragment_();
        b5.ExpressionStatement_();
        b5.MethodInvocation_();
        b1.Resolver();
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("setMixedTypes");
        b5.Arguments_(1);
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#StringLiteral");
        b1.VarName("mixedTypeUri");
        b1.Quantifier("+");
        b1._Variable();
        b5._Arguments();
        b5._MethodInvocation();
        b5._ExpressionStatement();
        b1._StageUpFragment();
        b2.VariableTest("mixedTypesStatement");
        b2._Filter();
        b2.Filter_();
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#mixedTypes");
        b2.Some_();
        b2.ChildStep();
        b1.Resolver();
        b2._Some();
        b2._Filter();
        b2.Filter_();
        b2.ChildStep();
        b2.VariableTest("mixedTypeUri");
        b2._Filter();
        b2.TemplateNames();
        b2._Select();
        b2.Select_();
        b2.Filter_();
        b1.StageUpFragment_();
        b5.ExpressionStatement_();
        b5.MethodInvocation_();
        b1.Resolver();
        b5.Types_(0);
        b5._Types();
        b5.SimpleName("addEnumValueMapping");
        b5.Arguments_(3);
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#StringLiteral");
        b1.VarName("enumTypeUri");
        b1.Quantifier("!");
        b1._Variable();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#StringLiteral");
        b1.VarName("value");
        b1.Quantifier("!");
        b1._Variable();
        b1.Variable_();
        b1.VarType("http://lang.whole.org/Java#StringLiteral");
        b1.VarName("enumValue");
        b1.Quantifier("!");
        b1._Variable();
        b5._Arguments();
        b5._MethodInvocation();
        b5._ExpressionStatement();
        b1._StageUpFragment();
        b2.VariableTest("enumValueMappingStatements");
        b2._Filter();
        b2.Path_(4);
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#dataTypes");
        b2.Filter_();
        b2.ChildStep();
        b2.And_(2);
        b2.TypeTest("http://xsd.lang.whole.org/Mapping#EnumDataType");
        b2.Some_();
        b2.Filter_();
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#entityType");
        b2.VariableTest("enumTypeUri");
        b2._Filter();
        b1.Resolver();
        b2._Some();
        b2._And();
        b2._Filter();
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#enumValues");
        b2.ChildStep();
        b2._Path();
        b2.Sequence_(2);
        b2.Filter_();
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#value");
        b2.VariableTest("value");
        b2._Filter();
        b2.Filter_();
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#enumValue");
        b2.VariableTest("enumValue");
        b2._Filter();
        b2._Sequence();
        b2.TemplateNames();
        b2._Select();
        b2.Filter_();
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#namespace");
        b2.VariableTest("namespace");
        b2._Filter();
        b2.Filter_();
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#schemaLocation");
        b2.VariableTest("schemaLocation");
        b2._Filter();
        b2.Filter_();
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#synthesized");
        b2.VariableTest("isSynthesized");
        b2._Filter();
        b2.Filter_();
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#elementsFormQualified");
        b2.VariableTest("isElementsFormQualified");
        b2._Filter();
        b2.Filter_();
        b2.FeatureStep("http://xsd.lang.whole.org/Mapping#attributesFormQualified");
        b2.VariableTest("isAttributesFormQualified");
        b2._Filter();
        b2._Sequence();
        b2.TemplateNames();
        b2._Select();
        b2._Block();
        b0._SimpleAction();
        b0._ToolbarActions();
        b0.ContextMenuActions_();
        b0.MenuActions_(0);
        b0._MenuActions();
        b0.MenuActions_(0);
        b0._MenuActions();
        b0.MenuActions_(0);
        b0._MenuActions();
        b0.MenuActions_(0);
        b0._MenuActions();
        b0.MenuActions_(0);
        b0._MenuActions();
        b1.Resolver();
        b0._ContextMenuActions();
        b0._LanguageActionFactory();
    }
}
